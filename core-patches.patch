diff -u -r Packages/Application/Neos.ContentRepository/Classes/Domain/Factory/NodeFactory.php Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Factory/NodeFactory.php
--- Packages/Application/Neos.ContentRepository/Classes/Domain/Factory/NodeFactory.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Factory/NodeFactory.php	2022-05-04 11:36:57.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Reflection\ReflectionService;
 use Neos\Flow\Security\Context as SecurityContext;
 use Neos\ContentRepository\Domain\Model\NodeData;
@@ -28,7 +29,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeFactory
+class NodeFactory implements ResettableInstance
 {
     /**
      * @var array<\Neos\ContentRepository\Domain\Model\Node>
@@ -159,4 +160,9 @@
     {
         $this->nodes = [];
     }
+
+    public function resetInstance(): void
+    {
+        $this->nodes = [];
+    }
 }
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Domain/NodeType/NodeTypeConstraintFactory.php Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/NodeType/NodeTypeConstraintFactory.php
--- Packages/Application/Neos.ContentRepository/Classes/Domain/NodeType/NodeTypeConstraintFactory.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/NodeType/NodeTypeConstraintFactory.php	2022-05-04 11:41:42.000000000 +0200
@@ -16,6 +16,8 @@
 use Neos\ContentRepository\Domain\Model\NodeType;
 use Neos\ContentRepository\Domain\Service\NodeTypeManager;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Utility\Arrays;

 /**
@@ -26,7 +28,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeTypeConstraintFactory
+class NodeTypeConstraintFactory implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Domain/Repository/ContentDimensionRepository.php Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Repository/ContentDimensionRepository.php
--- Packages/Application/Neos.ContentRepository/Classes/Domain/Repository/ContentDimensionRepository.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Repository/ContentDimensionRepository.php	2022-05-04 11:42:25.000000000 +0200
@@ -13,13 +13,14 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\ContentRepository\Domain\Model\ContentDimension;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A repository for access to available content dimensions (from configuration)
  *
  * @Flow\Scope("singleton")
  */
-class ContentDimensionRepository
+class ContentDimensionRepository implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Domain/Repository/NodeDataRepository.php Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Repository/NodeDataRepository.php
--- Packages/Application/Neos.ContentRepository/Classes/Domain/Repository/NodeDataRepository.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Repository/NodeDataRepository.php	2022-05-04 11:39:25.000000000 +0200
@@ -17,6 +17,7 @@
 use Doctrine\ORM\QueryBuilder;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\QueryInterface;
 use Neos\Flow\Persistence\Repository;
 use Neos\Utility\Arrays;
@@ -42,7 +43,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeDataRepository extends Repository
+class NodeDataRepository extends Repository implements ResettableInstance
 {
     /**
      * Constants for setNewIndex()
@@ -1736,4 +1737,11 @@
         $queryBuilder->setParameters($parameters);
         return $queryBuilder;
     }
+
+    public function resetInstance(): void
+    {
+        $this->addedNodes = new \SplObjectStorage();
+        $this->removedNodes = new \SplObjectStorage();
+        $this->highestIndexCache = [];
+    }
 }
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Domain/Repository/WorkspaceRepository.php Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Repository/WorkspaceRepository.php
--- Packages/Application/Neos.ContentRepository/Classes/Domain/Repository/WorkspaceRepository.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Repository/WorkspaceRepository.php	2022-05-04 11:42:34.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\ContentRepository\Domain\Model\Workspace;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\QueryInterface;
 use Neos\Flow\Persistence\QueryResultInterface;
 use Neos\Flow\Persistence\Repository;
@@ -24,7 +25,7 @@
  * @method QueryResultInterface findByBaseWorkspace($baseWorkspace)
  * @method Workspace findByIdentifier($baseWorkspace)
  */
-class WorkspaceRepository extends Repository
+class WorkspaceRepository extends Repository implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Domain/Service/ConfigurationContentDimensionPresetSource.php Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Service/ConfigurationContentDimensionPresetSource.php
--- Packages/Application/Neos.ContentRepository/Classes/Domain/Service/ConfigurationContentDimensionPresetSource.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Service/ConfigurationContentDimensionPresetSource.php	2022-05-04 11:42:49.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Utility\PositionalArraySorter;
 use Neos\ContentRepository\Exception;

@@ -21,7 +22,7 @@
  * Everything is configured in Settings.yaml in path "Neos.ContentRepository.contentDimensions".
  * @Flow\Scope("singleton")
  */
-class ConfigurationContentDimensionPresetSource implements ContentDimensionPresetSourceInterface
+class ConfigurationContentDimensionPresetSource implements ContentDimensionPresetSourceInterface, ImmutableInstance
 {
     /**
      * Dimension presets configuration indexed by dimension name, see ContentDimensionPresetSourceInterface
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Domain/Service/ContentDimensionCombinator.php Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Service/ContentDimensionCombinator.php
--- Packages/Application/Neos.ContentRepository/Classes/Domain/Service/ContentDimensionCombinator.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Service/ContentDimensionCombinator.php	2022-05-04 11:42:56.000000000 +0200
@@ -12,13 +12,14 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Generates dimension combinations.
  *
  * @Flow\Scope("singleton")
  */
-class ContentDimensionCombinator
+class ContentDimensionCombinator implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Domain/Service/ContextFactory.php Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Service/ContextFactory.php
--- Packages/Application/Neos.ContentRepository/Classes/Domain/Service/ContextFactory.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Service/ContextFactory.php	2022-05-04 11:45:50.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Security\Context as SecurityContext;
 use Neos\Utility\Arrays;
 use Neos\Flow\Utility\Now;
@@ -28,7 +29,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ContextFactory implements ContextFactoryInterface
+class ContextFactory implements ContextFactoryInterface, ResettableInstance
 {
     /**
      * @var array<Context>
@@ -315,4 +316,11 @@
     {
         return $this->contextInstances;
     }
+
+    public function resetInstance(): void
+    {
+        $this->contextInstances = [];
+        // FIXME $now should be injected
+        $this->now = new \DateTimeImmutable();
+    }
 }
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Domain/Service/ImportExport/NodeExportService.php Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Service/ImportExport/NodeExportService.php
--- Packages/Application/Neos.ContentRepository/Classes/Domain/Service/ImportExport/NodeExportService.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Service/ImportExport/NodeExportService.php	2022-05-04 11:48:55.000000000 +0200
@@ -16,7 +16,9 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Log\ThrowableStorageInterface;
 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\Property\PropertyMapper;
 use Neos\Flow\Security\Context;
@@ -34,7 +36,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeExportService
+class NodeExportService implements ResettableInstance
 {
     /**
      * @var string
@@ -446,4 +448,9 @@
             throw new ExportException(sprintf('%s exceptions occurred during export. Please see the log for the full exceptions (including stack traces). The exception messages follow below: %s', count($this->exceptionsDuringExport), $exceptionMessages), 1409057360);
         }
     }
+
+    public function resetInstance(): void
+    {
+        // Has state, but nothing to do since export resets properties
+    }
 }
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Domain/Service/ImportExport/NodeImportService.php Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Service/ImportExport/NodeImportService.php
--- Packages/Application/Neos.ContentRepository/Classes/Domain/Service/ImportExport/NodeImportService.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Service/ImportExport/NodeImportService.php	2022-05-04 11:50:02.000000000 +0200
@@ -15,6 +15,7 @@
 use Doctrine\DBAL\Types\Type;
 use Doctrine\ORM\EntityManagerInterface;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\Aspect\PersistenceMagicInterface;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\Persistence\Doctrine\DataTypes\JsonArrayType;
@@ -35,7 +36,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeImportService
+class NodeImportService implements ResettableInstance
 {
     const SUPPORTED_FORMAT_VERSION = '2.0';

@@ -704,4 +705,11 @@
             }
         }
     }
+
+    public function resetInstance(): void
+    {
+        $this->nodeDataStack = [];
+        $this->nodeIdentifierStack = [];
+
+    }
 }
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Domain/Service/NodeMoveIntegrityCheckService.php Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Service/NodeMoveIntegrityCheckService.php
--- Packages/Application/Neos.ContentRepository/Classes/Domain/Service/NodeMoveIntegrityCheckService.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Service/NodeMoveIntegrityCheckService.php	2022-05-04 11:46:32.000000000 +0200
@@ -19,6 +19,7 @@
 use Neos\ContentRepository\Domain\Utility\NodePaths;
 use Neos\ContentRepository\Exception\NodeMoveIntegrityViolationException;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * This is an internal service to prevent disconnected nodes when moving.
@@ -86,7 +87,7 @@
  * @Flow\Scope("singleton")
  * @internal
  */
-class NodeMoveIntegrityCheckService
+class NodeMoveIntegrityCheckService implements ImmutableInstance
 {

     /**
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Domain/Service/NodeService.php Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Service/NodeService.php
--- Packages/Application/Neos.ContentRepository/Classes/Domain/Service/NodeService.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Service/NodeService.php	2022-05-04 11:46:42.000000000 +0200
@@ -19,6 +19,7 @@
 use Neos\ContentRepository\Domain\Utility\NodePaths;
 use Neos\ContentRepository\Exception\NodeExistsException;
 use Neos\ContentRepository\Utility;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Provide method to manage node
@@ -26,7 +27,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class NodeService implements NodeServiceInterface
+class NodeService implements NodeServiceInterface, ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Domain/Service/NodeTypeManager.php Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Service/NodeTypeManager.php
--- Packages/Application/Neos.ContentRepository/Classes/Domain/Service/NodeTypeManager.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Service/NodeTypeManager.php	2022-05-04 11:47:27.000000000 +0200
@@ -18,6 +18,8 @@
 use Neos\ContentRepository\Exception\NodeConfigurationException;
 use Neos\ContentRepository\Exception\NodeTypeIsFinalException;
 use Neos\ContentRepository\Exception\NodeTypeNotFoundException;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;

 /**
  * Manager for node types
@@ -25,7 +27,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class NodeTypeManager
+class NodeTypeManager implements ResettableInstance
 {
     /**
      * Node types, indexed by name
@@ -305,4 +307,9 @@

         return $superType;
     }
+
+    public function resetInstance(): void
+    {
+        // FIXME Do nothing for now, the cached node types should be ok for prod
+    }
 }
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Domain/Service/PublishingService.php Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Service/PublishingService.php
--- Packages/Application/Neos.ContentRepository/Classes/Domain/Service/PublishingService.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Domain/Service/PublishingService.php	2022-05-04 11:47:37.000000000 +0200
@@ -20,6 +20,7 @@
 use Neos\ContentRepository\Domain\Repository\WorkspaceRepository;
 use Neos\ContentRepository\Exception\WorkspaceException;
 use Neos\ContentRepository\Service\Utility\NodePublishingDependencySolver;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A generic ContentRepository Publishing Service
@@ -27,7 +28,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class PublishingService implements PublishingServiceInterface
+class PublishingService implements PublishingServiceInterface, ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Migration/Command/NodeCommandController.php Packages-Patched/Application/Neos.ContentRepository/Classes/Migration/Command/NodeCommandController.php
--- Packages/Application/Neos.ContentRepository/Classes/Migration/Command/NodeCommandController.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Migration/Command/NodeCommandController.php	2022-05-04 11:50:17.000000000 +0200
@@ -18,6 +18,7 @@
 use Neos\ContentRepository\Migration\Domain\Factory\MigrationFactory;
 use Neos\ContentRepository\Migration\Domain\Repository\MigrationStatusRepository;
 use Neos\ContentRepository\Migration\Exception\MigrationException;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\Doctrine\Exception\DatabaseException;
 use Neos\ContentRepository\Migration\Service\NodeMigration;
 use Neos\ContentRepository\Migration\Domain\Model\MigrationStatus;
@@ -29,7 +30,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeCommandController extends CommandController
+class NodeCommandController extends CommandController implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Migration/Domain/Repository/MigrationStatusRepository.php Packages-Patched/Application/Neos.ContentRepository/Classes/Migration/Domain/Repository/MigrationStatusRepository.php
--- Packages/Application/Neos.ContentRepository/Classes/Migration/Domain/Repository/MigrationStatusRepository.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Migration/Domain/Repository/MigrationStatusRepository.php	2022-05-04 11:50:24.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\QueryInterface;
 use Neos\Flow\Persistence\Repository;

@@ -20,7 +21,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class MigrationStatusRepository extends Repository
+class MigrationStatusRepository extends Repository implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Migration/Service/NodeFilter.php Packages-Patched/Application/Neos.ContentRepository/Classes/Migration/Service/NodeFilter.php
--- Packages/Application/Neos.ContentRepository/Classes/Migration/Service/NodeFilter.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Migration/Service/NodeFilter.php	2022-05-04 11:51:02.000000000 +0200
@@ -17,6 +17,7 @@
 use Neos\ContentRepository\Migration\Exception\MigrationException;
 use Neos\ContentRepository\Migration\Filters\FilterInterface;
 use Neos\ContentRepository\Migration\Filters\DoctrineFilterInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\Doctrine\Query;

 /**
@@ -24,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeFilter
+class NodeFilter implements ResettableInstance
 {
     /**
      * @Flow\Inject
@@ -145,4 +146,9 @@

         throw new MigrationException('A filter with the name "' . $name . '" could not be found.', 1343199467);
     }
+
+    public function resetInstance(): void
+    {
+        $this->filterConjunctions = [];
+    }
 }
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Migration/Service/NodeTransformation.php Packages-Patched/Application/Neos.ContentRepository/Classes/Migration/Service/NodeTransformation.php
--- Packages/Application/Neos.ContentRepository/Classes/Migration/Service/NodeTransformation.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Migration/Service/NodeTransformation.php	2022-05-04 11:51:17.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Utility\ObjectAccess;
 use Neos\ContentRepository\Domain\Model\NodeData;
 use Neos\ContentRepository\Migration\Exception\MigrationException;
@@ -23,7 +24,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeTransformation
+class NodeTransformation implements ResettableInstance
 {
     /**
      * @Flow\Inject
@@ -120,4 +121,9 @@

         throw new MigrationException('A transformation with the name "' . $transformationName . '" could not be found.', 1343293064);
     }
+
+    public function resetInstance(): void
+    {
+        $this->transformationConjunctions = [];
+    }
 }
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Security/Authorization/Privilege/Node/TransientNodeCache.php Packages-Patched/Application/Neos.ContentRepository/Classes/Security/Authorization/Privilege/Node/TransientNodeCache.php
--- Packages/Application/Neos.ContentRepository/Classes/Security/Authorization/Privilege/Node/TransientNodeCache.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Security/Authorization/Privilege/Node/TransientNodeCache.php	2022-05-04 11:51:33.000000000 +0200
@@ -6,6 +6,7 @@

 use Neos\ContentRepository\Domain\Model\NodeInterface;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;

 /**
  * Simple cache for nodes that is intended to be used in `NodePrivilegeContext`.
@@ -15,7 +16,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class TransientNodeCache
+class TransientNodeCache implements ResettableInstance
 {

     /**
@@ -40,4 +41,9 @@
         }
         return $node;
     }
+
+    public function resetInstance(): void
+    {
+        $this->nodes = [];
+    }
 }
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Service/AuthorizationService.php Packages-Patched/Application/Neos.ContentRepository/Classes/Service/AuthorizationService.php
--- Packages/Application/Neos.ContentRepository/Classes/Service/AuthorizationService.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Service/AuthorizationService.php	2022-05-04 11:51:44.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Security\Authorization\PrivilegeManagerInterface;
 use Neos\Flow\Security\Context;
 use Neos\ContentRepository\Domain\Model\NodeInterface;
@@ -32,7 +33,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class AuthorizationService
+class AuthorizationService implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Service/FallbackGraphService.php Packages-Patched/Application/Neos.ContentRepository/Classes/Service/FallbackGraphService.php
--- Packages/Application/Neos.ContentRepository/Classes/Service/FallbackGraphService.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Service/FallbackGraphService.php	2022-05-04 11:51:58.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\ContentRepository\Domain\Model\IntraDimension;
 use Neos\ContentRepository\Domain\Service\ContentDimensionPresetSourceInterface;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * The fallback graph application service
@@ -27,7 +28,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class FallbackGraphService
+class FallbackGraphService implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.ContentRepository/Classes/TypeConverter/NodeConverter.php Packages-Patched/Application/Neos.ContentRepository/Classes/TypeConverter/NodeConverter.php
--- Packages/Application/Neos.ContentRepository/Classes/TypeConverter/NodeConverter.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/TypeConverter/NodeConverter.php	2022-05-04 11:52:23.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Error\Messages\Error;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Property\Exception\TypeConverterException;
 use Neos\Flow\Property\PropertyMapper;
@@ -38,7 +39,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeConverter extends AbstractTypeConverter
+class NodeConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var int
diff -u -r Packages/Application/Neos.ContentRepository/Classes/TypeConverter/NodeSerializer.php Packages-Patched/Application/Neos.ContentRepository/Classes/TypeConverter/NodeSerializer.php
--- Packages/Application/Neos.ContentRepository/Classes/TypeConverter/NodeSerializer.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/TypeConverter/NodeSerializer.php	2022-05-04 11:52:30.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\Flow\Property\TypeConverter\AbstractTypeConverter;
 use Neos\ContentRepository\Domain\Model\NodeInterface;
@@ -19,7 +20,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class NodeSerializer extends AbstractTypeConverter
+class NodeSerializer extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Application/Neos.ContentRepository/Classes/TypeConverter/NodeTemplateConverter.php Packages-Patched/Application/Neos.ContentRepository/Classes/TypeConverter/NodeTemplateConverter.php
--- Packages/Application/Neos.ContentRepository/Classes/TypeConverter/NodeTemplateConverter.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/TypeConverter/NodeTemplateConverter.php	2022-05-04 11:52:41.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\ContentRepository\Domain\Model\NodeTemplate;
 use Neos\ContentRepository\Domain\Model\NodeType;
@@ -22,7 +23,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeTemplateConverter extends NodeConverter
+class NodeTemplateConverter extends NodeConverter implements ImmutableInstance
 {
     /**
      * A pattern that separates the node content object type from the node type
diff -u -r Packages/Application/Neos.ContentRepository/Classes/Validation/Validator/NodeIdentifierValidator.php Packages-Patched/Application/Neos.ContentRepository/Classes/Validation/Validator/NodeIdentifierValidator.php
--- Packages/Application/Neos.ContentRepository/Classes/Validation/Validator/NodeIdentifierValidator.php	2022-04-05 11:38:20.000000000 +0200
+++ Packages-Patched/Application/Neos.ContentRepository/Classes/Validation/Validator/NodeIdentifierValidator.php	2022-05-04 11:52:51.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Validation\Validator\AbstractValidator;

 /**
@@ -21,7 +22,7 @@
  * @todo: Replace pattern by value object
  * @Flow\Scope("singleton")
  */
-class NodeIdentifierValidator extends AbstractValidator
+class NodeIdentifierValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * A preg pattern to match against node identifiers
diff -u -r Packages/Application/Neos.Form/Classes/Factory/ArrayFormFactory.php Packages-Patched/Application/Neos.Form/Classes/Factory/ArrayFormFactory.php
--- Packages/Application/Neos.Form/Classes/Factory/ArrayFormFactory.php	2021-08-05 13:19:05.000000000 +0200
+++ Packages-Patched/Application/Neos.Form/Classes/Factory/ArrayFormFactory.php	2022-05-04 11:53:08.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Form\Core\Model\AbstractSection;
 use Neos\Form\Core\Model\FormDefinition;
 use Neos\Form\Core\Model\Renderable\CompositeRenderableInterface;
@@ -23,7 +24,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ArrayFormFactory extends AbstractFormFactory
+class ArrayFormFactory extends AbstractFormFactory implements ImmutableInstance
 {
     /**
      * Build a form definition, depending on some configuration and a "Preset Name".
diff -u -r Packages/Application/Neos.Form/Classes/Persistence/YamlPersistenceManager.php Packages-Patched/Application/Neos.Form/Classes/Persistence/YamlPersistenceManager.php
--- Packages/Application/Neos.Form/Classes/Persistence/YamlPersistenceManager.php	2021-08-05 13:19:05.000000000 +0200
+++ Packages-Patched/Application/Neos.Form/Classes/Persistence/YamlPersistenceManager.php	2022-05-04 11:53:29.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Form\Exception\PersistenceManagerException;
 use Neos\Utility\Files;
 use Symfony\Component\Yaml\Yaml;
@@ -21,7 +22,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class YamlPersistenceManager implements FormPersistenceManagerInterface
+class YamlPersistenceManager implements FormPersistenceManagerInterface, ImmutableInstance
 {
     /**
      * @var string
diff -u -r Packages/Application/Neos.Fusion/Classes/Aspects/FusionCachingAspect.php Packages-Patched/Application/Neos.Fusion/Classes/Aspects/FusionCachingAspect.php
--- Packages/Application/Neos.Fusion/Classes/Aspects/FusionCachingAspect.php	2022-04-05 21:11:34.000000000 +0200
+++ Packages-Patched/Application/Neos.Fusion/Classes/Aspects/FusionCachingAspect.php	2022-05-04 11:54:01.000000000 +0200
@@ -14,12 +14,13 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\JoinPointInterface;
 use Neos\Cache\Frontend\VariableFrontend;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * @Flow\Scope("singleton")
  * @Flow\Aspect
  */
-class FusionCachingAspect
+class FusionCachingAspect implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Fusion/Classes/Core/Cache/ContentCache.php Packages-Patched/Application/Neos.Fusion/Classes/Core/Cache/ContentCache.php
--- Packages/Application/Neos.Fusion/Classes/Core/Cache/ContentCache.php	2022-04-05 21:11:34.000000000 +0200
+++ Packages-Patched/Application/Neos.Fusion/Classes/Core/Cache/ContentCache.php	2022-05-04 11:54:40.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Cache\CacheAwareInterface;
 use Neos\Cache\Frontend\StringFrontend;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMapper;
 use Neos\Flow\Security\Context;
 use Neos\Flow\Utility\Algorithms;
@@ -42,7 +43,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ContentCache
+class ContentCache implements ImmutableInstance
 {
     const CACHE_SEGMENT_START_TOKEN = "\x02";
     const CACHE_SEGMENT_END_TOKEN = "\x03";
diff -u -r Packages/Application/Neos.Fusion/Classes/Core/DslFactory.php Packages-Patched/Application/Neos.Fusion/Classes/Core/DslFactory.php
--- Packages/Application/Neos.Fusion/Classes/Core/DslFactory.php	2022-04-05 21:11:34.000000000 +0200
+++ Packages-Patched/Application/Neos.Fusion/Classes/Core/DslFactory.php	2022-05-04 11:54:10.000000000 +0200
@@ -14,6 +14,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Fusion;

@@ -22,7 +23,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class DslFactory
+class DslFactory implements ImmutableInstance
 {
     /**
      * @Flow\InjectConfiguration("dsl")
diff -u -r Packages/Application/Neos.Fusion/Classes/Core/RuntimeFactory.php Packages-Patched/Application/Neos.Fusion/Classes/Core/RuntimeFactory.php
--- Packages/Application/Neos.Fusion/Classes/Core/RuntimeFactory.php	2022-04-05 21:11:34.000000000 +0200
+++ Packages-Patched/Application/Neos.Fusion/Classes/Core/RuntimeFactory.php	2022-05-04 11:54:16.000000000 +0200
@@ -18,6 +18,7 @@
 use Neos\Flow\Mvc\Controller\Arguments;
 use Neos\Flow\Mvc\Controller\ControllerContext;
 use Neos\Flow\Mvc\Routing\UriBuilder;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Psr\Http\Message\ServerRequestFactoryInterface;

 /**
@@ -26,7 +27,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class RuntimeFactory
+class RuntimeFactory implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Fusion/Classes/Service/DebugStack.php Packages-Patched/Application/Neos.Fusion/Classes/Service/DebugStack.php
--- Packages/Application/Neos.Fusion/Classes/Service/DebugStack.php	2022-04-05 21:11:34.000000000 +0200
+++ Packages-Patched/Application/Neos.Fusion/Classes/Service/DebugStack.php	2022-05-04 11:55:00.000000000 +0200
@@ -12,12 +12,13 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Fusion\DebugMessage;

 /**
  * @Flow\Scope("singleton")
  */
-class DebugStack
+class DebugStack implements ResettableInstance
 {
     /**
      * @var DebugMessage[]
@@ -49,4 +50,9 @@
     {
         $this->data = [];
     }
+
+    public function resetInstance(): void
+    {
+        $this->data = [];
+    }
 }
diff -u -r Packages/Application/Neos.Fusion/Classes/Service/HtmlAugmenter.php Packages-Patched/Application/Neos.Fusion/Classes/Service/HtmlAugmenter.php
--- Packages/Application/Neos.Fusion/Classes/Service/HtmlAugmenter.php	2022-04-05 21:11:34.000000000 +0200
+++ Packages-Patched/Application/Neos.Fusion/Classes/Service/HtmlAugmenter.php	2022-05-04 11:55:07.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Neos\Exception;

 /**
@@ -27,7 +28,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class HtmlAugmenter
+class HtmlAugmenter implements ImmutableInstance
 {
     /**
      * Adds the given $attributes to the $html by augmenting the root element.
diff -u -r Packages/Application/Neos.Fusion.Afx/Classes/Dsl/AfxDslImplementation.php Packages-Patched/Application/Neos.Fusion.Afx/Classes/Dsl/AfxDslImplementation.php
--- Packages/Application/Neos.Fusion.Afx/Classes/Dsl/AfxDslImplementation.php	2022-01-10 16:44:57.000000000 +0100
+++ Packages-Patched/Application/Neos.Fusion.Afx/Classes/Dsl/AfxDslImplementation.php	2022-05-04 11:53:44.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Fusion;
 use Neos\Fusion\Core\DslInterface;
 use Neos\Fusion\Afx\Service\AfxService;
@@ -23,7 +24,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class AfxDslImplementation implements DslInterface
+class AfxDslImplementation implements DslInterface, ImmutableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Fusion.Afx/Classes/Service/AfxService.php Packages-Patched/Application/Neos.Fusion.Afx/Classes/Service/AfxService.php
--- Packages/Application/Neos.Fusion.Afx/Classes/Service/AfxService.php	2022-01-10 16:44:57.000000000 +0100
+++ Packages-Patched/Application/Neos.Fusion.Afx/Classes/Service/AfxService.php	2022-05-04 11:53:54.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Fusion\Afx\Parser\Parser as AfxParser;
 use Neos\Fusion\Afx\Exception\AfxException;

@@ -20,7 +21,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class AfxService
+class AfxService implements ImmutableInstance
 {
     const INDENTATION = '    ';
     const SHORTHAND_META_PATHS = ['@if', '@process'];
diff -u -r Packages/Application/Neos.Imagine/Classes/AbstractImagineFactory.php Packages-Patched/Application/Neos.Imagine/Classes/AbstractImagineFactory.php
--- Packages/Application/Neos.Imagine/Classes/AbstractImagineFactory.php	2022-03-29 11:41:38.000000000 +0200
+++ Packages-Patched/Application/Neos.Imagine/Classes/AbstractImagineFactory.php	2022-05-04 11:55:12.000000000 +0200
@@ -12,13 +12,14 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Abstract factory for Imagine package
  *
  * @Flow\Scope("singleton")
  */
-class AbstractImagineFactory
+class AbstractImagineFactory implements ImmutableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Imagine/Classes/ImagineFactory.php Packages-Patched/Application/Neos.Imagine/Classes/ImagineFactory.php
--- Packages/Application/Neos.Imagine/Classes/ImagineFactory.php	2022-03-29 11:41:38.000000000 +0200
+++ Packages-Patched/Application/Neos.Imagine/Classes/ImagineFactory.php	2022-05-04 11:55:21.000000000 +0200
@@ -12,13 +12,14 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Imagine factory for Imagine package
  *
  * @Flow\Scope("singleton")
  */
-class ImagineFactory extends AbstractImagineFactory
+class ImagineFactory extends AbstractImagineFactory implements ImmutableInstance
 {
     /**
      * @var \Neos\Flow\ObjectManagement\ObjectManagerInterface
diff -u -r Packages/Application/Neos.Media/Classes/Command/MediaCommandController.php Packages-Patched/Application/Neos.Media/Classes/Command/MediaCommandController.php
--- Packages/Application/Neos.Media/Classes/Command/MediaCommandController.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Command/MediaCommandController.php	2022-05-04 12:00:48.000000000 +0200
@@ -20,6 +20,7 @@
 use Doctrine\ORM\EntityManagerInterface;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Cli\CommandController;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\Exception\IllegalObjectTypeException;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\Reflection\ReflectionService;
@@ -44,7 +45,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class MediaCommandController extends CommandController
+class MediaCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Media/Classes/Controller/ThumbnailController.php Packages-Patched/Application/Neos.Media/Classes/Controller/ThumbnailController.php
--- Packages/Application/Neos.Media/Classes/Controller/ThumbnailController.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Controller/ThumbnailController.php	2022-05-04 12:01:36.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\Flow\Mvc\Controller\ActionController;
 use Neos\Flow\Mvc\Exception\StopActionException;
 use Neos\Flow\Mvc\Exception\UnsupportedRequestTypeException;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Media\Domain\Model\Thumbnail;
 use Neos\Media\Domain\Service\ThumbnailService;
 use Neos\Media\Exception\ThumbnailServiceException;
@@ -24,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ThumbnailController extends ActionController
+class ThumbnailController extends ActionController implements ResettableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Media/Classes/Domain/EventListener/ImageEventListener.php Packages-Patched/Application/Neos.Media/Classes/Domain/EventListener/ImageEventListener.php
--- Packages/Application/Neos.Media/Classes/Domain/EventListener/ImageEventListener.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/EventListener/ImageEventListener.php	2022-05-04 12:01:57.000000000 +0200
@@ -14,6 +14,7 @@
 use Doctrine\ORM\Event\LifecycleEventArgs;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Cache\CacheManager;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ResourceManagement\PersistentResource;
 use Neos\Media\Domain\Model\ImageInterface;

@@ -22,7 +23,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ImageEventListener
+class ImageEventListener implements ImmutableInstance
 {
     /**
      * @var CacheManager
diff -u -r Packages/Application/Neos.Media/Classes/Domain/Repository/AssetCollectionRepository.php Packages-Patched/Application/Neos.Media/Classes/Domain/Repository/AssetCollectionRepository.php
--- Packages/Application/Neos.Media/Classes/Domain/Repository/AssetCollectionRepository.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/Repository/AssetCollectionRepository.php	2022-05-04 12:02:02.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\QueryInterface;
 use Neos\Flow\Persistence\Repository;

@@ -20,7 +21,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class AssetCollectionRepository extends Repository
+class AssetCollectionRepository extends Repository implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Application/Neos.Media/Classes/Domain/Repository/AssetRepository.php Packages-Patched/Application/Neos.Media/Classes/Domain/Repository/AssetRepository.php
--- Packages/Application/Neos.Media/Classes/Domain/Repository/AssetRepository.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/Repository/AssetRepository.php	2022-05-04 12:02:17.000000000 +0200
@@ -17,6 +17,7 @@
 use Doctrine\ORM\NonUniqueResultException;
 use Doctrine\ORM\Query\ResultSetMapping;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\Doctrine\Query;
 use Neos\Flow\Persistence\Doctrine\Mapping\Driver\FlowAnnotationDriver;
 use Neos\Flow\Persistence\Exception\IllegalObjectTypeException;
@@ -38,7 +39,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class AssetRepository extends Repository
+class AssetRepository extends Repository implements ImmutableInstance
 {
     /**
      * Doctrine's Entity Manager.
diff -u -r Packages/Application/Neos.Media/Classes/Domain/Repository/AudioRepository.php Packages-Patched/Application/Neos.Media/Classes/Domain/Repository/AudioRepository.php
--- Packages/Application/Neos.Media/Classes/Domain/Repository/AudioRepository.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/Repository/AudioRepository.php	2022-05-04 12:02:22.000000000 +0200
@@ -12,12 +12,13 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A repository for Audio
  *
  * @Flow\Scope("singleton")
  */
-class AudioRepository extends AssetRepository
+class AudioRepository extends AssetRepository implements ImmutableInstance
 {
 }
diff -u -r Packages/Application/Neos.Media/Classes/Domain/Repository/DocumentRepository.php Packages-Patched/Application/Neos.Media/Classes/Domain/Repository/DocumentRepository.php
--- Packages/Application/Neos.Media/Classes/Domain/Repository/DocumentRepository.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/Repository/DocumentRepository.php	2022-05-04 12:02:29.000000000 +0200
@@ -12,12 +12,13 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A repository for Documents
  *
  * @Flow\Scope("singleton")
  */
-class DocumentRepository extends AssetRepository
+class DocumentRepository extends AssetRepository implements ImmutableInstance
 {
 }
diff -u -r Packages/Application/Neos.Media/Classes/Domain/Repository/ImageRepository.php Packages-Patched/Application/Neos.Media/Classes/Domain/Repository/ImageRepository.php
--- Packages/Application/Neos.Media/Classes/Domain/Repository/ImageRepository.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/Repository/ImageRepository.php	2022-05-04 12:02:37.000000000 +0200
@@ -15,6 +15,7 @@

 use Doctrine\ORM\QueryBuilder;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Media\Domain\Model\ImageVariant;

 /**
@@ -22,7 +23,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ImageRepository extends AssetRepository
+class ImageRepository extends AssetRepository implements ImmutableInstance
 {
     /**
      * Return raw data about existing assets and their variants
diff -u -r Packages/Application/Neos.Media/Classes/Domain/Repository/ImportedAssetRepository.php Packages-Patched/Application/Neos.Media/Classes/Domain/Repository/ImportedAssetRepository.php
--- Packages/Application/Neos.Media/Classes/Domain/Repository/ImportedAssetRepository.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/Repository/ImportedAssetRepository.php	2022-05-04 12:02:43.000000000 +0200
@@ -12,12 +12,13 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\Repository;

 /**
  * @Flow\Scope("singleton")
  */
-final class ImportedAssetRepository extends Repository
+final class ImportedAssetRepository extends Repository implements ImmutableInstance
 {
     /**
      * @param string $assetSourceIdentifier
diff -u -r Packages/Application/Neos.Media/Classes/Domain/Repository/TagRepository.php Packages-Patched/Application/Neos.Media/Classes/Domain/Repository/TagRepository.php
--- Packages/Application/Neos.Media/Classes/Domain/Repository/TagRepository.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/Repository/TagRepository.php	2022-05-04 12:02:49.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\Doctrine\QueryResult;
 use Neos\Flow\Persistence\Exception\InvalidQueryException;
 use Neos\Flow\Persistence\QueryInterface;
@@ -28,7 +29,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class TagRepository extends Repository
+class TagRepository extends Repository implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Application/Neos.Media/Classes/Domain/Repository/ThumbnailRepository.php Packages-Patched/Application/Neos.Media/Classes/Domain/Repository/ThumbnailRepository.php
--- Packages/Application/Neos.Media/Classes/Domain/Repository/ThumbnailRepository.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/Repository/ThumbnailRepository.php	2022-05-04 12:02:56.000000000 +0200
@@ -17,6 +17,7 @@
 use Doctrine\ORM\QueryBuilder;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\Repository;
 use Neos\Media\Domain\Model\AssetInterface;
 use Neos\Media\Domain\Model\Thumbnail;
@@ -30,7 +31,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ThumbnailRepository extends Repository
+class ThumbnailRepository extends Repository implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Media/Classes/Domain/Repository/VideoRepository.php Packages-Patched/Application/Neos.Media/Classes/Domain/Repository/VideoRepository.php
--- Packages/Application/Neos.Media/Classes/Domain/Repository/VideoRepository.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/Repository/VideoRepository.php	2022-05-04 12:03:12.000000000 +0200
@@ -12,12 +12,13 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A repository for Videos
  *
  * @Flow\Scope("singleton")
  */
-class VideoRepository extends AssetRepository
+class VideoRepository extends AssetRepository implements ImmutableInstance
 {
 }
diff -u -r Packages/Application/Neos.Media/Classes/Domain/Service/AssetService.php Packages-Patched/Application/Neos.Media/Classes/Domain/Service/AssetService.php
--- Packages/Application/Neos.Media/Classes/Domain/Service/AssetService.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/Service/AssetService.php	2022-05-04 12:03:19.000000000 +0200
@@ -20,6 +20,7 @@
 use Neos\Flow\Mvc\ActionRequest;
 use Neos\Flow\Mvc\Routing\Exception\MissingActionNameException;
 use Neos\Flow\Mvc\Routing\UriBuilder;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Package\PackageManager;
 use Neos\Flow\Persistence\RepositoryInterface;
@@ -48,7 +49,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class AssetService
+class AssetService implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Media/Classes/Domain/Service/AssetSourceService.php Packages-Patched/Application/Neos.Media/Classes/Domain/Service/AssetSourceService.php
--- Packages/Application/Neos.Media/Classes/Domain/Service/AssetSourceService.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/Service/AssetSourceService.php	2022-05-04 12:03:48.000000000 +0200
@@ -16,6 +16,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\ResourceManagement\Exception;
 use Neos\Flow\ResourceManagement\ResourceManager;
@@ -37,7 +38,7 @@
  *
  * @Flow\Scope("singleton")
  */
-final class AssetSourceService
+final class AssetSourceService implements ImmutableInstance
 {
     /**
      * @Flow\InjectConfiguration(path="assetSources")
diff -u -r Packages/Application/Neos.Media/Classes/Domain/Service/AssetVariantGenerator.php Packages-Patched/Application/Neos.Media/Classes/Domain/Service/AssetVariantGenerator.php
--- Packages/Application/Neos.Media/Classes/Domain/Service/AssetVariantGenerator.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/Service/AssetVariantGenerator.php	2022-05-04 12:04:01.000000000 +0200
@@ -14,6 +14,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Media\Domain\Model\Adjustment\ImageAdjustmentInterface;
 use Neos\Media\Domain\Model\AssetInterface;
 use Neos\Media\Domain\Model\AssetVariantInterface;
@@ -27,7 +28,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class AssetVariantGenerator
+class AssetVariantGenerator implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Media/Classes/Domain/Service/ImageService.php Packages-Patched/Application/Neos.Media/Classes/Domain/Service/ImageService.php
--- Packages/Application/Neos.Media/Classes/Domain/Service/ImageService.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/Service/ImageService.php	2022-05-04 12:04:07.000000000 +0200
@@ -17,6 +17,7 @@
 use Imagine\Image\Palette\RGB;
 use Imagine\Imagick\Imagine;
 use Neos\Cache\Frontend\VariableFrontend;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ResourceManagement\Exception;
 use Neos\Flow\ResourceManagement\ResourceManager;
 use Neos\Flow\Utility\Algorithms;
@@ -38,7 +39,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ImageService
+class ImageService implements ImmutableInstance
 {
     /**
      * @var ImagineInterface
diff -u -r Packages/Application/Neos.Media/Classes/Domain/Service/ThumbnailGenerator.php Packages-Patched/Application/Neos.Media/Classes/Domain/Service/ThumbnailGenerator.php
--- Packages/Application/Neos.Media/Classes/Domain/Service/ThumbnailGenerator.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/Service/ThumbnailGenerator.php	2022-05-04 12:05:34.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Media\Domain\Model\AssetInterface;

 /**
@@ -19,7 +20,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ThumbnailGenerator
+class ThumbnailGenerator implements ImmutableInstance
 {
     /**
      * @Flow\InjectConfiguration("autoCreateThumbnailPresets")
diff -u -r Packages/Application/Neos.Media/Classes/Domain/Service/ThumbnailService.php Packages-Patched/Application/Neos.Media/Classes/Domain/Service/ThumbnailService.php
--- Packages/Application/Neos.Media/Classes/Domain/Service/ThumbnailService.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/Service/ThumbnailService.php	2022-05-04 12:06:02.000000000 +0200
@@ -15,6 +15,8 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Log\ThrowableStorageInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\Exception\IllegalObjectTypeException;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\ResourceManagement\ResourceManager;
@@ -35,7 +37,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ThumbnailService
+class ThumbnailService implements ResettableInstance
 {
     /**
      * @Flow\Inject
@@ -293,4 +295,9 @@
     protected function emitThumbnailCreated(Thumbnail $thumbnail): void
     {
     }
+
+    public function resetInstance(): void
+    {
+        $this->thumbnailCache = [];
+    }
 }
diff -u -r Packages/Application/Neos.Media/Classes/Domain/Strategy/AbstractAssetUsageStrategy.php Packages-Patched/Application/Neos.Media/Classes/Domain/Strategy/AbstractAssetUsageStrategy.php
--- Packages/Application/Neos.Media/Classes/Domain/Strategy/AbstractAssetUsageStrategy.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/Strategy/AbstractAssetUsageStrategy.php	2022-05-04 12:06:12.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Media\Domain\Model\AssetInterface;

 /**
@@ -19,7 +20,7 @@
  *
  * @Flow\Scope("singleton")
  */
-abstract class AbstractAssetUsageStrategy implements AssetUsageStrategyInterface
+abstract class AbstractAssetUsageStrategy implements AssetUsageStrategyInterface, ImmutableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Media/Classes/Domain/Strategy/ConfigurationAssetModelMappingStrategy.php Packages-Patched/Application/Neos.Media/Classes/Domain/Strategy/ConfigurationAssetModelMappingStrategy.php
--- Packages/Application/Neos.Media/Classes/Domain/Strategy/ConfigurationAssetModelMappingStrategy.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/Strategy/ConfigurationAssetModelMappingStrategy.php	2022-05-04 12:06:17.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ResourceManagement\PersistentResource;
 use Neos\Utility\MediaTypes;
 use Neos\Utility\PositionalArraySorter;
@@ -21,7 +22,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ConfigurationAssetModelMappingStrategy implements AssetModelMappingStrategyInterface
+class ConfigurationAssetModelMappingStrategy implements AssetModelMappingStrategyInterface, ImmutableInstance
 {
     /**
      * @Flow\InjectConfiguration(package="Neos.Media", path="asset.modelMappingStrategy")
diff -u -r Packages/Application/Neos.Media/Classes/Domain/Strategy/ThumbnailGeneratorStrategy.php Packages-Patched/Application/Neos.Media/Classes/Domain/Strategy/ThumbnailGeneratorStrategy.php
--- Packages/Application/Neos.Media/Classes/Domain/Strategy/ThumbnailGeneratorStrategy.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/Domain/Strategy/ThumbnailGeneratorStrategy.php	2022-05-04 12:06:25.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Configuration\ConfigurationManager;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Reflection\ReflectionService;
 use Neos\Utility\PositionalArraySorter;
@@ -24,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ThumbnailGeneratorStrategy
+class ThumbnailGeneratorStrategy implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Media/Classes/TypeConverter/ArrayConverter.php Packages-Patched/Application/Neos.Media/Classes/TypeConverter/ArrayConverter.php
--- Packages/Application/Neos.Media/Classes/TypeConverter/ArrayConverter.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/TypeConverter/ArrayConverter.php	2022-05-04 12:06:29.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\Flow\Property\TypeConverter\AbstractTypeConverter;
@@ -28,7 +29,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class ArrayConverter extends AbstractTypeConverter
+class ArrayConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Media/Classes/TypeConverter/AspectRatioFromStringConverter.php Packages-Patched/Application/Neos.Media/Classes/TypeConverter/AspectRatioFromStringConverter.php
--- Packages/Application/Neos.Media/Classes/TypeConverter/AspectRatioFromStringConverter.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/TypeConverter/AspectRatioFromStringConverter.php	2022-05-04 12:06:34.000000000 +0200
@@ -14,6 +14,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\Flow\Property\TypeConverter\ObjectConverter;
 use Neos\Media\Domain\ValueObject\Configuration\AspectRatio;
@@ -24,7 +25,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class AspectRatioFromStringConverter extends ObjectConverter
+class AspectRatioFromStringConverter extends ObjectConverter implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Application/Neos.Media/Classes/TypeConverter/AssetCollectionToArrayConverter.php Packages-Patched/Application/Neos.Media/Classes/TypeConverter/AssetCollectionToArrayConverter.php
--- Packages/Application/Neos.Media/Classes/TypeConverter/AssetCollectionToArrayConverter.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/TypeConverter/AssetCollectionToArrayConverter.php	2022-05-04 12:06:40.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\Flow\Property\TypeConverter\AbstractTypeConverter;
@@ -23,7 +24,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class AssetCollectionToArrayConverter extends AbstractTypeConverter
+class AssetCollectionToArrayConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Media/Classes/TypeConverter/AssetInterfaceConverter.php Packages-Patched/Application/Neos.Media/Classes/TypeConverter/AssetInterfaceConverter.php
--- Packages/Application/Neos.Media/Classes/TypeConverter/AssetInterfaceConverter.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/TypeConverter/AssetInterfaceConverter.php	2022-05-04 12:07:13.000000000 +0200
@@ -12,6 +12,8 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\Property\Exception\InvalidDataTypeException;
 use Neos\Flow\Property\Exception\InvalidPropertyMappingConfigurationException;
@@ -38,7 +40,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class AssetInterfaceConverter extends PersistentObjectConverter
+class AssetInterfaceConverter extends PersistentObjectConverter implements ResettableInstance
 {
     /**
      * @var integer
@@ -317,4 +319,9 @@

         return $finalTargetType;
     }
+
+    public function resetInstance(): void
+    {
+        $this->resourcesAlreadyConvertedToAssets = [];
+    }
 }
diff -u -r Packages/Application/Neos.Media/Classes/TypeConverter/ImageConverter.php Packages-Patched/Application/Neos.Media/Classes/TypeConverter/ImageConverter.php
--- Packages/Application/Neos.Media/Classes/TypeConverter/ImageConverter.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/TypeConverter/ImageConverter.php	2022-05-04 12:07:18.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Media\Domain\Model\Image;

 /**
@@ -20,7 +21,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class ImageConverter extends ImageInterfaceConverter
+class ImageConverter extends ImageInterfaceConverter implements ImmutableInstance
 {
     /**
      * @var string
diff -u -r Packages/Application/Neos.Media/Classes/TypeConverter/ImageInterfaceArrayPresenter.php Packages-Patched/Application/Neos.Media/Classes/TypeConverter/ImageInterfaceArrayPresenter.php
--- Packages/Application/Neos.Media/Classes/TypeConverter/ImageInterfaceArrayPresenter.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/TypeConverter/ImageInterfaceArrayPresenter.php	2022-05-04 12:07:28.000000000 +0200
@@ -1,4 +1,5 @@
 <?php
+
 namespace Neos\Media\TypeConverter;

 /*
@@ -12,6 +13,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\Flow\Property\TypeConverter\AbstractTypeConverter;
@@ -27,7 +29,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class ImageInterfaceArrayPresenter extends AbstractTypeConverter
+class ImageInterfaceArrayPresenter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Application/Neos.Media/Classes/TypeConverter/ImageInterfaceConverter.php Packages-Patched/Application/Neos.Media/Classes/TypeConverter/ImageInterfaceConverter.php
--- Packages/Application/Neos.Media/Classes/TypeConverter/ImageInterfaceConverter.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/TypeConverter/ImageInterfaceConverter.php	2022-05-04 12:07:34.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMapper;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\Utility\ObjectAccess;
@@ -25,7 +26,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class ImageInterfaceConverter extends AssetInterfaceConverter
+class ImageInterfaceConverter extends AssetInterfaceConverter implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Media/Classes/TypeConverter/ImageInterfaceJsonSerializer.php Packages-Patched/Application/Neos.Media/Classes/TypeConverter/ImageInterfaceJsonSerializer.php
--- Packages/Application/Neos.Media/Classes/TypeConverter/ImageInterfaceJsonSerializer.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/TypeConverter/ImageInterfaceJsonSerializer.php	2022-05-04 12:07:39.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\Media\Domain\Model\ImageInterface;

@@ -21,7 +22,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class ImageInterfaceJsonSerializer extends ImageInterfaceArrayPresenter
+class ImageInterfaceJsonSerializer extends ImageInterfaceArrayPresenter implements ImmutableInstance
 {
     /**
      * @var string
diff -u -r Packages/Application/Neos.Media/Classes/TypeConverter/ImageVariantConverter.php Packages-Patched/Application/Neos.Media/Classes/TypeConverter/ImageVariantConverter.php
--- Packages/Application/Neos.Media/Classes/TypeConverter/ImageVariantConverter.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/TypeConverter/ImageVariantConverter.php	2022-05-04 12:07:44.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Media\Domain\Model\ImageVariant;

 /**
@@ -20,7 +21,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class ImageVariantConverter extends ImageInterfaceConverter
+class ImageVariantConverter extends ImageInterfaceConverter implements ImmutableInstance
 {
     /**
      * @var string
diff -u -r Packages/Application/Neos.Media/Classes/TypeConverter/TagConverter.php Packages-Patched/Application/Neos.Media/Classes/TypeConverter/TagConverter.php
--- Packages/Application/Neos.Media/Classes/TypeConverter/TagConverter.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/TypeConverter/TagConverter.php	2022-05-04 12:08:00.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\Exception\UnknownObjectException;
 use Neos\Flow\Property\Exception\InvalidTargetException;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
@@ -25,7 +26,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class TagConverter extends PersistentObjectConverter
+class TagConverter extends PersistentObjectConverter implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Application/Neos.Media/Classes/TypeConverter/TagToArrayConverter.php Packages-Patched/Application/Neos.Media/Classes/TypeConverter/TagToArrayConverter.php
--- Packages/Application/Neos.Media/Classes/TypeConverter/TagToArrayConverter.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Classes/TypeConverter/TagToArrayConverter.php	2022-05-04 12:08:05.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\Flow\Property\TypeConverter\AbstractTypeConverter;
@@ -23,7 +24,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class TagToArrayConverter extends AbstractTypeConverter
+class TagToArrayConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Media/Tests/Functional/Fixtures/Controller/ImageController.php Packages-Patched/Application/Neos.Media/Tests/Functional/Fixtures/Controller/ImageController.php
--- Packages/Application/Neos.Media/Tests/Functional/Fixtures/Controller/ImageController.php	2022-03-23 22:07:10.000000000 +0100
+++ Packages-Patched/Application/Neos.Media/Tests/Functional/Fixtures/Controller/ImageController.php	2022-05-04 12:08:16.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Mvc\Controller\ActionController;
 use Neos\Flow\Mvc\View\ViewInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\Exception\IllegalObjectTypeException;
 use Neos\Flow\ResourceManagement\ResourceManager;
 use Neos\FluidAdaptor\View\TemplateView;
@@ -26,7 +27,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ImageController extends ActionController
+class ImageController extends ActionController implements ResettableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Media.Browser/Classes/Controller/AssetCollectionController.php Packages-Patched/Application/Neos.Media.Browser/Classes/Controller/AssetCollectionController.php
--- Packages/Application/Neos.Media.Browser/Classes/Controller/AssetCollectionController.php	2022-03-30 16:49:12.000000000 +0200
+++ Packages-Patched/Application/Neos.Media.Browser/Classes/Controller/AssetCollectionController.php	2022-05-04 11:58:38.000000000 +0200
@@ -17,6 +17,7 @@
 use Neos\Flow\Mvc\Controller\ActionController;
 use Neos\Flow\Mvc\Exception\StopActionException;
 use Neos\Flow\Mvc\View\ViewInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Media\Browser\Domain\Session\BrowserState;
 use Neos\Media\Domain\Model\AssetCollection;
 use Neos\Media\Domain\Model\Dto\AssetConstraints;
@@ -29,7 +30,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class AssetCollectionController extends ActionController
+class AssetCollectionController extends ActionController implements ResettableInstance
 {
     use AddFlashMessageTrait;

diff -u -r Packages/Application/Neos.Media.Browser/Classes/Controller/AssetController.php Packages-Patched/Application/Neos.Media.Browser/Classes/Controller/AssetController.php
--- Packages/Application/Neos.Media.Browser/Classes/Controller/AssetController.php	2022-03-30 16:49:12.000000000 +0200
+++ Packages-Patched/Application/Neos.Media.Browser/Classes/Controller/AssetController.php	2022-05-04 11:59:35.000000000 +0200
@@ -24,6 +24,7 @@
 use Neos\Flow\Mvc\Exception\UnsupportedRequestTypeException;
 use Neos\Flow\Mvc\View\JsonView;
 use Neos\Flow\Mvc\View\ViewInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Package\PackageManager;
 use Neos\Flow\Persistence\Exception\IllegalObjectTypeException;
 use Neos\Flow\Property\TypeConverter\PersistentObjectConverter;
@@ -65,7 +66,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class AssetController extends ActionController
+class AssetController extends ActionController implements ResettableInstance
 {
     use CreateContentContextTrait;
     use BackendUserTranslationTrait;
@@ -987,4 +988,12 @@
         }
         $this->forward($actionName, $controllerName, null, $arguments);
     }
+
+    public function resetInstance(): void
+    {
+        parent::resetInstance();
+        $this->assetSources = [];
+        $this->assetConstraints = [];
+    }
+
 }
diff -u -r Packages/Application/Neos.Media.Browser/Classes/Controller/AssetProxyController.php Packages-Patched/Application/Neos.Media.Browser/Classes/Controller/AssetProxyController.php
--- Packages/Application/Neos.Media.Browser/Classes/Controller/AssetProxyController.php	2022-03-30 16:49:12.000000000 +0200
+++ Packages-Patched/Application/Neos.Media.Browser/Classes/Controller/AssetProxyController.php	2022-05-04 11:59:41.000000000 +0200
@@ -13,13 +13,14 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Mvc\Controller\ActionController;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Media\Domain\Service\AssetSourceService;
 use Neos\Media\Exception\AssetSourceServiceException;

 /**
  * @Flow\Scope("singleton")
  */
-class AssetProxyController extends ActionController
+class AssetProxyController extends ActionController implements ResettableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Media.Browser/Classes/Controller/TagController.php Packages-Patched/Application/Neos.Media.Browser/Classes/Controller/TagController.php
--- Packages/Application/Neos.Media.Browser/Classes/Controller/TagController.php	2022-03-30 16:49:12.000000000 +0200
+++ Packages-Patched/Application/Neos.Media.Browser/Classes/Controller/TagController.php	2022-05-04 11:59:49.000000000 +0200
@@ -17,6 +17,7 @@
 use Neos\Flow\Mvc\Controller\ActionController;
 use Neos\Flow\Mvc\Exception\StopActionException;
 use Neos\Flow\Mvc\View\ViewInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Media\Browser\Domain\Session\BrowserState;
 use Neos\Media\Domain\Model\Dto\AssetConstraints;
 use Neos\Media\Domain\Model\Tag;
@@ -29,7 +30,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class TagController extends ActionController
+class TagController extends ActionController implements ResettableInstance
 {
     use AddFlashMessageTrait;

diff -u -r Packages/Application/Neos.Media.Browser/Classes/Controller/UsageController.php Packages-Patched/Application/Neos.Media.Browser/Classes/Controller/UsageController.php
--- Packages/Application/Neos.Media.Browser/Classes/Controller/UsageController.php	2022-03-30 16:49:12.000000000 +0200
+++ Packages-Patched/Application/Neos.Media.Browser/Classes/Controller/UsageController.php	2022-05-04 12:00:09.000000000 +0200
@@ -20,6 +20,7 @@
 use Neos\Eel\FlowQuery\FlowQuery;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Mvc\Controller\ActionController;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Media\Domain\Model\AssetInterface;
 use Neos\Media\Domain\Service\AssetService;
 use Neos\Neos\Controller\CreateContentContextTrait;
@@ -34,7 +35,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class UsageController extends ActionController
+class UsageController extends ActionController implements ResettableInstance
 {
     use CreateContentContextTrait;

diff -u -r Packages/Application/Neos.Neos/Classes/Aspects/FusionCachingAspect.php Packages-Patched/Application/Neos.Neos/Classes/Aspects/FusionCachingAspect.php
--- Packages/Application/Neos.Neos/Classes/Aspects/FusionCachingAspect.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Aspects/FusionCachingAspect.php	2022-05-04 12:13:53.000000000 +0200
@@ -16,6 +16,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\JoinPointInterface;
 use Neos\Cache\Frontend\VariableFrontend;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Neos\Domain\Model\Site;
 use Neos\Neos\Domain\Repository\SiteRepository;

@@ -23,7 +24,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Aspect
  */
-class FusionCachingAspect
+class FusionCachingAspect implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos/Classes/Aspects/NodeTypeConfigurationEnrichmentAspect.php Packages-Patched/Application/Neos.Neos/Classes/Aspects/NodeTypeConfigurationEnrichmentAspect.php
--- Packages/Application/Neos.Neos/Classes/Aspects/NodeTypeConfigurationEnrichmentAspect.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Aspects/NodeTypeConfigurationEnrichmentAspect.php	2022-05-04 12:14:00.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\JoinPointInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ResourceManagement\ResourceManager;
 use Neos\Utility\Arrays;
 use Neos\ContentRepository\Domain\Model\NodeType;
@@ -21,7 +22,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Aspect
  */
-class NodeTypeConfigurationEnrichmentAspect
+class NodeTypeConfigurationEnrichmentAspect implements ImmutableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Neos/Classes/Aspects/PluginUriAspect.php Packages-Patched/Application/Neos.Neos/Classes/Aspects/PluginUriAspect.php
--- Packages/Application/Neos.Neos/Classes/Aspects/PluginUriAspect.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Aspects/PluginUriAspect.php	2022-05-04 12:14:08.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\JoinPointInterface;
 use Neos\Flow\Mvc\ActionRequest;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Neos\Service\PluginService;
 use Neos\ContentRepository\Domain\Model\Node;
@@ -24,7 +25,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Aspect
  */
-class PluginUriAspect
+class PluginUriAspect implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos/Classes/Aspects/ScrambleTranslationAspect.php Packages-Patched/Application/Neos.Neos/Classes/Aspects/ScrambleTranslationAspect.php
--- Packages/Application/Neos.Neos/Classes/Aspects/ScrambleTranslationAspect.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Aspects/ScrambleTranslationAspect.php	2022-05-04 12:14:13.000000000 +0200
@@ -13,13 +13,14 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\JoinPointInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Utility\Unicode\Functions as UnicodeFunctions;

 /**
  * @Flow\Scope("singleton")
  * @Flow\Aspect
  */
-class ScrambleTranslationAspect
+class ScrambleTranslationAspect implements ImmutableInstance
 {
     /**
      * @Flow\Around("setting(Neos.Neos.userInterface.scrambleTranslatedLabels) && method(Neos\Flow\I18n\Translator->translate.*())")
diff -u -r Packages/Application/Neos.Neos/Classes/Aspects/SiteRepositoryCachingAspect.php Packages-Patched/Application/Neos.Neos/Classes/Aspects/SiteRepositoryCachingAspect.php
--- Packages/Application/Neos.Neos/Classes/Aspects/SiteRepositoryCachingAspect.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Aspects/SiteRepositoryCachingAspect.php	2022-05-04 12:14:40.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\JoinPointInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Utility\Environment;
 use Neos\Neos\Domain\Model\Domain;
 use Neos\Neos\Domain\Model\Site;
@@ -23,7 +24,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Aspect
  */
-class SiteRepositoryCachingAspect
+class SiteRepositoryCachingAspect implements ResettableInstance
 {
     /**
      * @Flow\Inject
@@ -68,4 +69,10 @@
         }
         return $this->domainForActiveRequest;
     }
+
+    public function resetInstance(): void
+    {
+        $this->firstOnlineSite = false;
+        $this->domainForActiveRequest = false;
+    }
 }
diff -u -r Packages/Application/Neos.Neos/Classes/Command/DomainCommandController.php Packages-Patched/Application/Neos.Neos/Classes/Command/DomainCommandController.php
--- Packages/Application/Neos.Neos/Classes/Command/DomainCommandController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Command/DomainCommandController.php	2022-05-04 12:14:49.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Cli\CommandController;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Validation\ValidatorResolver;
 use Neos\Neos\Domain\Model\Domain;
 use Neos\Neos\Domain\Model\Site;
@@ -24,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class DomainCommandController extends CommandController
+class DomainCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @var DomainRepository
diff -u -r Packages/Application/Neos.Neos/Classes/Command/NodeCommandControllerPlugin.php Packages-Patched/Application/Neos.Neos/Classes/Command/NodeCommandControllerPlugin.php
--- Packages/Application/Neos.Neos/Classes/Command/NodeCommandControllerPlugin.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Command/NodeCommandControllerPlugin.php	2022-05-04 12:15:36.000000000 +0200
@@ -17,6 +17,8 @@
 use Neos\Eel\FlowQuery\FlowQuery;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Cli\ConsoleOutput;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\Exception\IllegalObjectTypeException;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Neos\Exception as NeosException;
@@ -40,7 +42,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeCommandControllerPlugin implements EventDispatchingNodeCommandControllerPluginInterface
+class NodeCommandControllerPlugin implements EventDispatchingNodeCommandControllerPluginInterface, ResettableInstance
 {
     /**
      * @Flow\Inject
@@ -371,4 +373,10 @@
             call_user_func_array($callback, $eventPayload);
         }
     }
+
+    public function resetInstance(): void
+    {
+        $this->eventCallbacks = null;
+        $this->output = null;
+    }
 }
diff -u -r Packages/Application/Neos.Neos/Classes/Command/SiteCommandController.php Packages-Patched/Application/Neos.Neos/Classes/Command/SiteCommandController.php
--- Packages/Application/Neos.Neos/Classes/Command/SiteCommandController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Command/SiteCommandController.php	2022-05-04 12:15:46.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\Flow\Cli\CommandController;
 use Neos\Flow\Log\ThrowableStorageInterface;
 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Package\PackageManager;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Neos\Domain\Repository\SiteRepository;
@@ -33,7 +34,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class SiteCommandController extends CommandController
+class SiteCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos/Classes/Command/UserCommandController.php Packages-Patched/Application/Neos.Neos/Classes/Command/UserCommandController.php
--- Packages/Application/Neos.Neos/Classes/Command/UserCommandController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Command/UserCommandController.php	2022-05-04 12:15:52.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Cli\CommandController;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Security\Account;
 use Neos\Flow\Security\Exception\NoSuchRoleException;
 use Neos\Flow\Security\Policy\Role;
@@ -25,7 +26,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class UserCommandController extends CommandController
+class UserCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos/Classes/Command/WorkspaceCommandController.php Packages-Patched/Application/Neos.Neos/Classes/Command/WorkspaceCommandController.php
--- Packages/Application/Neos.Neos/Classes/Command/WorkspaceCommandController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Command/WorkspaceCommandController.php	2022-05-04 12:15:56.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Cli\CommandController;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Neos\Domain\Model\User;
 use Neos\Neos\Domain\Service\UserService;
 use Neos\Neos\Service\PublishingService;
@@ -25,7 +26,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class WorkspaceCommandController extends CommandController
+class WorkspaceCommandController extends CommandController implements ResettableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Backend/BackendController.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Backend/BackendController.php
--- Packages/Application/Neos.Neos/Classes/Controller/Backend/BackendController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Backend/BackendController.php	2022-05-04 12:16:06.000000000 +0200
@@ -22,6 +22,7 @@
 use Neos\Flow\Mvc\Exception\StopActionException;
 use Neos\Flow\Mvc\Exception\UnsupportedRequestTypeException;
 use Neos\Flow\Mvc\Routing\Exception\MissingActionNameException;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Package\Exception\UnknownPackageException;
 use Neos\Flow\Persistence\Exception\IllegalObjectTypeException;
 use Neos\Flow\Session\Exception\SessionNotStartedException;
@@ -37,7 +38,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class BackendController extends ActionController
+class BackendController extends ActionController implements ResettableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Backend/ContentController.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Backend/ContentController.php
--- Packages/Application/Neos.Neos/Classes/Controller/Backend/ContentController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Backend/ContentController.php	2022-05-04 12:16:16.000000000 +0200
@@ -17,6 +17,7 @@
 use Neos\Flow\I18n\EelHelper\TranslationHelper;
 use Neos\Flow\Mvc\Controller\ActionController;
 use Neos\Flow\Mvc\Exception\NoSuchArgumentException;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\Exception\IllegalObjectTypeException;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\Property\PropertyMapper;
@@ -45,7 +46,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ContentController extends ActionController
+class ContentController extends ActionController implements ResettableInstance
 {
     use BackendUserTranslationTrait;
     use CreateContentContextTrait;
diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Backend/ImpersonateController.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Backend/ImpersonateController.php
--- Packages/Application/Neos.Neos/Classes/Controller/Backend/ImpersonateController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Backend/ImpersonateController.php	2022-05-04 12:16:23.000000000 +0200
@@ -18,6 +18,7 @@
 use Neos\Flow\Mvc\Exception\StopActionException;
 use Neos\Flow\Mvc\Routing\UriBuilder;
 use Neos\Flow\Mvc\View\JsonView;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Security\Account;
 use Neos\Neos\Domain\Model\User;
 use Neos\Party\Domain\Service\PartyService;
@@ -28,7 +29,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ImpersonateController extends ActionController
+class ImpersonateController extends ActionController implements ResettableInstance
 {
     /**
      * @var ImpersonateService
diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Backend/MenuHelper.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Backend/MenuHelper.php
--- Packages/Application/Neos.Neos/Classes/Controller/Backend/MenuHelper.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Backend/MenuHelper.php	2022-05-04 12:16:50.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Mvc\Controller\ControllerContext;
 use Neos\Flow\Mvc\Routing\Exception\MissingActionNameException;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Security\Authorization\PrivilegeManagerInterface;
 use Neos\Neos\Security\Authorization\Privilege\ModulePrivilege;
 use Neos\Neos\Security\Authorization\Privilege\ModulePrivilegeSubject;
@@ -28,7 +29,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class MenuHelper
+class MenuHelper implements ResettableInstance
 {
     /**
      * @var array
@@ -224,4 +225,9 @@
             'position' => $moduleConfiguration['position'] ?? null,
         ];
     }
+
+    public function resetInstance(): void
+    {
+        $this->moduleListFirstLevelCache = null;
+    }
 }
diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Backend/ModuleController.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Backend/ModuleController.php
--- Packages/Application/Neos.Neos/Classes/Controller/Backend/ModuleController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Backend/ModuleController.php	2022-05-04 12:17:01.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\Flow\Mvc\ActionResponse;
 use Neos\Flow\Mvc\Controller\ActionController;
 use Neos\Flow\Mvc\Dispatcher;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Security\Context;
 use Neos\Utility\Arrays;
 use Neos\Utility\MediaTypes;
@@ -25,7 +26,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class ModuleController extends ActionController
+class ModuleController extends ActionController implements ResettableInstance
 {
     use BackendUserTranslationTrait;

diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Backend/SchemaController.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Backend/SchemaController.php
--- Packages/Application/Neos.Neos/Classes/Controller/Backend/SchemaController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Backend/SchemaController.php	2022-05-04 12:17:10.000000000 +0200
@@ -16,12 +16,13 @@
 use Neos\Cache\Frontend\VariableFrontend;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Mvc\Controller\ActionController;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Neos\Service\NodeTypeSchemaBuilder;

 /**
  * @Flow\Scope("singleton")
  */
-class SchemaController extends ActionController
+class SchemaController extends ActionController implements ResettableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Backend/SettingsController.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Backend/SettingsController.php
--- Packages/Application/Neos.Neos/Classes/Controller/Backend/SettingsController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Backend/SettingsController.php	2022-05-04 12:17:15.000000000 +0200
@@ -13,13 +13,14 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Mvc\Controller\ActionController;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Utility\Arrays;
 use Neos\Utility\PositionalArraySorter;

 /**
  * @Flow\Scope("singleton")
  */
-class SettingsController extends ActionController
+class SettingsController extends ActionController implements ResettableInstance
 {
     /**
      * @return string
diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Frontend/NodeController.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Frontend/NodeController.php
--- Packages/Application/Neos.Neos/Classes/Controller/Frontend/NodeController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Frontend/NodeController.php	2022-05-04 12:17:21.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Mvc\Controller\ActionController;
 use Neos\Flow\Mvc\Exception\NoSuchArgumentException;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Property\PropertyMapper;
 use Neos\Flow\Security\Authorization\PrivilegeManagerInterface;
 use Neos\Flow\Session\Exception\SessionNotStartedException;
@@ -32,7 +33,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeController extends ActionController
+class NodeController extends ActionController implements ResettableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Module/AbstractModuleController.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Module/AbstractModuleController.php
--- Packages/Application/Neos.Neos/Classes/Controller/Module/AbstractModuleController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Module/AbstractModuleController.php	2022-05-04 12:18:03.000000000 +0200
@@ -14,12 +14,13 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Mvc\Controller\ActionController;
 use Neos\Flow\Mvc\View\ViewInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Neos\Controller\BackendUserTranslationTrait;

 /**
  * @Flow\Scope("singleton")
  */
-abstract class AbstractModuleController extends ActionController
+abstract class AbstractModuleController extends ActionController implements ResettableInstance
 {
     use BackendUserTranslationTrait;

@@ -72,4 +73,11 @@
     {
         return false;
     }
+
+    public function resetInstance(): void
+    {
+        parent::resetInstance();
+        $this->moduleConfiguration = null;
+    }
+
 }
diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Module/Administration/PackagesController.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Module/Administration/PackagesController.php
--- Packages/Application/Neos.Neos/Classes/Controller/Module/Administration/PackagesController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Module/Administration/PackagesController.php	2022-05-04 12:18:26.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Package;
 use Neos\Flow\Package\PackageManager;
 use Neos\Neos\Controller\Module\AbstractModuleController;
@@ -19,7 +20,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class PackagesController extends AbstractModuleController
+class PackagesController extends AbstractModuleController implements ResettableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Module/AdministrationController.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Module/AdministrationController.php
--- Packages/Application/Neos.Neos/Classes/Controller/Module/AdministrationController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Module/AdministrationController.php	2022-05-04 12:18:14.000000000 +0200
@@ -12,10 +12,11 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;

 /**
  * @Flow\Scope("singleton")
  */
-class AdministrationController extends AbstractModuleController
+class AdministrationController extends AbstractModuleController implements ResettableInstance
 {
 }
diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Module/Management/WorkspacesController.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Module/Management/WorkspacesController.php
--- Packages/Application/Neos.Neos/Classes/Controller/Module/Management/WorkspacesController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Module/Management/WorkspacesController.php	2022-05-04 12:18:34.000000000 +0200
@@ -18,6 +18,7 @@
 use Neos\Error\Messages\Message;
 use Neos\Flow\I18n\Translator;
 use Neos\Flow\Mvc\ActionRequest;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Package\PackageManager;
 use Neos\Flow\Property\PropertyMapper;
 use Neos\Flow\Property\TypeConverter\PersistentObjectConverter;
@@ -45,7 +46,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class WorkspacesController extends AbstractModuleController
+class WorkspacesController extends AbstractModuleController implements ResettableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Module/ManagementController.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Module/ManagementController.php
--- Packages/Application/Neos.Neos/Classes/Controller/Module/ManagementController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Module/ManagementController.php	2022-05-04 12:18:20.000000000 +0200
@@ -12,10 +12,11 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;

 /**
  * @Flow\Scope("singleton")
  */
-class ManagementController extends AbstractModuleController
+class ManagementController extends AbstractModuleController implements ResettableInstance
 {
 }
diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Module/User/UserSettingsController.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Module/User/UserSettingsController.php
--- Packages/Application/Neos.Neos/Classes/Controller/Module/User/UserSettingsController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Module/User/UserSettingsController.php	2022-05-04 12:19:07.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\Error\Messages\Message;
 use Neos\Flow\I18n\EelHelper\TranslationHelper;
 use Neos\Flow\I18n\Translator;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Property\PropertyMappingConfiguration;
 use Neos\Flow\Property\TypeConverter\PersistentObjectConverter;
 use Neos\Flow\Security\Account;
@@ -29,7 +30,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class UserSettingsController extends AbstractModuleController
+class UserSettingsController extends AbstractModuleController implements ResettableInstance
 {
     /**
      * @Flow\Inject
@@ -231,4 +232,12 @@
             'electronicAddressUsageTypes' => $electronicAddressUsageTypes
         ]);
     }
+
+    public function resetInstance(): void
+    {
+        parent::resetInstance();
+        $this->currentUser = null;
+    }
+
+
 }
diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Module/UserController.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Module/UserController.php
--- Packages/Application/Neos.Neos/Classes/Controller/Module/UserController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Module/UserController.php	2022-05-04 12:18:22.000000000 +0200
@@ -12,10 +12,11 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;

 /**
  * @Flow\Scope("singleton")
  */
-class UserController extends AbstractModuleController
+class UserController extends AbstractModuleController implements ResettableInstance
 {
 }
diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Service/AssetProxiesController.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Service/AssetProxiesController.php
--- Packages/Application/Neos.Neos/Classes/Controller/Service/AssetProxiesController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Service/AssetProxiesController.php	2022-05-04 12:19:17.000000000 +0200
@@ -16,6 +16,7 @@
 use Neos\Flow\Mvc\Exception\StopActionException;
 use Neos\Flow\Mvc\Exception\UnsupportedRequestTypeException;
 use Neos\Flow\Mvc\View\ViewInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\FluidAdaptor\View\TemplateView;
 use Neos\Media\Domain\Model\AssetSource\AssetProxy\AssetProxyInterface;
 use Neos\Media\Domain\Model\Dto\AssetConstraints;
@@ -31,7 +32,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class AssetProxiesController extends ActionController
+class AssetProxiesController extends ActionController implements ResettableInstance
 {
     use BackendUserTranslationTrait;

diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Service/AssetsController.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Service/AssetsController.php
--- Packages/Application/Neos.Neos/Classes/Controller/Service/AssetsController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Service/AssetsController.php	2022-05-04 12:19:26.000000000 +0200
@@ -16,6 +16,7 @@
 use Neos\Flow\Mvc\Exception\StopActionException;
 use Neos\Flow\Mvc\Exception\UnsupportedRequestTypeException;
 use Neos\Flow\Mvc\View\ViewInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\FluidAdaptor\View\TemplateView;
 use Neos\Media\Domain\Repository\AssetRepository;
 use Neos\Media\Domain\Repository\TagRepository;
@@ -27,7 +28,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class AssetsController extends ActionController
+class AssetsController extends ActionController implements ResettableInstance
 {
     use BackendUserTranslationTrait;

diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Service/NodesController.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Service/NodesController.php
--- Packages/Application/Neos.Neos/Classes/Controller/Service/NodesController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Service/NodesController.php	2022-05-04 12:19:37.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Mvc\Controller\ActionController;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Property\PropertyMapper;
 use Neos\FluidAdaptor\View\TemplateView;
 use Neos\Neos\Controller\BackendUserTranslationTrait;
@@ -32,7 +33,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodesController extends ActionController
+class NodesController extends ActionController implements ResettableInstance
 {
     use BackendUserTranslationTrait;
     use CreateContentContextTrait;
diff -u -r Packages/Application/Neos.Neos/Classes/Controller/Service/WorkspacesController.php Packages-Patched/Application/Neos.Neos/Classes/Controller/Service/WorkspacesController.php
--- Packages/Application/Neos.Neos/Classes/Controller/Service/WorkspacesController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Controller/Service/WorkspacesController.php	2022-05-04 12:19:41.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Mvc\Controller\ActionController;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Property\TypeConverter\PersistentObjectConverter;
 use Neos\FluidAdaptor\View\TemplateView;
 use Neos\Neos\View\Service\WorkspaceJsonView;
@@ -24,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class WorkspacesController extends ActionController
+class WorkspacesController extends ActionController implements ResettableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Neos/Classes/Domain/Repository/DomainRepository.php Packages-Patched/Application/Neos.Neos/Classes/Domain/Repository/DomainRepository.php
--- Packages/Application/Neos.Neos/Classes/Domain/Repository/DomainRepository.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Domain/Repository/DomainRepository.php	2022-05-04 12:19:51.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Core\Bootstrap;
 use Neos\Flow\Http\HttpRequestHandlerInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\QueryInterface;
 use Neos\Flow\Persistence\Repository;
 use Neos\Neos\Domain\Model\Domain;
@@ -25,7 +26,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class DomainRepository extends Repository
+class DomainRepository extends Repository implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos/Classes/Domain/Repository/SiteRepository.php Packages-Patched/Application/Neos.Neos/Classes/Domain/Repository/SiteRepository.php
--- Packages/Application/Neos.Neos/Classes/Domain/Repository/SiteRepository.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Domain/Repository/SiteRepository.php	2022-05-04 12:20:18.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\QueryInterface;
 use Neos\Flow\Persistence\QueryResultInterface;
 use Neos\Flow\Persistence\Repository;
@@ -24,7 +25,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class SiteRepository extends Repository
+class SiteRepository extends Repository implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Application/Neos.Neos/Classes/Domain/Repository/UserRepository.php Packages-Patched/Application/Neos.Neos/Classes/Domain/Repository/UserRepository.php
--- Packages/Application/Neos.Neos/Classes/Domain/Repository/UserRepository.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Domain/Repository/UserRepository.php	2022-05-04 12:20:28.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\Doctrine\Repository;
 use Neos\Flow\Persistence\QueryInterface;
 use Neos\Flow\Persistence\QueryResultInterface;
@@ -22,7 +23,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class UserRepository extends Repository
+class UserRepository extends Repository implements ImmutableInstance
 {
     /**
      * @return QueryResultInterface
diff -u -r Packages/Application/Neos.Neos/Classes/Domain/Service/ConfigurationContentDimensionPresetSource.php Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/ConfigurationContentDimensionPresetSource.php
--- Packages/Application/Neos.Neos/Classes/Domain/Service/ConfigurationContentDimensionPresetSource.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/ConfigurationContentDimensionPresetSource.php	2022-05-04 12:20:28.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A Dimension Preset Source that gets presets from settings
@@ -19,7 +20,7 @@
  * Everything is configured in Settings.yaml in path "Neos.ContentRepository.contentDimensions".
  * @Flow\Scope("singleton")
  */
-class ConfigurationContentDimensionPresetSource extends \Neos\ContentRepository\Domain\Service\ConfigurationContentDimensionPresetSource implements ContentDimensionPresetSourceInterface
+class ConfigurationContentDimensionPresetSource extends \Neos\ContentRepository\Domain\Service\ConfigurationContentDimensionPresetSource implements ContentDimensionPresetSourceInterface, ImmutableInstance
 {
     /**
      * {@inheritdoc}
diff -u -r Packages/Application/Neos.Neos/Classes/Domain/Service/ContentContextFactory.php Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/ContentContextFactory.php
--- Packages/Application/Neos.Neos/Classes/Domain/Service/ContentContextFactory.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/ContentContextFactory.php	2022-05-04 12:20:42.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Utility\Arrays;
 use Neos\Neos\Domain\Model\Domain;
 use Neos\Neos\Domain\Model\Site;
@@ -27,7 +28,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ContentContextFactory extends ContextFactory
+class ContentContextFactory extends ContextFactory implements ResettableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos/Classes/Domain/Service/DomainMatchingStrategy.php Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/DomainMatchingStrategy.php
--- Packages/Application/Neos.Neos/Classes/Domain/Service/DomainMatchingStrategy.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/DomainMatchingStrategy.php	2022-05-04 12:20:47.000000000 +0200
@@ -12,13 +12,14 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Strategy for matching domains
  *
  * @Flow\Scope("singleton")
  */
-class DomainMatchingStrategy
+class DomainMatchingStrategy implements ImmutableInstance
 {
     const EXACTMATCH = 300;
     const NOMATCH = -300;
diff -u -r Packages/Application/Neos.Neos/Classes/Domain/Service/NodeSearchService.php Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/NodeSearchService.php
--- Packages/Application/Neos.Neos/Classes/Domain/Service/NodeSearchService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/NodeSearchService.php	2022-05-04 12:20:54.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\ContentRepository\Validation\Validator\NodeIdentifierValidator;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\ContentRepository\Domain\Factory\NodeFactory;
 use Neos\ContentRepository\Domain\Model\NodeInterface;
@@ -24,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeSearchService implements NodeSearchServiceInterface
+class NodeSearchService implements NodeSearchServiceInterface, ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos/Classes/Domain/Service/NodeShortcutResolver.php Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/NodeShortcutResolver.php
--- Packages/Application/Neos.Neos/Classes/Domain/Service/NodeShortcutResolver.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/NodeShortcutResolver.php	2022-05-04 12:21:13.000000000 +0200
@@ -11,6 +11,7 @@
  * source code.
  */

+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Media\Domain\Model\AssetInterface;
 use Neos\Neos\Service\LinkingService;
 use Neos\ContentRepository\Domain\Model\NodeInterface;
@@ -21,7 +22,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeShortcutResolver
+class NodeShortcutResolver implements ResettableInstance
 {
     /**
      * @var NodeInterface
@@ -79,4 +80,9 @@

         return $node;
     }
+
+    public function resetInstance(): void
+    {
+        $this->node = null;
+    }
 }
diff -u -r Packages/Application/Neos.Neos/Classes/Domain/Service/SiteExportService.php Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/SiteExportService.php
--- Packages/Application/Neos.Neos/Classes/Domain/Service/SiteExportService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/SiteExportService.php	2022-05-04 12:21:49.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Package\PackageManager;
 use Neos\Utility\Files;
 use Neos\Neos\Domain\Model\Site;
@@ -24,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class SiteExportService
+class SiteExportService implements ResettableInstance
 {
     /**
      * @Flow\Inject
@@ -178,4 +179,10 @@

         $this->xmlWriter->endElement();
     }
+
+    public function resetInstance(): void
+    {
+        $this->resourcesPath = null;
+        $this->xmlWriter = null;
+    }
 }
diff -u -r Packages/Application/Neos.Neos/Classes/Domain/Service/SiteImportService.php Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/SiteImportService.php
--- Packages/Application/Neos.Neos/Classes/Domain/Service/SiteImportService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/SiteImportService.php	2022-05-04 12:22:14.000000000 +0200
@@ -12,7 +12,9 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Package\Exception\InvalidPackageStateException;
 use Neos\Flow\Package\Exception\UnknownPackageException;
 use Neos\Flow\Package\PackageManager;
@@ -36,7 +38,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class SiteImportService
+class SiteImportService implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos/Classes/Domain/Service/SiteService.php Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/SiteService.php
--- Packages/Application/Neos.Neos/Classes/Domain/Service/SiteService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/SiteService.php	2022-05-04 12:22:22.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\ContentRepository\Domain\Model\NodeInterface;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Media\Domain\Model\Asset;
 use Neos\Media\Domain\Repository\AssetCollectionRepository;
@@ -28,7 +29,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class SiteService
+class SiteService implements ImmutableInstance
 {
     /**
      * This is the node path of the root for all sites in neos.
diff -u -r Packages/Application/Neos.Neos/Classes/Domain/Service/UserInterfaceModeService.php Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/UserInterfaceModeService.php
--- Packages/Application/Neos.Neos/Classes/Domain/Service/UserInterfaceModeService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/UserInterfaceModeService.php	2022-05-04 12:22:30.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Neos\Domain\Exception;
 use Neos\Neos\Domain\Model\UserInterfaceMode;
 use Neos\Flow\Security\Authorization\PrivilegeManagerInterface;
@@ -21,7 +22,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class UserInterfaceModeService
+class UserInterfaceModeService implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos/Classes/Domain/Service/UserService.php Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/UserService.php
--- Packages/Application/Neos.Neos/Classes/Domain/Service/UserService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Domain/Service/UserService.php	2022-05-04 12:23:26.000000000 +0200
@@ -13,6 +13,8 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\Exception\IllegalObjectTypeException;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\Persistence\QueryResultInterface;
@@ -48,7 +50,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class UserService
+class UserService implements ResettableInstance
 {

     /**
@@ -902,4 +904,10 @@
         $user = $this->partyService->getAssignedPartyOfAccount($account);
         return ($user instanceof User) ? $user : null;
     }
+
+    public function resetInstance(): void
+    {
+        $this->now = new \DateTimeImmutable();
+        $this->runtimeUserCache = [];
+    }
 }
diff -u -r Packages/Application/Neos.Neos/Classes/Domain/Strategy/AssetUsageInNodePropertiesStrategy.php Packages-Patched/Application/Neos.Neos/Classes/Domain/Strategy/AssetUsageInNodePropertiesStrategy.php
--- Packages/Application/Neos.Neos/Classes/Domain/Strategy/AssetUsageInNodePropertiesStrategy.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Domain/Strategy/AssetUsageInNodePropertiesStrategy.php	2022-05-04 12:23:46.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\ContentRepository\Domain\Model\NodeData;
 use Neos\ContentRepository\Domain\Repository\NodeDataRepository;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Media\Domain\Model\AssetInterface;
 use Neos\Media\Domain\Model\Image;
@@ -26,7 +27,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class AssetUsageInNodePropertiesStrategy extends AbstractAssetUsageStrategy
+class AssetUsageInNodePropertiesStrategy extends AbstractAssetUsageStrategy implements ResettableInstance
 {
     use CreateContentContextTrait;

@@ -98,4 +99,9 @@

         return $this->nodeDataRepository->findNodesByPathPrefixAndRelatedEntities(SiteService::SITES_ROOT_PATH, $relationMap);
     }
+
+    public function resetInstance(): void
+    {
+        $this->firstlevelCache = [];
+    }
 }
diff -u -r Packages/Application/Neos.Neos/Classes/EventLog/Domain/Repository/EventRepository.php Packages-Patched/Application/Neos.Neos/Classes/EventLog/Domain/Repository/EventRepository.php
--- Packages/Application/Neos.Neos/Classes/EventLog/Domain/Repository/EventRepository.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/EventLog/Domain/Repository/EventRepository.php	2022-05-04 12:23:50.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\Doctrine\Repository;
 use Neos\Flow\Persistence\QueryInterface;
 use Neos\Flow\Persistence\QueryResultInterface;
@@ -23,7 +24,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class EventRepository extends Repository
+class EventRepository extends Repository implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Application/Neos.Neos/Classes/EventLog/Domain/Service/EventEmittingService.php Packages-Patched/Application/Neos.Neos/Classes/EventLog/Domain/Service/EventEmittingService.php
--- Packages/Application/Neos.Neos/Classes/EventLog/Domain/Service/EventEmittingService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/EventLog/Domain/Service/EventEmittingService.php	2022-05-04 12:24:34.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Neos\Domain\Model\User;
 use Neos\Neos\Domain\Service\UserService;
 use Neos\Neos\EventLog\Domain\Model\Event;
@@ -25,7 +26,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class EventEmittingService
+class EventEmittingService implements ResettableInstance
 {
     /**
      * a reference to the last-generated event
@@ -197,4 +198,11 @@

         $this->currentUsername = $this->userDomainService->getUsername($currentUser);
     }
+
+    public function resetInstance(): void
+    {
+        $this->currentUsername = null;
+        $this->eventContext = [];
+        $this->lastGeneratedEvent = null;
+    }
 }
diff -u -r Packages/Application/Neos.Neos/Classes/EventLog/Integrations/ContentRepositoryIntegrationService.php Packages-Patched/Application/Neos.Neos/Classes/EventLog/Integrations/ContentRepositoryIntegrationService.php
--- Packages/Application/Neos.Neos/Classes/EventLog/Integrations/ContentRepositoryIntegrationService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/EventLog/Integrations/ContentRepositoryIntegrationService.php	2022-05-04 12:25:36.000000000 +0200
@@ -14,6 +14,7 @@
 use Doctrine\ORM\EntityManager;
 use Doctrine\ORM\EntityManagerInterface;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Neos\EventLog\Domain\Model\NodeEvent;
 use Neos\ContentRepository\Domain\Model\NodeInterface;
@@ -25,7 +26,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ContentRepositoryIntegrationService extends AbstractIntegrationService
+class ContentRepositoryIntegrationService extends AbstractIntegrationService implements ResettableInstance
 {
     const NODE_ADDED = 'Node.Added';
     const NODE_UPDATED = 'Node.Updated';
@@ -476,4 +477,9 @@
         $this->currentlyCopying = false;
         $this->currentNodeAddEvents = [];
     }
+
+    public function resetInstance(): void
+    {
+        $this->reset();
+    }
 }
diff -u -r Packages/Application/Neos.Neos/Classes/EventLog/Integrations/EntityIntegrationService.php Packages-Patched/Application/Neos.Neos/Classes/EventLog/Integrations/EntityIntegrationService.php
--- Packages/Application/Neos.Neos/Classes/EventLog/Integrations/EntityIntegrationService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/EventLog/Integrations/EntityIntegrationService.php	2022-05-04 12:25:57.000000000 +0200
@@ -17,6 +17,7 @@
 use Neos\Eel\Exception;
 use Neos\Eel\Utility;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Neos\EventLog\Domain\Model\Event;

 /**
@@ -24,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class EntityIntegrationService extends AbstractIntegrationService
+class EntityIntegrationService extends AbstractIntegrationService implements ImmutableInstance
 {
     /**
      * Doctrine's Entity Manager.
diff -u -r Packages/Application/Neos.Neos/Classes/Fusion/Cache/ContentCacheFlusher.php Packages-Patched/Application/Neos.Neos/Classes/Fusion/Cache/ContentCacheFlusher.php
--- Packages/Application/Neos.Neos/Classes/Fusion/Cache/ContentCacheFlusher.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Fusion/Cache/ContentCacheFlusher.php	2022-05-04 12:27:40.000000000 +0200
@@ -16,6 +16,7 @@
 use Neos\ContentRepository\Exception\NodeTypeNotFoundException;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\Security\Context as SecurityContext;
 use Neos\Media\Domain\Model\AssetInterface;
@@ -40,7 +41,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ContentCacheFlusher
+class ContentCacheFlusher implements ResettableInstance
 {
     /**
      * @Flow\Inject
@@ -354,4 +355,11 @@

         return $this->cachingHelper;
     }
+
+    public function resetInstance(): void
+    {
+        $this->tagsToFlush = [];
+        $this->workspacesToFlush = [];
+        $this->contexts = [];
+    }
 }
diff -u -r Packages/Application/Neos.Neos/Classes/Routing/Aspects/RouteCacheAspect.php Packages-Patched/Application/Neos.Neos/Classes/Routing/Aspects/RouteCacheAspect.php
--- Packages/Application/Neos.Neos/Classes/Routing/Aspects/RouteCacheAspect.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Routing/Aspects/RouteCacheAspect.php	2022-05-04 12:28:42.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\JoinPointInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Security\Context;
 use Neos\ContentRepository\Domain\Model\NodeInterface;
 use Neos\ContentRepository\Domain\Service\ContextFactoryInterface;
@@ -22,7 +23,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Aspect
  */
-class RouteCacheAspect
+class RouteCacheAspect implements ImmutableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Neos/Classes/Routing/BackendModuleRoutePartHandler.php Packages-Patched/Application/Neos.Neos/Classes/Routing/BackendModuleRoutePartHandler.php
--- Packages/Application/Neos.Neos/Classes/Routing/BackendModuleRoutePartHandler.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Routing/BackendModuleRoutePartHandler.php	2022-05-04 12:28:31.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Mvc\Routing\DynamicRoutePart;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Utility\Arrays;

 /**
@@ -20,7 +21,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class BackendModuleRoutePartHandler extends DynamicRoutePart
+class BackendModuleRoutePartHandler extends DynamicRoutePart implements ImmutableInstance
 {
     const MATCHRESULT_FOUND = true;
     const MATCHRESULT_NOSUCHMODULE = -1;
diff -u -r Packages/Application/Neos.Neos/Classes/Routing/Cache/RouteCacheFlusher.php Packages-Patched/Application/Neos.Neos/Classes/Routing/Cache/RouteCacheFlusher.php
--- Packages/Application/Neos.Neos/Classes/Routing/Cache/RouteCacheFlusher.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Routing/Cache/RouteCacheFlusher.php	2022-05-04 12:28:54.000000000 +0200
@@ -15,13 +15,14 @@
 use Neos\Flow\Mvc\Routing\RouterCachingService;
 use Neos\ContentRepository\Domain\Model\NodeInterface;
 use Neos\ContentRepository\Domain\Model\Workspace;
+use Neos\Flow\ObjectManagement\ResettableInstance;

 /**
  * This service flushes Route caches triggered by node changes.
  *
  * @Flow\Scope("singleton")
  */
-class RouteCacheFlusher
+class RouteCacheFlusher implements ResettableInstance
 {
     /**
      * @Flow\Inject
@@ -88,4 +89,9 @@
     {
         $this->commit();
     }
+
+    public function resetInstance(): void
+    {
+        $this->tagsToFlush = [];
+    }
 }
diff -u -r Packages/Application/Neos.Neos/Classes/Routing/NodeIdentityConverterAspect.php Packages-Patched/Application/Neos.Neos/Classes/Routing/NodeIdentityConverterAspect.php
--- Packages/Application/Neos.Neos/Classes/Routing/NodeIdentityConverterAspect.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Routing/NodeIdentityConverterAspect.php	2022-05-04 12:28:37.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\JoinPointInterface;
 use Neos\ContentRepository\Domain\Model\NodeInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Aspect to convert a node object to its context node path. This is used in URI
@@ -25,7 +26,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Aspect
  */
-class NodeIdentityConverterAspect
+class NodeIdentityConverterAspect implements ImmutableInstance
 {
     /**
      * Convert the object to its context path, if we deal with ContentRepository nodes.
diff -u -r Packages/Application/Neos.Neos/Classes/Security/ImpersonateAspect.php Packages-Patched/Application/Neos.Neos/Classes/Security/ImpersonateAspect.php
--- Packages/Application/Neos.Neos/Classes/Security/ImpersonateAspect.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Security/ImpersonateAspect.php	2022-05-04 12:29:12.000000000 +0200
@@ -15,6 +15,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\JoinPointInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Security\Authentication\AuthenticationManagerInterface;
 use Neos\Neos\Service\ImpersonateService;

@@ -24,7 +25,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Aspect
  */
-class ImpersonateAspect
+class ImpersonateAspect implements ResettableInstance
 {
     /**
      * @var bool
@@ -66,4 +67,9 @@

         $this->alreadyLoggedAuthenticateCall = true;
     }
+
+    public function resetInstance(): void
+    {
+        $this->alreadyLoggedAuthenticateCall = false;
+    }
 }
diff -u -r Packages/Application/Neos.Neos/Classes/Service/BackendRedirectionService.php Packages-Patched/Application/Neos.Neos/Classes/Service/BackendRedirectionService.php
--- Packages/Application/Neos.Neos/Classes/Service/BackendRedirectionService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Service/BackendRedirectionService.php	2022-05-04 12:29:24.000000000 +0200
@@ -19,6 +19,7 @@
 use Neos\Flow\Mvc\Controller\ControllerContext;
 use Neos\Flow\Mvc\Routing\Exception\MissingActionNameException;
 use Neos\Flow\Mvc\Routing\UriBuilder;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\Exception\IllegalObjectTypeException;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\Property\PropertyMapper;
@@ -38,7 +39,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class BackendRedirectionService
+class BackendRedirectionService implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos/Classes/Service/ContentElementEditableService.php Packages-Patched/Application/Neos.Neos/Classes/Service/ContentElementEditableService.php
--- Packages/Application/Neos.Neos/Classes/Service/ContentElementEditableService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Service/ContentElementEditableService.php	2022-05-04 12:30:22.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Security\Authorization\PrivilegeManagerInterface;
 use Neos\Neos\Domain\Service\ContentContext;
 use Neos\ContentRepository\Domain\Model\NodeInterface;
@@ -25,7 +26,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ContentElementEditableService
+class ContentElementEditableService implements ImmutableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Neos/Classes/Service/ContentElementWrappingService.php Packages-Patched/Application/Neos.Neos/Classes/Service/ContentElementWrappingService.php
--- Packages/Application/Neos.Neos/Classes/Service/ContentElementWrappingService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Service/ContentElementWrappingService.php	2022-05-04 12:30:29.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Security\Authorization\PrivilegeManagerInterface;
 use Neos\Neos\Domain\Service\ContentContext;
 use Neos\Neos\Service\Mapping\NodePropertyConverterService;
@@ -27,7 +28,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ContentElementWrappingService
+class ContentElementWrappingService implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos/Classes/Service/Controller/DataSourceController.php Packages-Patched/Application/Neos.Neos/Classes/Service/Controller/DataSourceController.php
--- Packages/Application/Neos.Neos/Classes/Service/Controller/DataSourceController.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Service/Controller/DataSourceController.php	2022-05-04 12:32:20.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Mvc\View\JsonView;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Utility\ObjectAccess;
 use Neos\Flow\Reflection\ReflectionService;
@@ -25,7 +26,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class DataSourceController extends AbstractServiceController
+class DataSourceController extends AbstractServiceController implements ImmutableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Neos/Classes/Service/IconNameMappingService.php Packages-Patched/Application/Neos.Neos/Classes/Service/IconNameMappingService.php
--- Packages/Application/Neos.Neos/Classes/Service/IconNameMappingService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Service/IconNameMappingService.php	2022-05-04 12:30:42.000000000 +0200
@@ -12,11 +12,12 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * @Flow\Scope("singleton")
  */
-class IconNameMappingService
+class IconNameMappingService implements ImmutableInstance
 {
     protected $backwardsCompatibilityMapping = [
         'icon-calendar-empty' => 'icon-calendar-o',
diff -u -r Packages/Application/Neos.Neos/Classes/Service/ImageVariantGarbageCollector.php Packages-Patched/Application/Neos.Neos/Classes/Service/ImageVariantGarbageCollector.php
--- Packages/Application/Neos.Neos/Classes/Service/ImageVariantGarbageCollector.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Service/ImageVariantGarbageCollector.php	2022-05-04 12:30:46.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Media\Domain\Model\ImageVariant;
 use Neos\Media\Domain\Repository\AssetRepository;
@@ -23,7 +24,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ImageVariantGarbageCollector
+class ImageVariantGarbageCollector implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos/Classes/Service/LinkingService.php Packages-Patched/Application/Neos.Neos/Classes/Service/LinkingService.php
--- Packages/Application/Neos.Neos/Classes/Service/LinkingService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Service/LinkingService.php	2022-05-04 12:31:13.000000000 +0200
@@ -17,6 +17,7 @@
 use Neos\Flow\Http\Exception as HttpException;
 use Neos\Flow\Log\Utility\LogEnvironment;
 use Neos\Flow\Mvc\Controller\ControllerContext;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Property\PropertyMapper;
 use Neos\Flow\ResourceManagement\ResourceManager;
 use Neos\Media\Domain\Model\AssetInterface;
@@ -57,7 +58,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class LinkingService
+class LinkingService implements ResettableInstance
 {
     /**
      * Pattern to match supported URIs.
@@ -333,4 +334,9 @@
     {
         return $this->lastLinkedNode;
     }
+
+    public function resetInstance(): void
+    {
+        $this->lastLinkedNode = null;
+    }
 }
diff -u -r Packages/Application/Neos.Neos/Classes/Service/Mapping/DateStringConverter.php Packages-Patched/Application/Neos.Neos/Classes/Service/Mapping/DateStringConverter.php
--- Packages/Application/Neos.Neos/Classes/Service/Mapping/DateStringConverter.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Service/Mapping/DateStringConverter.php	2022-05-04 12:32:28.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\Flow\Property\TypeConverter\AbstractTypeConverter;

@@ -20,7 +21,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class DateStringConverter extends AbstractTypeConverter
+class DateStringConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * The source types this converter can convert.
diff -u -r Packages/Application/Neos.Neos/Classes/Service/Mapping/NodePropertyConverterService.php Packages-Patched/Application/Neos.Neos/Classes/Service/Mapping/NodePropertyConverterService.php
--- Packages/Application/Neos.Neos/Classes/Service/Mapping/NodePropertyConverterService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Service/Mapping/NodePropertyConverterService.php	2022-05-04 12:32:44.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Log\ThrowableStorageInterface;
 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Property\Exception as PropertyException;
 use Neos\Flow\Property\PropertyMapper;
@@ -30,7 +31,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodePropertyConverterService
+class NodePropertyConverterService implements ImmutableInstance
 {
     /**
      * @Flow\InjectConfiguration(package="Neos.Neos", path="userInterface.inspector.dataTypes")
diff -u -r Packages/Application/Neos.Neos/Classes/Service/Mapping/NodeReferenceConverter.php Packages-Patched/Application/Neos.Neos/Classes/Service/Mapping/NodeReferenceConverter.php
--- Packages/Application/Neos.Neos/Classes/Service/Mapping/NodeReferenceConverter.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Service/Mapping/NodeReferenceConverter.php	2022-05-04 12:32:54.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\Flow\Property\TypeConverter\AbstractTypeConverter;
 use Neos\ContentRepository\Domain\Model\NodeInterface;
@@ -21,7 +22,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeReferenceConverter extends AbstractTypeConverter
+class NodeReferenceConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * The source types this converter can convert.
diff -u -r Packages/Application/Neos.Neos/Classes/Service/Mapping/NodeTypeStringConverter.php Packages-Patched/Application/Neos.Neos/Classes/Service/Mapping/NodeTypeStringConverter.php
--- Packages/Application/Neos.Neos/Classes/Service/Mapping/NodeTypeStringConverter.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Service/Mapping/NodeTypeStringConverter.php	2022-05-04 12:32:58.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\Flow\Property\TypeConverter\AbstractTypeConverter;
 use Neos\ContentRepository\Domain\Model\NodeType;
@@ -21,7 +22,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeTypeStringConverter extends AbstractTypeConverter
+class NodeTypeStringConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * The source types this converter can convert.
diff -u -r Packages/Application/Neos.Neos/Classes/Service/NodeOperations.php Packages-Patched/Application/Neos.Neos/Classes/Service/NodeOperations.php
--- Packages/Application/Neos.Neos/Classes/Service/NodeOperations.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Service/NodeOperations.php	2022-05-04 12:31:21.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Neos\Utility\NodeUriPathSegmentGenerator;
 use Neos\ContentRepository\Domain\Model\NodeInterface;
 use Neos\ContentRepository\Domain\Service\NodeServiceInterface;
@@ -24,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeOperations
+class NodeOperations implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos/Classes/Service/NodeTypeSchemaBuilder.php Packages-Patched/Application/Neos.Neos/Classes/Service/NodeTypeSchemaBuilder.php
--- Packages/Application/Neos.Neos/Classes/Service/NodeTypeSchemaBuilder.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Service/NodeTypeSchemaBuilder.php	2022-05-04 12:31:32.000000000 +0200
@@ -13,13 +13,14 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\ContentRepository\Domain\Model\NodeType;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Renders the Node Type Schema in a format the User Interface understands; additionally pre-calculating node constraints
  *
  * @Flow\Scope("singleton")
  */
-class NodeTypeSchemaBuilder
+class NodeTypeSchemaBuilder implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos/Classes/Service/PluginService.php Packages-Patched/Application/Neos.Neos/Classes/Service/PluginService.php
--- Packages/Application/Neos.Neos/Classes/Service/PluginService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Service/PluginService.php	2022-05-04 12:31:41.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Security\Context;
 use Neos\Neos;
 use Neos\Neos\Domain\Model\PluginViewDefinition;
@@ -34,7 +35,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class PluginService
+class PluginService implements ImmutableInstance
 {
     /**
      * @var NodeTypeManager
diff -u -r Packages/Application/Neos.Neos/Classes/Service/PublishingService.php Packages-Patched/Application/Neos.Neos/Classes/Service/PublishingService.php
--- Packages/Application/Neos.Neos/Classes/Service/PublishingService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Service/PublishingService.php	2022-05-04 12:31:46.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\ContentRepository\Domain\Model\NodeInterface;
 use Neos\ContentRepository\Domain\Model\Workspace;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * The workspaces service adds some basic helper methods for getting workspaces,
@@ -22,7 +23,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class PublishingService extends \Neos\ContentRepository\Domain\Service\PublishingService
+class PublishingService extends \Neos\ContentRepository\Domain\Service\PublishingService implements ImmutableInstance
 {
     /**
      * Publishes the given node to the specified target workspace. If no workspace is specified, the base workspace
diff -u -r Packages/Application/Neos.Neos/Classes/Service/TransliterationService.php Packages-Patched/Application/Neos.Neos/Classes/Service/TransliterationService.php
--- Packages/Application/Neos.Neos/Classes/Service/TransliterationService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Service/TransliterationService.php	2022-05-04 12:31:50.000000000 +0200
@@ -14,11 +14,12 @@
 use Behat\Transliterator\Transliterator;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\I18n\Service as LocalizationService;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * @Flow\Scope("singleton")
  */
-class TransliterationService
+class TransliterationService implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos/Classes/Service/UserService.php Packages-Patched/Application/Neos.Neos/Classes/Service/UserService.php
--- Packages/Application/Neos.Neos/Classes/Service/UserService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Service/UserService.php	2022-05-04 12:31:59.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Neos\Domain\Model\User;
 use Neos\ContentRepository\Domain\Model\Workspace;
 use Neos\ContentRepository\Domain\Repository\WorkspaceRepository;
@@ -28,7 +29,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class UserService
+class UserService implements ImmutableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Neos/Classes/Service/XliffService.php Packages-Patched/Application/Neos.Neos/Classes/Service/XliffService.php
--- Packages/Application/Neos.Neos/Classes/Service/XliffService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Service/XliffService.php	2022-05-04 12:32:16.000000000 +0200
@@ -16,6 +16,7 @@
 use Neos\Cache\Frontend\VariableFrontend;
 use Neos\Flow\I18n\Xliff\Service\XliffFileProvider;
 use Neos\Flow\I18n\Xliff\Service\XliffReader;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Package\PackageInterface;
 use Neos\Flow\Package\PackageManager;
 use Neos\Utility\Files;
@@ -28,7 +29,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class XliffService
+class XliffService implements ImmutableInstance
 {
     /**
      * A relative path for translations inside the package resources.
diff -u -r Packages/Application/Neos.Neos/Classes/TYPO3CR/NeosNodeService.php Packages-Patched/Application/Neos.Neos/Classes/TYPO3CR/NeosNodeService.php
--- Packages/Application/Neos.Neos/Classes/TYPO3CR/NeosNodeService.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/TYPO3CR/NeosNodeService.php	2022-05-04 12:33:08.000000000 +0200
@@ -14,11 +14,12 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\ContentRepository\Domain\Service\NodeService;
 use Neos\ContentRepository\Domain\Utility\NodePaths;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * @Flow\Scope("singleton")
  */
-class NeosNodeService extends NodeService implements NeosNodeServiceInterface
+class NeosNodeService extends NodeService implements NeosNodeServiceInterface, ImmutableInstance
 {
     /**
      * Normalizes the given node path to a reference path and returns an absolute path.
diff -u -r Packages/Application/Neos.Neos/Classes/TypeConverter/NodeConverter.php Packages-Patched/Application/Neos.Neos/Classes/TypeConverter/NodeConverter.php
--- Packages/Application/Neos.Neos/Classes/TypeConverter/NodeConverter.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/TypeConverter/NodeConverter.php	2022-05-04 12:33:03.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Neos\Domain\Repository\DomainRepository;
 use Neos\Neos\Domain\Repository\SiteRepository;

@@ -21,7 +22,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeConverter extends \Neos\ContentRepository\TypeConverter\NodeConverter
+class NodeConverter extends \Neos\ContentRepository\TypeConverter\NodeConverter implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos/Classes/Utility/NodeUriPathSegmentGenerator.php Packages-Patched/Application/Neos.Neos/Classes/Utility/NodeUriPathSegmentGenerator.php
--- Packages/Application/Neos.Neos/Classes/Utility/NodeUriPathSegmentGenerator.php	2022-04-06 13:25:13.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos/Classes/Utility/NodeUriPathSegmentGenerator.php	2022-05-04 12:33:15.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\Eel\FlowQuery\FlowQuery;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\I18n\Locale;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Neos\Exception;
 use Neos\Neos\Service\TransliterationService;
 use Neos\ContentRepository\Domain\Model\NodeInterface;
@@ -24,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeUriPathSegmentGenerator
+class NodeUriPathSegmentGenerator implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos.Setup/Classes/Step/AdministratorStep.php Packages-Patched/Application/Neos.Neos.Setup/Classes/Step/AdministratorStep.php
--- Packages/Application/Neos.Neos.Setup/Classes/Step/AdministratorStep.php	2022-03-29 11:30:14.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos.Setup/Classes/Step/AdministratorStep.php	2022-05-04 12:08:38.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Security\AccountRepository;
 use Neos\Flow\Validation\Exception\InvalidValidationOptionsException;
 use Neos\Flow\Validation\Validator\NotEmptyValidator;
@@ -30,7 +31,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class AdministratorStep extends AbstractStep
+class AdministratorStep extends AbstractStep implements ImmutableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Neos.Setup/Classes/Step/FinalStep.php Packages-Patched/Application/Neos.Neos.Setup/Classes/Step/FinalStep.php
--- Packages/Application/Neos.Neos.Setup/Classes/Step/FinalStep.php	2022-03-29 11:30:14.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos.Setup/Classes/Step/FinalStep.php	2022-05-04 12:08:43.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\Flow\Core\ApplicationContext;
 use Neos\Flow\Core\Bootstrap;
 use Neos\Flow\Exception as FlowException;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Form\Core\Model\AbstractFormElement;
 use Neos\Form\Core\Model\FormDefinition;
 use Neos\Form\Exception as FormException;
@@ -26,7 +27,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class FinalStep extends AbstractStep
+class FinalStep extends AbstractStep implements ImmutableInstance
 {
     /**
      * Returns the form definitions for the step
diff -u -r Packages/Application/Neos.Neos.Setup/Classes/Step/NeosSpecificRequirementsStep.php Packages-Patched/Application/Neos.Neos.Setup/Classes/Step/NeosSpecificRequirementsStep.php
--- Packages/Application/Neos.Neos.Setup/Classes/Step/NeosSpecificRequirementsStep.php	2022-03-29 11:30:14.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos.Setup/Classes/Step/NeosSpecificRequirementsStep.php	2022-05-04 12:08:51.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Configuration\ConfigurationManager;
 use Neos\Flow\Configuration\Source\YamlSource;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Package\Exception\UnknownPackageException;
 use Neos\Flow\Package\FlowPackageInterface;
 use Neos\Flow\Package\PackageManager;
@@ -33,7 +34,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class NeosSpecificRequirementsStep extends AbstractStep
+class NeosSpecificRequirementsStep extends AbstractStep implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos.Setup/Classes/Step/SiteImportStep.php Packages-Patched/Application/Neos.Neos.Setup/Classes/Step/SiteImportStep.php
--- Packages/Application/Neos.Neos.Setup/Classes/Step/SiteImportStep.php	2022-03-29 11:30:14.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos.Setup/Classes/Step/SiteImportStep.php	2022-05-04 12:09:42.000000000 +0200
@@ -17,7 +17,9 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Log\ThrowableStorageInterface;
 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Package\Exception\InvalidPackageStateException;
 use Neos\Flow\Package\PackageKeyAwareInterface;
 use Neos\Flow\Package\PackageManager;
@@ -45,7 +47,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class SiteImportStep extends AbstractStep
+class SiteImportStep extends AbstractStep implements ResettableInstance
 {

     /**
@@ -269,4 +271,9 @@
             }
         }
     }
+
+    public function resetInstance(): void
+    {
+        $this->closureFinisher = null;
+    }
 }
diff -u -r Packages/Application/Neos.Neos.Ui/Classes/Aspects/AugmentationAspect.php Packages-Patched/Application/Neos.Neos.Ui/Classes/Aspects/AugmentationAspect.php
--- Packages/Application/Neos.Neos.Ui/Classes/Aspects/AugmentationAspect.php	2022-03-29 18:28:22.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos.Ui/Classes/Aspects/AugmentationAspect.php	2022-05-04 12:09:52.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\ContentRepository\Service\AuthorizationService;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\JoinPointInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\Exception\IllegalObjectTypeException;
 use Neos\Flow\Session\SessionInterface;
 use Neos\FluidAdaptor\Core\Rendering\FlowAwareRenderingContextInterface;
@@ -30,7 +31,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Aspect
  */
-class AugmentationAspect
+class AugmentationAspect implements ImmutableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Neos.Ui/Classes/ContentRepository/Service/NodeService.php Packages-Patched/Application/Neos.Neos.Ui/Classes/ContentRepository/Service/NodeService.php
--- Packages/Application/Neos.Neos.Ui/Classes/ContentRepository/Service/NodeService.php	2022-03-29 18:28:22.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos.Ui/Classes/ContentRepository/Service/NodeService.php	2022-05-04 12:11:51.000000000 +0200
@@ -18,6 +18,7 @@
 use Neos\Eel\FlowQuery\FlowQuery;
 use Neos\Error\Messages\Error;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Neos\Domain\Model\Domain;
 use Neos\Neos\Domain\Model\Site;
 use Neos\Neos\Domain\Repository\DomainRepository;
@@ -26,7 +27,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class NodeService
+class NodeService implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos.Ui/Classes/ContentRepository/Service/WorkspaceService.php Packages-Patched/Application/Neos.Neos.Ui/Classes/ContentRepository/Service/WorkspaceService.php
--- Packages/Application/Neos.Neos.Ui/Classes/ContentRepository/Service/WorkspaceService.php	2022-03-29 18:28:22.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos.Ui/Classes/ContentRepository/Service/WorkspaceService.php	2022-05-04 12:11:55.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\ContentRepository\Domain\Model\Workspace;
 use Neos\ContentRepository\Domain\Repository\WorkspaceRepository;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Neos\Domain\Service\UserService as DomainUserService;
 use Neos\Neos\Service\PublishingService;
 use Neos\Neos\Service\UserService;
@@ -21,7 +22,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class WorkspaceService
+class WorkspaceService implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos.Ui/Classes/Domain/Model/FeedbackCollection.php Packages-Patched/Application/Neos.Neos.Ui/Classes/Domain/Model/FeedbackCollection.php
--- Packages/Application/Neos.Neos.Ui/Classes/Domain/Model/FeedbackCollection.php	2022-03-29 18:28:22.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos.Ui/Classes/Domain/Model/FeedbackCollection.php	2022-05-04 12:12:19.000000000 +0200
@@ -13,11 +13,12 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Mvc\Controller\ControllerContext;
+use Neos\Flow\ObjectManagement\ResettableInstance;

 /**
  * @Flow\Scope("singleton")
  */
-class FeedbackCollection implements \JsonSerializable
+class FeedbackCollection implements \JsonSerializable, ResettableInstance
 {
     /**
      * @var array<FeedbackInterface>
@@ -80,4 +81,10 @@
     {
         $this->feedbacks = [];
     }
+
+    public function resetInstance(): void
+    {
+        $this->feedbacks = [];
+        $this->controllerContext = null;
+    }
 }
diff -u -r Packages/Application/Neos.Neos.Ui/Classes/Domain/Service/ConfigurationRenderingService.php Packages-Patched/Application/Neos.Neos.Ui/Classes/Domain/Service/ConfigurationRenderingService.php
--- Packages/Application/Neos.Neos.Ui/Classes/Domain/Service/ConfigurationRenderingService.php	2022-03-29 18:28:22.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos.Ui/Classes/Domain/Service/ConfigurationRenderingService.php	2022-05-04 12:12:25.000000000 +0200
@@ -14,11 +14,12 @@
 use Neos\Eel\CompilingEvaluator;
 use Neos\Eel\Utility;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * @Flow\Scope("singleton")
  */
-class ConfigurationRenderingService
+class ConfigurationRenderingService implements ImmutableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Neos.Ui/Classes/Domain/Service/NodePropertyConversionService.php Packages-Patched/Application/Neos.Neos.Ui/Classes/Domain/Service/NodePropertyConversionService.php
--- Packages/Application/Neos.Neos.Ui/Classes/Domain/Service/NodePropertyConversionService.php	2022-03-29 18:28:22.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos.Ui/Classes/Domain/Service/NodePropertyConversionService.php	2022-05-04 12:12:30.000000000 +0200
@@ -16,6 +16,7 @@
 use Neos\ContentRepository\Domain\Service\Context;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Mvc\Controller\MvcPropertyMappingConfiguration;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Property\PropertyMapper;
 use Neos\Flow\Property\TypeConverter\PersistentObjectConverter;
@@ -25,7 +26,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class NodePropertyConversionService
+class NodePropertyConversionService implements ImmutableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Neos.Ui/Classes/Domain/Service/StyleAndJavascriptInclusionService.php Packages-Patched/Application/Neos.Neos.Ui/Classes/Domain/Service/StyleAndJavascriptInclusionService.php
--- Packages/Application/Neos.Neos.Ui/Classes/Domain/Service/StyleAndJavascriptInclusionService.php	2022-03-29 18:28:22.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos.Ui/Classes/Domain/Service/StyleAndJavascriptInclusionService.php	2022-05-04 12:13:10.000000000 +0200
@@ -14,13 +14,14 @@
 use Neos\Eel\CompilingEvaluator;
 use Neos\Eel\Utility;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ResourceManagement\ResourceManager;
 use Neos\Utility\PositionalArraySorter;

 /**
  * @Flow\Scope("singleton")
  */
-class StyleAndJavascriptInclusionService
+class StyleAndJavascriptInclusionService implements ImmutableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Neos.Ui/Classes/Fusion/Helper/NodeInfoHelper.php Packages-Patched/Application/Neos.Neos.Ui/Classes/Fusion/Helper/NodeInfoHelper.php
--- Packages/Application/Neos.Neos.Ui/Classes/Fusion/Helper/NodeInfoHelper.php	2022-03-29 18:28:22.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos.Ui/Classes/Fusion/Helper/NodeInfoHelper.php	2022-05-04 12:13:21.000000000 +0200
@@ -18,6 +18,7 @@
 use Neos\Eel\ProtectedContextAwareInterface;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Mvc\Controller\ControllerContext;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Neos\Domain\Service\ContentContext;
 use Neos\Neos\Service\LinkingService;
@@ -29,7 +30,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class NodeInfoHelper implements ProtectedContextAwareInterface
+class NodeInfoHelper implements ProtectedContextAwareInterface, ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.Neos.Ui/Classes/Service/NodePolicyService.php Packages-Patched/Application/Neos.Neos.Ui/Classes/Service/NodePolicyService.php
--- Packages/Application/Neos.Neos.Ui/Classes/Service/NodePolicyService.php	2022-03-29 18:28:22.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos.Ui/Classes/Service/NodePolicyService.php	2022-05-04 12:13:27.000000000 +0200
@@ -22,6 +22,7 @@
 use Neos\ContentRepository\Security\Authorization\Privilege\Node\RemoveNodePrivilege;
 use Neos\Flow\Annotations as Flow;
 use Neos\ContentRepository\Domain\Model\NodeInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Security\Authorization\Privilege\PrivilegeInterface;
 use Neos\Flow\Security\Authorization\PrivilegeManagerInterface;
@@ -31,7 +32,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class NodePolicyService
+class NodePolicyService implements ImmutableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Neos.Ui/Classes/Service/NodePropertyValidationService.php Packages-Patched/Application/Neos.Neos.Ui/Classes/Service/NodePropertyValidationService.php
--- Packages/Application/Neos.Neos.Ui/Classes/Service/NodePropertyValidationService.php	2022-03-29 18:28:22.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos.Ui/Classes/Service/NodePropertyValidationService.php	2022-05-04 12:13:35.000000000 +0200
@@ -15,6 +15,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\TypeConverter\DateTimeConverter;
 use Neos\Flow\Validation\Validator\DateTimeValidator;
 use Neos\Flow\Validation\Validator\ValidatorInterface;
@@ -23,7 +24,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class NodePropertyValidationService
+class NodePropertyValidationService implements ImmutableInstance
 {

     /**
diff -u -r Packages/Application/Neos.Neos.Ui/Classes/TypeConverter/ChangeCollectionConverter.php Packages-Patched/Application/Neos.Neos.Ui/Classes/TypeConverter/ChangeCollectionConverter.php
--- Packages/Application/Neos.Neos.Ui/Classes/TypeConverter/ChangeCollectionConverter.php	2022-03-29 18:28:22.000000000 +0200
+++ Packages-Patched/Application/Neos.Neos.Ui/Classes/TypeConverter/ChangeCollectionConverter.php	2022-05-04 12:13:48.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Error\Messages\Error;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\Property\PropertyMapper;
@@ -30,7 +31,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ChangeCollectionConverter extends AbstractTypeConverter
+class ChangeCollectionConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Application/Neos.Party/Classes/Domain/Repository/PartyRepository.php Packages-Patched/Application/Neos.Party/Classes/Domain/Repository/PartyRepository.php
--- Packages/Application/Neos.Party/Classes/Domain/Repository/PartyRepository.php	2022-03-29 11:48:45.000000000 +0200
+++ Packages-Patched/Application/Neos.Party/Classes/Domain/Repository/PartyRepository.php	2022-05-04 12:33:19.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\Repository;
 use Neos\Flow\Security\Account;
 use Neos\Party\Domain\Model\AbstractParty;
@@ -21,7 +22,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class PartyRepository extends Repository
+class PartyRepository extends Repository implements ImmutableInstance
 {
     const ENTITY_CLASSNAME = AbstractParty::class;

diff -u -r Packages/Application/Neos.Party/Classes/Domain/Service/PartyService.php Packages-Patched/Application/Neos.Party/Classes/Domain/Service/PartyService.php
--- Packages/Application/Neos.Party/Classes/Domain/Service/PartyService.php	2022-03-29 11:48:45.000000000 +0200
+++ Packages-Patched/Application/Neos.Party/Classes/Domain/Service/PartyService.php	2022-05-04 12:33:34.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\Security\Account;
 use Neos\Party\Domain\Model\AbstractParty;
@@ -23,7 +24,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class PartyService
+class PartyService implements ResettableInstance
 {
     /**
      * This is a helper cache to store account identifiers and which party is assigned to which account
@@ -90,4 +91,9 @@

         return null;
     }
+
+    public function resetInstance(): void
+    {
+        $this->accountsInPartyRuntimeCache = [];
+    }
 }
diff -u -r Packages/Application/Neos.Party/Classes/Validation/Validator/AimAddressValidator.php Packages-Patched/Application/Neos.Party/Classes/Validation/Validator/AimAddressValidator.php
--- Packages/Application/Neos.Party/Classes/Validation/Validator/AimAddressValidator.php	2022-03-29 11:48:45.000000000 +0200
+++ Packages-Patched/Application/Neos.Party/Classes/Validation/Validator/AimAddressValidator.php	2022-05-04 12:33:44.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Validation\Validator\AbstractValidator;

 /**
@@ -20,7 +21,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class AimAddressValidator extends AbstractValidator
+class AimAddressValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * Checks if the given value is a valid AIM name.
diff -u -r Packages/Application/Neos.Party/Classes/Validation/Validator/IcqAddressValidator.php Packages-Patched/Application/Neos.Party/Classes/Validation/Validator/IcqAddressValidator.php
--- Packages/Application/Neos.Party/Classes/Validation/Validator/IcqAddressValidator.php	2022-03-29 11:48:45.000000000 +0200
+++ Packages-Patched/Application/Neos.Party/Classes/Validation/Validator/IcqAddressValidator.php	2022-05-04 12:33:47.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Validation\Validator\AbstractValidator;

 /**
@@ -20,7 +21,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class IcqAddressValidator extends AbstractValidator
+class IcqAddressValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * Checks if the given value is a valid ICQ UIN address.
diff -u -r Packages/Application/Neos.Party/Classes/Validation/Validator/JabberAddressValidator.php Packages-Patched/Application/Neos.Party/Classes/Validation/Validator/JabberAddressValidator.php
--- Packages/Application/Neos.Party/Classes/Validation/Validator/JabberAddressValidator.php	2022-03-29 11:48:45.000000000 +0200
+++ Packages-Patched/Application/Neos.Party/Classes/Validation/Validator/JabberAddressValidator.php	2022-05-04 12:33:51.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Validation\Validator\AbstractValidator;

 /**
@@ -20,7 +21,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class JabberAddressValidator extends AbstractValidator
+class JabberAddressValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * Checks if the given value is a valid Jabber name.
diff -u -r Packages/Application/Neos.Party/Classes/Validation/Validator/MsnAddressValidator.php Packages-Patched/Application/Neos.Party/Classes/Validation/Validator/MsnAddressValidator.php
--- Packages/Application/Neos.Party/Classes/Validation/Validator/MsnAddressValidator.php	2022-03-29 11:48:45.000000000 +0200
+++ Packages-Patched/Application/Neos.Party/Classes/Validation/Validator/MsnAddressValidator.php	2022-05-04 12:34:14.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Validation\Validator\AbstractValidator;

 /**
@@ -20,7 +21,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class MsnAddressValidator extends AbstractValidator
+class MsnAddressValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * Checks if the given value is a valid MSN address.
diff -u -r Packages/Application/Neos.Party/Classes/Validation/Validator/SipAddressValidator.php Packages-Patched/Application/Neos.Party/Classes/Validation/Validator/SipAddressValidator.php
--- Packages/Application/Neos.Party/Classes/Validation/Validator/SipAddressValidator.php	2022-03-29 11:48:45.000000000 +0200
+++ Packages-Patched/Application/Neos.Party/Classes/Validation/Validator/SipAddressValidator.php	2022-05-04 12:34:17.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Validation\Validator\AbstractValidator;

 /**
@@ -20,7 +21,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class SipAddressValidator extends AbstractValidator
+class SipAddressValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * Checks if the given value is a valid Sip name.
diff -u -r Packages/Application/Neos.Party/Classes/Validation/Validator/SkypeAddressValidator.php Packages-Patched/Application/Neos.Party/Classes/Validation/Validator/SkypeAddressValidator.php
--- Packages/Application/Neos.Party/Classes/Validation/Validator/SkypeAddressValidator.php	2022-03-29 11:48:45.000000000 +0200
+++ Packages-Patched/Application/Neos.Party/Classes/Validation/Validator/SkypeAddressValidator.php	2022-05-04 12:34:20.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Validation\Validator\AbstractValidator;

 /**
@@ -20,7 +21,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class SkypeAddressValidator extends AbstractValidator
+class SkypeAddressValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * Checks if the given value is a valid Skype name.
diff -u -r Packages/Application/Neos.Party/Classes/Validation/Validator/UrlAddressValidator.php Packages-Patched/Application/Neos.Party/Classes/Validation/Validator/UrlAddressValidator.php
--- Packages/Application/Neos.Party/Classes/Validation/Validator/UrlAddressValidator.php	2022-03-29 11:48:45.000000000 +0200
+++ Packages-Patched/Application/Neos.Party/Classes/Validation/Validator/UrlAddressValidator.php	2022-05-04 12:34:24.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Validation\Validator\AbstractValidator;

 /**
@@ -20,7 +21,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class UrlAddressValidator extends AbstractValidator
+class UrlAddressValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * Checks if the given value is a valid URL.
diff -u -r Packages/Application/Neos.Party/Classes/Validation/Validator/YahooAddressValidator.php Packages-Patched/Application/Neos.Party/Classes/Validation/Validator/YahooAddressValidator.php
--- Packages/Application/Neos.Party/Classes/Validation/Validator/YahooAddressValidator.php	2022-03-29 11:48:45.000000000 +0200
+++ Packages-Patched/Application/Neos.Party/Classes/Validation/Validator/YahooAddressValidator.php	2022-05-04 12:34:28.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Validation\Validator\AbstractValidator;

 /**
@@ -20,7 +21,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class YahooAddressValidator extends AbstractValidator
+class YahooAddressValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * Checks if the given value is a valid Yahoo address.
diff -u -r Packages/Application/Neos.RedirectHandler/Classes/Command/RedirectCommandController.php Packages-Patched/Application/Neos.RedirectHandler/Classes/Command/RedirectCommandController.php
--- Packages/Application/Neos.RedirectHandler/Classes/Command/RedirectCommandController.php	2022-03-24 22:30:30.000000000 +0100
+++ Packages-Patched/Application/Neos.RedirectHandler/Classes/Command/RedirectCommandController.php	2022-05-04 12:46:49.000000000 +0200
@@ -18,6 +18,7 @@
 use League\Csv\Reader;
 use Neos\Flow\Log\Utility\LogEnvironment;
 use Neos\Flow\Mvc\Exception\StopActionException;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\RedirectHandler\RedirectInterface;
 use Neos\RedirectHandler\Service\RedirectExportService;
 use Neos\RedirectHandler\Service\RedirectImportService;
@@ -32,7 +33,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class RedirectCommandController extends CommandController
+class RedirectCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.RedirectHandler/Classes/RedirectService.php Packages-Patched/Application/Neos.RedirectHandler/Classes/RedirectService.php
--- Packages/Application/Neos.RedirectHandler/Classes/RedirectService.php	2022-03-24 22:30:30.000000000 +0100
+++ Packages-Patched/Application/Neos.RedirectHandler/Classes/RedirectService.php	2022-05-04 12:46:41.000000000 +0200
@@ -13,6 +13,7 @@
  * source code.
  */

+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\RedirectHandler\Storage\RedirectStorageInterface;
 use Neos\Flow\Annotations as Flow;
 use Psr\Http\Message\ResponseFactoryInterface;
@@ -27,7 +28,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class RedirectService
+class RedirectService implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.RedirectHandler/Classes/Service/RedirectExportService.php Packages-Patched/Application/Neos.RedirectHandler/Classes/Service/RedirectExportService.php
--- Packages/Application/Neos.RedirectHandler/Classes/Service/RedirectExportService.php	2022-03-24 22:30:30.000000000 +0100
+++ Packages-Patched/Application/Neos.RedirectHandler/Classes/Service/RedirectExportService.php	2022-05-04 12:46:55.000000000 +0200
@@ -15,6 +15,7 @@

 use League\Csv\CannotInsertRecord;
 use League\Csv\Writer;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\RedirectHandler\RedirectInterface;
 use Neos\RedirectHandler\Storage\RedirectStorageInterface;
 use Neos\Flow\Annotations as Flow;
@@ -24,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class RedirectExportService
+class RedirectExportService implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.RedirectHandler/Classes/Service/RedirectImportService.php Packages-Patched/Application/Neos.RedirectHandler/Classes/Service/RedirectImportService.php
--- Packages/Application/Neos.RedirectHandler/Classes/Service/RedirectImportService.php	2022-03-24 22:30:30.000000000 +0100
+++ Packages-Patched/Application/Neos.RedirectHandler/Classes/Service/RedirectImportService.php	2022-05-04 12:47:04.000000000 +0200
@@ -16,6 +16,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Log\ThrowableStorageInterface;
 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\Security\Context as SecurityContext;
 use Neos\RedirectHandler\Exception;
@@ -29,7 +30,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class RedirectImportService
+class RedirectImportService implements ImmutableInstance
 {
     const REDIRECT_IMPORT_MESSAGE_TYPE_CREATED = 'created';
     const REDIRECT_IMPORT_MESSAGE_TYPE_DELETED = 'deleted';
diff -u -r Packages/Application/Neos.RedirectHandler.DatabaseStorage/Classes/Domain/Repository/RedirectRepository.php Packages-Patched/Application/Neos.RedirectHandler.DatabaseStorage/Classes/Domain/Repository/RedirectRepository.php
--- Packages/Application/Neos.RedirectHandler.DatabaseStorage/Classes/Domain/Repository/RedirectRepository.php	2022-03-24 22:34:35.000000000 +0100
+++ Packages-Patched/Application/Neos.RedirectHandler.DatabaseStorage/Classes/Domain/Repository/RedirectRepository.php	2022-05-04 12:34:47.000000000 +0200
@@ -17,6 +17,7 @@
 use Doctrine\ORM\Internal\Hydration\IterableResult;
 use Doctrine\ORM\Query;
 use Doctrine\ORM\QueryBuilder;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\RedirectHandler\DatabaseStorage\Domain\Model\Redirect;
 use Neos\RedirectHandler\RedirectInterface;
 use Neos\RedirectHandler\Redirect as RedirectDto;
@@ -30,7 +31,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class RedirectRepository extends Repository
+class RedirectRepository extends Repository implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Application/Neos.RedirectHandler.DatabaseStorage/Classes/RedirectStorage.php Packages-Patched/Application/Neos.RedirectHandler.DatabaseStorage/Classes/RedirectStorage.php
--- Packages/Application/Neos.RedirectHandler.DatabaseStorage/Classes/RedirectStorage.php	2022-03-24 22:34:35.000000000 +0100
+++ Packages-Patched/Application/Neos.RedirectHandler.DatabaseStorage/Classes/RedirectStorage.php	2022-05-04 12:34:36.000000000 +0200
@@ -15,6 +15,7 @@

 use DateTime;
 use Generator;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\Exception\IllegalObjectTypeException;
 use Neos\RedirectHandler\DatabaseStorage\Domain\Model\Redirect;
 use Neos\RedirectHandler\DatabaseStorage\Domain\Repository\RedirectRepository;
@@ -35,7 +36,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class RedirectStorage implements RedirectStorageInterface
+class RedirectStorage implements RedirectStorageInterface, ImmutableInstance
 {
     use RedirectSignalTrait;

diff -u -r Packages/Application/Neos.RedirectHandler.NeosAdapter/Classes/Service/NodeRedirectService.php Packages-Patched/Application/Neos.RedirectHandler.NeosAdapter/Classes/Service/NodeRedirectService.php
--- Packages/Application/Neos.RedirectHandler.NeosAdapter/Classes/Service/NodeRedirectService.php	2022-03-24 22:34:05.000000000 +0100
+++ Packages-Patched/Application/Neos.RedirectHandler.NeosAdapter/Classes/Service/NodeRedirectService.php	2022-05-04 12:46:20.000000000 +0200
@@ -29,6 +29,8 @@
 use Neos\Flow\Mvc\Routing\Exception\MissingActionNameException;
 use Neos\Flow\Mvc\Routing\RouterCachingService;
 use Neos\Flow\Mvc\Routing\UriBuilder;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Neos\Controller\CreateContentContextTrait;
 use Neos\Neos\Domain\Model\Domain;
@@ -42,7 +44,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class NodeRedirectService
+class NodeRedirectService implements ResettableInstance
 {
     use CreateContentContextTrait;

@@ -617,4 +619,12 @@

         return $context->getNodeByIdentifier($nodeIdentifier);
     }
+
+    public function resetInstance(): void
+    {
+        $this->uriBuilder = null;
+        $this->pendingRedirects = [];
+        $this->actionRequestForUriBuilder = null;
+    }
+
 }
diff -u -r Packages/Application/Neos.RedirectHandler.Ui/Classes/Controller/ModuleController.php Packages-Patched/Application/Neos.RedirectHandler.Ui/Classes/Controller/ModuleController.php
--- Packages/Application/Neos.RedirectHandler.Ui/Classes/Controller/ModuleController.php	2022-04-05 18:18:51.000000000 +0200
+++ Packages-Patched/Application/Neos.RedirectHandler.Ui/Classes/Controller/ModuleController.php	2022-05-04 12:46:34.000000000 +0200
@@ -27,6 +27,7 @@
 use Neos\Flow\I18n\Translator;
 use Neos\Flow\Mvc\Exception\StopActionException;
 use Neos\Flow\Mvc\View\JsonView;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\ResourceManagement\Exception as ResourceException;
 use Neos\Flow\ResourceManagement\PersistentResource;
 use Neos\Flow\ResourceManagement\ResourceManager;
@@ -46,7 +47,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class ModuleController extends AbstractModuleController
+class ModuleController extends AbstractModuleController implements ResettableInstance
 {
     /**
      * @var FusionView
diff -u -r Packages/Application/Neos.Setup/Classes/Controller/LoginController.php Packages-Patched/Application/Neos.Setup/Classes/Controller/LoginController.php
--- Packages/Application/Neos.Setup/Classes/Controller/LoginController.php	2020-11-18 11:05:29.000000000 +0100
+++ Packages-Patched/Application/Neos.Setup/Classes/Controller/LoginController.php	2022-05-04 12:48:22.000000000 +0200
@@ -15,13 +15,14 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Configuration\ConfigurationManager;
 use Neos\Flow\Mvc\Controller\ActionController;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Security\Exception\AuthenticationRequiredException;
 use Neos\Utility\Files;

 /**
  * @Flow\Scope("singleton")
  */
-class LoginController extends ActionController
+class LoginController extends ActionController implements ResettableInstance
 {
     /**
      * @var string
diff -u -r Packages/Application/Neos.Setup/Classes/Controller/SetupController.php Packages-Patched/Application/Neos.Setup/Classes/Controller/SetupController.php
--- Packages/Application/Neos.Setup/Classes/Controller/SetupController.php	2020-11-18 11:05:29.000000000 +0100
+++ Packages-Patched/Application/Neos.Setup/Classes/Controller/SetupController.php	2022-05-04 12:48:22.000000000 +0200
@@ -16,13 +16,14 @@
 use Neos\Flow\Configuration\ConfigurationManager;
 use Neos\Flow\Mvc\ActionResponse;
 use Neos\Flow\Mvc\Controller\ActionController;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Form\Core\Model\FinisherContext;
 use Neos\Setup\Step\StepInterface;

 /**
  * @Flow\Scope("singleton")
  */
-class SetupController extends ActionController
+class SetupController extends ActionController implements ResettableInstance
 {
     /**
      * The authentication manager
@@ -198,4 +199,11 @@
         }
         $this->redirect('index', null, null, ['step' => $this->currentStepIndex + 1]);
     }
+
+    public function resetInstance(): void
+    {
+        parent::resetInstance();
+        $this->currentStepIndex = 0;
+    }
+
 }
diff -u -r Packages/Application/Neos.Setup/Classes/Core/BasicRequirements.php Packages-Patched/Application/Neos.Setup/Classes/Core/BasicRequirements.php
--- Packages/Application/Neos.Setup/Classes/Core/BasicRequirements.php	2020-11-18 11:05:29.000000000 +0100
+++ Packages-Patched/Application/Neos.Setup/Classes/Core/BasicRequirements.php	2022-05-04 12:48:31.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Error\Messages\Error;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Utility\Files;

 /**
@@ -22,7 +23,7 @@
  * @Flow\Proxy(false)
  * @Flow\Scope("singleton")
  */
-class BasicRequirements
+class BasicRequirements implements ImmutableInstance
 {
     /**
      * List of required PHP extensions and their error key if the extension was not found
diff -u -r Packages/Application/Neos.Setup/Classes/Core/MessageRenderer.php Packages-Patched/Application/Neos.Setup/Classes/Core/MessageRenderer.php
--- Packages/Application/Neos.Setup/Classes/Core/MessageRenderer.php	2020-11-18 11:05:29.000000000 +0100
+++ Packages-Patched/Application/Neos.Setup/Classes/Core/MessageRenderer.php	2022-05-04 12:48:35.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\Error\Messages\Message;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Core\Bootstrap;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Package\PackageManager;

 /**
@@ -26,7 +27,7 @@
  * @Flow\Proxy(false)
  * @Flow\Scope("singleton")
  */
-class MessageRenderer
+class MessageRenderer implements ImmutableInstance
 {
     /**
      * @var \Neos\Flow\Core\Bootstrap
diff -u -r Packages/Application/Neos.Setup/Classes/Core/RequestHandler.php Packages-Patched/Application/Neos.Setup/Classes/Core/RequestHandler.php
--- Packages/Application/Neos.Setup/Classes/Core/RequestHandler.php	2020-11-18 11:05:29.000000000 +0100
+++ Packages-Patched/Application/Neos.Setup/Classes/Core/RequestHandler.php	2022-05-04 12:48:43.000000000 +0200
@@ -20,6 +20,7 @@
 use Neos\Error\Messages\Message;
 use Neos\Flow\Http\Middleware\MiddlewaresChainFactory;
 use Neos\Flow\Http\RequestHandler as FlowRequestHandler;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Utility\Arrays;
 use Neos\Utility\Files;
 use Psr\Http\Message\ServerRequestInterface;
@@ -29,7 +30,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class RequestHandler extends FlowRequestHandler
+class RequestHandler extends FlowRequestHandler implements ImmutableInstance
 {
     /**
      * This request handler can handle any web request.
diff -u -r Packages/Application/Neos.Setup/Classes/Package.php Packages-Patched/Application/Neos.Setup/Classes/Package.php
--- Packages/Application/Neos.Setup/Classes/Package.php	2020-11-18 11:05:29.000000000 +0100
+++ Packages-Patched/Application/Neos.Setup/Classes/Package.php	2022-05-04 12:48:22.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Core\Bootstrap;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Package\Package as BasePackage;
 use Neos\Setup\Core\RequestHandler;

@@ -21,7 +22,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class Package extends BasePackage
+class Package extends BasePackage implements ImmutableInstance
 {
     /**
      * Invokes custom PHP code directly after the package manager has been initialized.
diff -u -r Packages/Application/Neos.Setup/Classes/Step/AbstractStep.php Packages-Patched/Application/Neos.Setup/Classes/Step/AbstractStep.php
--- Packages/Application/Neos.Setup/Classes/Step/AbstractStep.php	2020-11-18 11:05:29.000000000 +0100
+++ Packages-Patched/Application/Neos.Setup/Classes/Step/AbstractStep.php	2022-05-04 12:48:55.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Configuration\ConfigurationManager;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Form\Core\Model\FormDefinition;
 use Neos\Form\Exception\PresetNotFoundException;
 use Neos\Form\Finishers\ClosureFinisher;
@@ -21,7 +22,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-abstract class AbstractStep implements StepInterface
+abstract class AbstractStep implements StepInterface, ImmutableInstance
 {
     /**
      * @var boolean
diff -u -r Packages/Application/Neos.Setup/Classes/Step/DatabaseStep.php Packages-Patched/Application/Neos.Setup/Classes/Step/DatabaseStep.php
--- Packages/Application/Neos.Setup/Classes/Step/DatabaseStep.php	2020-11-18 11:05:29.000000000 +0100
+++ Packages-Patched/Application/Neos.Setup/Classes/Step/DatabaseStep.php	2022-05-04 12:49:00.000000000 +0200
@@ -18,6 +18,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Configuration\ConfigurationManager;
 use Neos\Flow\Core\Booting\Scripts;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Utility\Arrays;
 use Neos\Flow\Validation\Validator\NotEmptyValidator;
 use Neos\Form\Core\Model\FormDefinition;
@@ -26,7 +27,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class DatabaseStep extends AbstractStep
+class DatabaseStep extends AbstractStep implements ImmutableInstance
 {
     /**
      * @var \Neos\Flow\Configuration\Source\YamlSource
diff -u -r Packages/Application/Neos.Setup/Classes/Step/FinalStep.php Packages-Patched/Application/Neos.Setup/Classes/Step/FinalStep.php
--- Packages/Application/Neos.Setup/Classes/Step/FinalStep.php	2020-11-18 11:05:29.000000000 +0100
+++ Packages-Patched/Application/Neos.Setup/Classes/Step/FinalStep.php	2022-05-04 12:49:03.000000000 +0200
@@ -12,12 +12,13 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Form\Core\Model\FormDefinition;

 /**
  * @Flow\Scope("singleton")
  */
-class FinalStep extends AbstractStep
+class FinalStep extends AbstractStep implements ImmutableInstance
 {
     /**
      * Returns the form definitions for the step
diff -u -r Packages/Framework/Neos.Eel/Classes/FlowQuery/OperationResolver.php Packages-Patched/Framework/Neos.Eel/Classes/FlowQuery/OperationResolver.php
--- Packages/Framework/Neos.Eel/Classes/FlowQuery/OperationResolver.php	2022-04-04 17:28:21.000000000 +0200
+++ Packages-Patched/Framework/Neos.Eel/Classes/FlowQuery/OperationResolver.php	2022-05-04 12:49:23.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Reflection\ReflectionService;

@@ -20,7 +21,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class OperationResolver implements OperationResolverInterface
+class OperationResolver implements OperationResolverInterface, ImmutableInstance
 {
     /**
      * @var ObjectManagerInterface
diff -u -r Packages/Framework/Neos.Eel/Classes/Package.php Packages-Patched/Framework/Neos.Eel/Classes/Package.php
--- Packages/Framework/Neos.Eel/Classes/Package.php	2022-04-04 17:28:21.000000000 +0200
+++ Packages-Patched/Framework/Neos.Eel/Classes/Package.php	2022-05-04 12:49:06.000000000 +0200
@@ -11,6 +11,7 @@
  * source code.
  */

+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Package\Package as BasePackage;
 use Neos\Flow\Annotations as Flow;

@@ -19,7 +20,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class Package extends BasePackage
+class Package extends BasePackage implements ImmutableInstance
 {
     const EelExpressionRecognizer = '/
 			^\${(?P<exp>
diff -u -r Packages/Framework/Neos.Flow/Classes/Aop/Builder/AdvicedConstructorInterceptorBuilder.php Packages-Patched/Framework/Neos.Flow/Classes/Aop/Builder/AdvicedConstructorInterceptorBuilder.php
--- Packages/Framework/Neos.Flow/Classes/Aop/Builder/AdvicedConstructorInterceptorBuilder.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Aop/Builder/AdvicedConstructorInterceptorBuilder.php	2022-05-04 12:49:30.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\Exception;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A method interceptor build for constructors with advice.
@@ -20,7 +21,7 @@
  * @Flow\Proxy(false)
  * @Flow\Scope("singleton")
  */
-class AdvicedConstructorInterceptorBuilder extends AbstractMethodInterceptorBuilder
+class AdvicedConstructorInterceptorBuilder extends AbstractMethodInterceptorBuilder implements ImmutableInstance
 {
     /**
      * Builds interception PHP code for an adviced constructor
diff -u -r Packages/Framework/Neos.Flow/Classes/Aop/Builder/AdvicedMethodInterceptorBuilder.php Packages-Patched/Framework/Neos.Flow/Classes/Aop/Builder/AdvicedMethodInterceptorBuilder.php
--- Packages/Framework/Neos.Flow/Classes/Aop/Builder/AdvicedMethodInterceptorBuilder.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Aop/Builder/AdvicedMethodInterceptorBuilder.php	2022-05-04 12:49:35.000000000 +0200
@@ -13,13 +13,14 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\Exception;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * An AOP interceptor code builder for methods enriched by advices.
  *
  * @Flow\Scope("singleton")
  */
-class AdvicedMethodInterceptorBuilder extends AbstractMethodInterceptorBuilder
+class AdvicedMethodInterceptorBuilder extends AbstractMethodInterceptorBuilder implements ImmutableInstance
 {
     /**
      * Builds interception PHP code for an adviced method
diff -u -r Packages/Framework/Neos.Flow/Classes/Aop/Builder/ProxyClassBuilder.php Packages-Patched/Framework/Neos.Flow/Classes/Aop/Builder/ProxyClassBuilder.php
--- Packages/Framework/Neos.Flow/Classes/Aop/Builder/ProxyClassBuilder.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Aop/Builder/ProxyClassBuilder.php	2022-05-04 12:49:41.000000000 +0200
@@ -19,6 +19,7 @@
 use Neos\Cache\Frontend\VariableFrontend;
 use Neos\Flow\Log\Utility\LogEnvironment;
 use Neos\Flow\ObjectManagement\CompileTimeObjectManager;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Reflection\PropertyReflection;
 use Neos\Flow\Aop\TraitIntroduction;
 use Neos\Flow\Aop;
@@ -33,7 +34,7 @@
  * @Flow\Proxy(false)
  * @Flow\Scope("singleton")
  */
-class ProxyClassBuilder
+class ProxyClassBuilder implements ImmutableInstance
 {
     /**
      * @var Proxy\Compiler
diff -u -r Packages/Framework/Neos.Flow/Classes/Aop/Pointcut/PointcutExpressionParser.php Packages-Patched/Framework/Neos.Flow/Classes/Aop/Pointcut/PointcutExpressionParser.php
--- Packages/Framework/Neos.Flow/Classes/Aop/Pointcut/PointcutExpressionParser.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Aop/Pointcut/PointcutExpressionParser.php	2022-05-04 12:50:38.000000000 +0200
@@ -17,7 +17,9 @@
 use Neos\Flow\Aop\Exception as AopException;
 use Neos\Flow\Configuration\ConfigurationManager;
 use Neos\Flow\Log\PsrLoggerFactoryInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Reflection\ReflectionService;

 /**
@@ -29,7 +31,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Proxy(false)
  */
-class PointcutExpressionParser
+class PointcutExpressionParser implements ResettableInstance
 {
     const PATTERN_SPLITBYOPERATOR = '/\s*(\&\&|\|\|)\s*/';
     const PATTERN_MATCHPOINTCUTDESIGNATOR = '/^\s*(classAnnotatedWith|class|methodAnnotatedWith|method|within|filter|setting|evaluate)/';
@@ -513,4 +515,9 @@
         }
         return $runtimeEvaluationConditions;
     }
+
+    public function resetInstance(): void
+    {
+        $this->sourceHint = '';
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Aop/Pointcut/RuntimeExpressionEvaluator.php Packages-Patched/Framework/Neos.Flow/Classes/Aop/Pointcut/RuntimeExpressionEvaluator.php
--- Packages/Framework/Neos.Flow/Classes/Aop/Pointcut/RuntimeExpressionEvaluator.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Aop/Pointcut/RuntimeExpressionEvaluator.php	2022-05-04 12:51:50.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\Flow\Aop\JoinPointInterface;
 use Neos\Flow\Cache\CacheManager;
 use Neos\Flow\Exception;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;

 /**
@@ -24,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class RuntimeExpressionEvaluator
+class RuntimeExpressionEvaluator implements ImmutableInstance // FIXME Make it immutable to completely cache runtime expressions
 {
     /**
      * @var StringFrontend
diff -u -r Packages/Framework/Neos.Flow/Classes/Cache/AnnotationsCacheFlusher.php Packages-Patched/Framework/Neos.Flow/Classes/Cache/AnnotationsCacheFlusher.php
--- Packages/Framework/Neos.Flow/Classes/Cache/AnnotationsCacheFlusher.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Cache/AnnotationsCacheFlusher.php	2022-05-04 12:53:14.000000000 +0200
@@ -16,6 +16,8 @@
 use Neos\Cache\Exception\NoSuchCacheException;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Configuration\ConfigurationManager;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Reflection\ReflectionService;
 use Neos\Flow\Log\Utility\LogEnvironment;
 use Psr\Log\LoggerInterface;
@@ -23,7 +25,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-final class AnnotationsCacheFlusher
+final class AnnotationsCacheFlusher implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/Cache/CacheFactory.php Packages-Patched/Framework/Neos.Flow/Classes/Cache/CacheFactory.php
--- Packages/Framework/Neos.Flow/Classes/Cache/CacheFactory.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Cache/CacheFactory.php	2022-05-04 12:53:27.000000000 +0200
@@ -18,6 +18,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Cache\Exception\InvalidBackendException;
 use Neos\Flow\Core\ApplicationContext;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Utility\Environment;

@@ -29,7 +30,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class CacheFactory extends \Neos\Cache\CacheFactory
+class CacheFactory extends \Neos\Cache\CacheFactory implements ImmutableInstance
 {
     /**
      * The current Flow context ("Production", "Development" etc.)
diff -u -r Packages/Framework/Neos.Flow/Classes/Cache/CacheManager.php Packages-Patched/Framework/Neos.Flow/Classes/Cache/CacheManager.php
--- Packages/Framework/Neos.Flow/Classes/Cache/CacheManager.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Cache/CacheManager.php	2022-05-04 12:53:39.000000000 +0200
@@ -19,6 +19,7 @@
 use Neos\Cache\Frontend\VariableFrontend;
 use Neos\Flow\Configuration\ConfigurationManager;
 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Utility\Environment;
 use Neos\Utility\Files;
 use Neos\Flow\Utility\PhpAnalyzer;
@@ -34,7 +35,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class CacheManager
+class CacheManager implements ImmutableInstance
 {
     /**
      * @var CacheFactory
diff -u -r Packages/Framework/Neos.Flow/Classes/Cli/CommandController.php Packages-Patched/Framework/Neos.Flow/Classes/Cli/CommandController.php
--- Packages/Framework/Neos.Flow/Classes/Cli/CommandController.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Cli/CommandController.php	2022-05-04 12:01:24.000000000 +0200
@@ -352,4 +352,15 @@
         $this->response->send();
         exit($exitCode);
     }
+
+    /**
+     * Provide default resetInstance() that can be called in subclasses
+     */
+    public function resetInstance(): void
+    {
+        $this->request = null;
+        $this->response = null;
+        $this->arguments = new Arguments([]);
+        $this->output = new ConsoleOutput();
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Cli/CommandManager.php Packages-Patched/Framework/Neos.Flow/Classes/Cli/CommandManager.php
--- Packages/Framework/Neos.Flow/Classes/Cli/CommandManager.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Cli/CommandManager.php	2022-05-04 12:53:53.000000000 +0200
@@ -16,6 +16,7 @@
 use Neos\Flow\Mvc\Exception\AmbiguousCommandIdentifierException;
 use Neos\Flow\Mvc\Exception\CommandException;
 use Neos\Flow\Mvc\Exception\NoSuchCommandException;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Reflection\ReflectionService;

@@ -24,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class CommandManager
+class CommandManager implements ImmutableInstance
 {
     /**
      * @var array<Command>
diff -u -r Packages/Framework/Neos.Flow/Classes/Cli/CommandRequestHandler.php Packages-Patched/Framework/Neos.Flow/Classes/Cli/CommandRequestHandler.php
--- Packages/Framework/Neos.Flow/Classes/Cli/CommandRequestHandler.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Cli/CommandRequestHandler.php	2022-05-04 12:54:28.000000000 +0200
@@ -16,6 +16,7 @@
 use Neos\Flow\Core\LockManager;
 use Neos\Flow\Core\RequestHandlerInterface;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Security\Context;

 /**
@@ -24,7 +25,7 @@
  * @Flow\Proxy(false)
  * @Flow\Scope("singleton")
  */
-class CommandRequestHandler implements RequestHandlerInterface
+class CommandRequestHandler implements RequestHandlerInterface, ResettableInstance
 {
     /**
      * @var Bootstrap
@@ -180,4 +181,10 @@
         }
         exit($this->response->getExitCode());
     }
+
+    public function resetInstance(): void
+    {
+        $this->request = null;
+        $this->response = null;
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Cli/Dispatcher.php Packages-Patched/Framework/Neos.Flow/Classes/Cli/Dispatcher.php
--- Packages/Framework/Neos.Flow/Classes/Cli/Dispatcher.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Cli/Dispatcher.php	2022-05-04 12:54:39.000000000 +0200
@@ -6,6 +6,7 @@
 use Neos\Flow\Cli\Exception\InvalidCommandControllerException;
 use Neos\Flow\Cli\Exception\StopCommandException;
 use Neos\Flow\ObjectManagement\CompileTimeObjectManager;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;

 /**
@@ -13,7 +14,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class Dispatcher
+class Dispatcher implements ImmutableInstance
 {
     /**
      * @var \Neos\Flow\SignalSlot\Dispatcher
diff -u -r Packages/Framework/Neos.Flow/Classes/Cli/RequestBuilder.php Packages-Patched/Framework/Neos.Flow/Classes/Cli/RequestBuilder.php
--- Packages/Framework/Neos.Flow/Classes/Cli/RequestBuilder.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Cli/RequestBuilder.php	2022-05-04 12:54:49.000000000 +0200
@@ -16,6 +16,7 @@
 use Neos\Flow\Mvc\Exception\CommandException;
 use Neos\Flow\Mvc\Exception\InvalidArgumentMixingException;
 use Neos\Flow\Mvc\Exception\InvalidArgumentNameException;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Package\PackageManager;
 use Neos\Flow\Utility\Environment;
@@ -25,7 +26,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class RequestBuilder
+class RequestBuilder implements ImmutableInstance
 {
     /**
      * This is used to parse the command line, when it's passed as a string
diff -u -r Packages/Framework/Neos.Flow/Classes/Cli/SlaveRequestHandler.php Packages-Patched/Framework/Neos.Flow/Classes/Cli/SlaveRequestHandler.php
--- Packages/Framework/Neos.Flow/Classes/Cli/SlaveRequestHandler.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Cli/SlaveRequestHandler.php	2022-05-04 12:54:54.000000000 +0200
@@ -17,6 +17,7 @@
 use Neos\Flow\Exception as FlowException;
 use Neos\Flow\Log\PsrLoggerFactoryInterface;
 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Psr\Log\LoggerInterface;

 /**
@@ -28,7 +29,7 @@
  *
  * @deprecated  This will probably move to a separate package and be renamed in a future version, you should not rely on it.
  */
-class SlaveRequestHandler implements RequestHandlerInterface
+class SlaveRequestHandler implements RequestHandlerInterface, ImmutableInstance
 {
     /**
      * @var Bootstrap
diff -u -r Packages/Framework/Neos.Flow/Classes/Command/CacheCommandController.php Packages-Patched/Framework/Neos.Flow/Classes/Command/CacheCommandController.php
--- Packages/Framework/Neos.Flow/Classes/Command/CacheCommandController.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Command/CacheCommandController.php	2022-05-04 12:55:03.000000000 +0200
@@ -27,6 +27,7 @@
 use Neos\Flow\Mvc\Exception\StopActionException;
 use Neos\Flow\ObjectManagement\ObjectManager;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Package\PackageManager;
 use Neos\Flow\Utility\Environment;
 use Neos\Utility\TypeHandling;
@@ -38,7 +39,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class CacheCommandController extends CommandController
+class CacheCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @var CacheManager
diff -u -r Packages/Framework/Neos.Flow/Classes/Command/ConfigurationCommandController.php Packages-Patched/Framework/Neos.Flow/Classes/Command/ConfigurationCommandController.php
--- Packages/Framework/Neos.Flow/Classes/Command/ConfigurationCommandController.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Command/ConfigurationCommandController.php	2022-05-04 12:55:08.000000000 +0200
@@ -11,6 +11,7 @@
  * source code.
  */

+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Symfony\Component\Yaml\Yaml;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Cli\CommandController;
@@ -27,7 +28,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ConfigurationCommandController extends CommandController
+class ConfigurationCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/Command/CoreCommandController.php Packages-Patched/Framework/Neos.Flow/Classes/Command/CoreCommandController.php
--- Packages/Framework/Neos.Flow/Classes/Command/CoreCommandController.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Command/CoreCommandController.php	2022-05-04 12:55:16.000000000 +0200
@@ -24,6 +24,7 @@
 use Neos\Flow\Log\PsrLoggerFactoryInterface;
 use Neos\Flow\ObjectManagement\DependencyInjection\ProxyClassBuilder;
 use Neos\Flow\ObjectManagement\Proxy\Compiler;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\SignalSlot\Dispatcher as SignalSlotDispatcher;
 use Neos\Flow\Utility\Environment;
 use Neos\Utility\Files;
@@ -36,7 +37,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Proxy(false)
  */
-class CoreCommandController extends CommandController
+class CoreCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @var RequestBuilder
diff -u -r Packages/Framework/Neos.Flow/Classes/Command/DatabaseCommandController.php Packages-Patched/Framework/Neos.Flow/Classes/Command/DatabaseCommandController.php
--- Packages/Framework/Neos.Flow/Classes/Command/DatabaseCommandController.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Command/DatabaseCommandController.php	2022-05-04 12:55:49.000000000 +0200
@@ -18,13 +18,14 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Cli\CommandController;
 use Neos\Flow\Mvc\Exception\StopActionException;
+use Neos\Flow\ObjectManagement\ResettableInstance;

 /**
  * Command controller for tasks related to database handling
  *
  * @Flow\Scope("singleton")
  */
-class DatabaseCommandController extends CommandController
+class DatabaseCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @Flow\InjectConfiguration(path="persistence")
@@ -147,4 +148,11 @@
             file_put_contents($outputPathAndFilename, implode(';' . PHP_EOL, $statements) . ';');
         }
     }
+
+    public function resetInstance(): void
+    {
+        parent::resetInstance();
+        $this->connection = null;
+    }
+
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Command/DoctrineCommandController.php Packages-Patched/Framework/Neos.Flow/Classes/Command/DoctrineCommandController.php
--- Packages/Framework/Neos.Flow/Classes/Command/DoctrineCommandController.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Command/DoctrineCommandController.php	2022-05-04 12:55:58.000000000 +0200
@@ -21,6 +21,8 @@
 use Neos\Flow\Error\Debugger;
 use Neos\Flow\Log\ThrowableStorageInterface;
 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Package;
 use Neos\Flow\Package\PackageManager;
 use Neos\Flow\Persistence\Doctrine\Service as DoctrineService;
@@ -34,7 +36,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class DoctrineCommandController extends CommandController
+class DoctrineCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @var array
diff -u -r Packages/Framework/Neos.Flow/Classes/Command/HelpCommandController.php Packages-Patched/Framework/Neos.Flow/Classes/Command/HelpCommandController.php
--- Packages/Framework/Neos.Flow/Classes/Command/HelpCommandController.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Command/HelpCommandController.php	2022-05-04 12:56:06.000000000 +0200
@@ -18,6 +18,7 @@
 use Neos\Flow\Core\Bootstrap;
 use Neos\Flow\Mvc\Exception\AmbiguousCommandIdentifierException;
 use Neos\Flow\Mvc\Exception\CommandException;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Package\PackageManager;
 use Neos\Flow\Mvc\Exception\StopActionException;

@@ -26,7 +27,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class HelpCommandController extends CommandController
+class HelpCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/Command/PackageCommandController.php Packages-Patched/Framework/Neos.Flow/Classes/Command/PackageCommandController.php
--- Packages/Framework/Neos.Flow/Classes/Command/PackageCommandController.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Command/PackageCommandController.php	2022-05-04 12:56:21.000000000 +0200
@@ -16,6 +16,7 @@
 use Neos\Flow\Composer\ComposerUtility;
 use Neos\Flow\Core\Booting\Scripts;
 use Neos\Flow\Core\Bootstrap;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Package\PackageInterface;
 use Neos\Flow\Package\PackageKeyAwareInterface;
 use Neos\Flow\Package\PackageManager;
@@ -25,7 +26,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class PackageCommandController extends CommandController
+class PackageCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @var PackageManager
diff -u -r Packages/Framework/Neos.Flow/Classes/Command/ResourceCommandController.php Packages-Patched/Framework/Neos.Flow/Classes/Command/ResourceCommandController.php
--- Packages/Framework/Neos.Flow/Classes/Command/ResourceCommandController.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Command/ResourceCommandController.php	2022-05-04 12:56:26.000000000 +0200
@@ -16,6 +16,7 @@
 use Neos\Error\Messages\Message;
 use Neos\Flow\Exception;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Package\PackageManager;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\ResourceManagement\CollectionInterface;
@@ -32,7 +33,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ResourceCommandController extends CommandController
+class ResourceCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/Command/RoutingCommandController.php Packages-Patched/Framework/Neos.Flow/Classes/Command/RoutingCommandController.php
--- Packages/Framework/Neos.Flow/Classes/Command/RoutingCommandController.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Command/RoutingCommandController.php	2022-05-04 12:56:43.000000000 +0200
@@ -28,6 +28,7 @@
 use Neos\Flow\Mvc\Routing\Route;
 use Neos\Flow\Mvc\Routing\Router;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Http\Factories\ServerRequestFactory;
 use Neos\Utility\Arrays;

@@ -36,7 +37,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class RoutingCommandController extends CommandController
+class RoutingCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/Command/SchemaCommandController.php Packages-Patched/Framework/Neos.Flow/Classes/Command/SchemaCommandController.php
--- Packages/Framework/Neos.Flow/Classes/Command/SchemaCommandController.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Command/SchemaCommandController.php	2022-05-04 12:56:48.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Error\Messages\Result;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Package\PackageManager;
 use Neos\Flow\Cli\CommandController;
 use Neos\Error\Messages\Error;
@@ -26,7 +27,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class SchemaCommandController extends CommandController
+class SchemaCommandController extends CommandController implements ResettableInstance
 {

     /**
diff -u -r Packages/Framework/Neos.Flow/Classes/Command/SecurityCommandController.php Packages-Patched/Framework/Neos.Flow/Classes/Command/SecurityCommandController.php
--- Packages/Framework/Neos.Flow/Classes/Command/SecurityCommandController.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Command/SecurityCommandController.php	2022-05-04 12:56:57.000000000 +0200
@@ -18,6 +18,7 @@
 use Neos\Flow\Configuration\Exception\InvalidConfigurationTypeException;
 use Neos\Flow\Mvc\Controller\AbstractController;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Reflection\ReflectionService;
 use Neos\Flow\Security\Cryptography\RsaWalletServicePhp;
 use Neos\Flow\Security\Exception as SecurityException;
@@ -33,7 +34,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class SecurityCommandController extends CommandController
+class SecurityCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/Command/ServerCommandController.php Packages-Patched/Framework/Neos.Flow/Classes/Command/ServerCommandController.php
--- Packages/Framework/Neos.Flow/Classes/Command/ServerCommandController.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Command/ServerCommandController.php	2022-05-04 12:57:01.000000000 +0200
@@ -14,13 +14,14 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Cli\CommandController;
 use Neos\Flow\Core\Booting\Scripts;
+use Neos\Flow\ObjectManagement\ResettableInstance;

 /**
  * Command controller for starting the development-server
  *
  * @Flow\Scope("singleton")
  */
-class ServerCommandController extends CommandController
+class ServerCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @Flow\InjectConfiguration
diff -u -r Packages/Framework/Neos.Flow/Classes/Command/SessionCommandController.php Packages-Patched/Framework/Neos.Flow/Classes/Command/SessionCommandController.php
--- Packages/Framework/Neos.Flow/Classes/Command/SessionCommandController.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Command/SessionCommandController.php	2022-05-04 12:57:07.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Cache\CacheManager;
 use Neos\Flow\Cli\CommandController;
+use Neos\Flow\ObjectManagement\ResettableInstance;

 /**
  * Command controller for managing sessions
@@ -22,7 +23,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class SessionCommandController extends CommandController
+class SessionCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @var CacheManager
diff -u -r Packages/Framework/Neos.Flow/Classes/Command/SignalCommandController.php Packages-Patched/Framework/Neos.Flow/Classes/Command/SignalCommandController.php
--- Packages/Framework/Neos.Flow/Classes/Command/SignalCommandController.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Command/SignalCommandController.php	2022-05-04 12:57:10.000000000 +0200
@@ -15,6 +15,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Cli\CommandController;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\SignalSlot\Dispatcher;

 /**
@@ -22,7 +23,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class SignalCommandController extends CommandController
+class SignalCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/Command/TypeConverterCommandController.php Packages-Patched/Framework/Neos.Flow/Classes/Command/TypeConverterCommandController.php
--- Packages/Framework/Neos.Flow/Classes/Command/TypeConverterCommandController.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Command/TypeConverterCommandController.php	2022-05-04 12:57:18.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Cli\CommandController;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Property\PropertyMapper;

 /**
@@ -20,7 +21,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class TypeConverterCommandController extends CommandController
+class TypeConverterCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/Configuration/ConfigurationManager.php Packages-Patched/Framework/Neos.Flow/Classes/Configuration/ConfigurationManager.php
--- Packages/Framework/Neos.Flow/Classes/Configuration/ConfigurationManager.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Configuration/ConfigurationManager.php	2022-05-04 12:57:23.000000000 +0200
@@ -25,6 +25,7 @@
 use Neos\Flow\Configuration\Exception\InvalidConfigurationTypeException;
 use Neos\Flow\Configuration\Source\YamlSource;
 use Neos\Flow\Core\ApplicationContext;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Package\FlowPackageInterface;
 use Neos\Utility\Arrays;
 use Neos\Utility\Exception\FilesException;
@@ -38,7 +39,7 @@
  * @Flow\Proxy(false)
  * @api
  */
-class ConfigurationManager
+class ConfigurationManager implements ImmutableInstance
 {
     /**
      * Contains a list of caches which are registered automatically. Caches defined in this configuration file are
diff -u -r Packages/Framework/Neos.Flow/Classes/Configuration/ConfigurationSchemaValidator.php Packages-Patched/Framework/Neos.Flow/Classes/Configuration/ConfigurationSchemaValidator.php
--- Packages/Framework/Neos.Flow/Classes/Configuration/ConfigurationSchemaValidator.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Configuration/ConfigurationSchemaValidator.php	2022-05-04 12:57:28.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\I18n\Translator;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Symfony\Component\Yaml\Yaml;
 use Neos\Flow\Annotations as Flow;
 use Neos\Error\Messages\Notice;
@@ -35,7 +36,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ConfigurationSchemaValidator
+class ConfigurationSchemaValidator implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/Configuration/Source/YamlSource.php Packages-Patched/Framework/Neos.Flow/Classes/Configuration/Source/YamlSource.php
--- Packages/Framework/Neos.Flow/Classes/Configuration/Source/YamlSource.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Configuration/Source/YamlSource.php	2022-05-04 12:57:32.000000000 +0200
@@ -11,6 +11,7 @@
  * source code.
  */

+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Symfony\Component\Yaml\Yaml;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Configuration\Exception\ParseErrorException;
@@ -25,7 +26,7 @@
  * @Flow\Proxy(false)
  * @api
  */
-class YamlSource
+class YamlSource implements ImmutableInstance
 {
     /**
      * Will be set if the PHP YAML Extension is installed.
diff -u -r Packages/Framework/Neos.Flow/Classes/Core/Booting/Scripts.php Packages-Patched/Framework/Neos.Flow/Classes/Core/Booting/Scripts.php
--- Packages/Framework/Neos.Flow/Classes/Core/Booting/Scripts.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Core/Booting/Scripts.php	2022-05-04 12:58:07.000000000 +0200
@@ -38,6 +38,7 @@
 use Neos\Flow\Log\ThrowableStorageInterface;
 use Neos\Flow\Monitor\FileMonitor;
 use Neos\Flow\ObjectManagement\CompileTimeObjectManager;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManager;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Package\FlowPackageInterface;
@@ -58,7 +59,7 @@
  * @Flow\Proxy(false)
  * @Flow\Scope("singleton")
  */
-class Scripts
+class Scripts implements ImmutableInstance
 {
     /**
      * Initializes the Class Loader
diff -u -r Packages/Framework/Neos.Flow/Classes/Core/Bootstrap.php Packages-Patched/Framework/Neos.Flow/Classes/Core/Bootstrap.php
--- Packages/Framework/Neos.Flow/Classes/Core/Bootstrap.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Core/Bootstrap.php	2022-05-04 12:57:38.000000000 +0200
@@ -16,6 +16,7 @@
 use Neos\Flow\Core\Booting\Sequence;
 use Neos\Flow\Core\Booting\Scripts;
 use Neos\Flow\Exception as FlowException;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\SignalSlot\Dispatcher;
 use Neos\Flow\Utility\Environment;
@@ -29,7 +30,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Autowiring(false)
  */
-class Bootstrap
+class Bootstrap implements ImmutableInstance
 {
     /**
      * Required PHP version
diff -u -r Packages/Framework/Neos.Flow/Classes/Core/ClassLoader.php Packages-Patched/Framework/Neos.Flow/Classes/Core/ClassLoader.php
--- Packages/Framework/Neos.Flow/Classes/Core/ClassLoader.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Core/ClassLoader.php	2022-05-04 12:57:45.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Package;
 use Neos\Utility\Files;

@@ -21,7 +22,7 @@
  * @Flow\Proxy(false)
  * @Flow\Scope("singleton")
  */
-class ClassLoader
+class ClassLoader implements ImmutableInstance
 {
     /**
      * @var string
diff -u -r Packages/Framework/Neos.Flow/Classes/Core/LockManager.php Packages-Patched/Framework/Neos.Flow/Classes/Core/LockManager.php
--- Packages/Framework/Neos.Flow/Classes/Core/LockManager.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Core/LockManager.php	2022-05-04 12:57:50.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * The Lock Manager controls the master lock of the whole site which is mainly
@@ -19,7 +20,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class LockManager
+class LockManager implements ImmutableInstance
 {
     /**
      * @var integer
diff -u -r Packages/Framework/Neos.Flow/Classes/Core/ProxyClassLoader.php Packages-Patched/Framework/Neos.Flow/Classes/Core/ProxyClassLoader.php
--- Packages/Framework/Neos.Flow/Classes/Core/ProxyClassLoader.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Core/ProxyClassLoader.php	2022-05-04 12:57:58.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Cache\Frontend\PhpFrontend;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Utility\Environment;

 /**
@@ -22,7 +23,7 @@
  * @Flow\Proxy(false)
  * @Flow\Scope("singleton")
  */
-class ProxyClassLoader
+class ProxyClassLoader implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Framework/Neos.Flow/Classes/Error/DebugExceptionHandler.php Packages-Patched/Framework/Neos.Flow/Classes/Error/DebugExceptionHandler.php
--- Packages/Framework/Neos.Flow/Classes/Error/DebugExceptionHandler.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Error/DebugExceptionHandler.php	2022-05-04 12:58:11.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Core\Bootstrap;
 use Neos\Flow\Http\Helper\ResponseInformationHelper;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;

 /**
@@ -23,7 +24,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class DebugExceptionHandler extends AbstractExceptionHandler
+class DebugExceptionHandler extends AbstractExceptionHandler implements ImmutableInstance
 {
     /**
      * The template for the HTML Exception output.
diff -u -r Packages/Framework/Neos.Flow/Classes/Error/ErrorHandler.php Packages-Patched/Framework/Neos.Flow/Classes/Error/ErrorHandler.php
--- Packages/Framework/Neos.Flow/Classes/Error/ErrorHandler.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Error/ErrorHandler.php	2022-05-04 12:58:33.000000000 +0200
@@ -13,13 +13,14 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Error as FlowError;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Global error handler for Flow
  *
  * @Flow\Scope("singleton")
  */
-class ErrorHandler
+class ErrorHandler implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Framework/Neos.Flow/Classes/Error/ProductionExceptionHandler.php Packages-Patched/Framework/Neos.Flow/Classes/Error/ProductionExceptionHandler.php
--- Packages/Framework/Neos.Flow/Classes/Error/ProductionExceptionHandler.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Error/ProductionExceptionHandler.php	2022-05-04 12:58:36.000000000 +0200
@@ -13,13 +13,14 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Http\Helper\ResponseInformationHelper;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A quite exception handler which catches but ignores any exception.
  *
  * @Flow\Scope("singleton")
  */
-class ProductionExceptionHandler extends AbstractExceptionHandler
+class ProductionExceptionHandler extends AbstractExceptionHandler implements ImmutableInstance
 {
     /**
      * Echoes an exception for the web.
diff -u -r Packages/Framework/Neos.Flow/Classes/Http/BaseUriProvider.php Packages-Patched/Framework/Neos.Flow/Classes/Http/BaseUriProvider.php
--- Packages/Framework/Neos.Flow/Classes/Http/BaseUriProvider.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Http/BaseUriProvider.php	2022-05-04 12:58:41.000000000 +0200
@@ -5,6 +5,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Core\Bootstrap;
 use Neos\Flow\Http\Helper\RequestInformationHelper;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Psr\Http\Message\ServerRequestInterface;
 use Psr\Http\Message\UriInterface;

@@ -13,7 +14,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class BaseUriProvider
+class BaseUriProvider implements ImmutableInstance
 {
     /**
      * THe possibly configured Flow base URI.
diff -u -r Packages/Framework/Neos.Flow/Classes/Http/Middleware/MiddlewaresChainFactory.php Packages-Patched/Framework/Neos.Flow/Classes/Http/Middleware/MiddlewaresChainFactory.php
--- Packages/Framework/Neos.Flow/Classes/Http/Middleware/MiddlewaresChainFactory.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Http/Middleware/MiddlewaresChainFactory.php	2022-05-04 12:59:12.000000000 +0200
@@ -14,6 +14,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Utility\PositionalArraySorter;
 use Psr\Http\Server\MiddlewareInterface;
@@ -23,7 +24,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class MiddlewaresChainFactory
+class MiddlewaresChainFactory implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/Http/RequestHandler.php Packages-Patched/Framework/Neos.Flow/Classes/Http/RequestHandler.php
--- Packages/Framework/Neos.Flow/Classes/Http/RequestHandler.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Http/RequestHandler.php	2022-05-04 12:59:05.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Core\Bootstrap;
 use Neos\Flow\Http\Helper\ResponseInformationHelper;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Psr\Http\Message\ResponseInterface;
 use Psr\Http\Message\ServerRequestInterface;

diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/AbstractXmlParser.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/AbstractXmlParser.php
--- Packages/Framework/Neos.Flow/Classes/I18n/AbstractXmlParser.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/AbstractXmlParser.php	2022-05-04 13:01:39.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;

 /**
  * An abstract class for all concrete classes that parses any kind of XML data.
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/Cldr/CldrParser.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/Cldr/CldrParser.php
--- Packages/Framework/Neos.Flow/Classes/I18n/Cldr/CldrParser.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/Cldr/CldrParser.php	2022-05-04 13:01:45.000000000 +0200
@@ -13,6 +13,8 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\I18n\AbstractXmlParser;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;

 /**
  * A class which parses CLDR file to simple but useful array representation.
@@ -50,7 +52,7 @@
  * @Flow\Scope("singleton")
  * @see http://www.unicode.org/reports/tr35/#Inheritance_and_Validity [1]
  */
-class CldrParser extends AbstractXmlParser
+class CldrParser extends AbstractXmlParser implements ImmutableInstance
 {
     /**
      * Returns array representation of XML data, starting from a root node.
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/Cldr/CldrRepository.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/Cldr/CldrRepository.php
--- Packages/Framework/Neos.Flow/Classes/I18n/Cldr/CldrRepository.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/Cldr/CldrRepository.php	2022-05-04 13:02:30.000000000 +0200
@@ -13,6 +13,8 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\I18n;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Utility\Files;

 /**
@@ -23,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class CldrRepository
+class CldrRepository implements ResettableInstance
 {
     /**
      * An absolute path to the directory where CLDR resides. It is changed only
@@ -149,4 +151,10 @@

         return $filesInHierarchy;
     }
+
+    public function resetInstance(): void
+    {
+        // FIXME Check if we need to reset this at all
+        $this->models = null;
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/Cldr/Reader/CurrencyReader.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/Cldr/Reader/CurrencyReader.php
--- Packages/Framework/Neos.Flow/Classes/I18n/Cldr/Reader/CurrencyReader.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/Cldr/Reader/CurrencyReader.php	2022-05-04 13:02:44.000000000 +0200
@@ -16,13 +16,14 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Cache\Frontend\VariableFrontend;
 use Neos\Flow\I18n\Cldr\CldrRepository;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A reader for data placed in "currencyData" tag in CLDR.
  *
  * @Flow\Scope("singleton")
  */
-class CurrencyReader
+class CurrencyReader implements ImmutableInstance
 {
     /**
      * @var CldrRepository
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/Cldr/Reader/DatesReader.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/Cldr/Reader/DatesReader.php
--- Packages/Framework/Neos.Flow/Classes/I18n/Cldr/Reader/DatesReader.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/Cldr/Reader/DatesReader.php	2022-05-04 13:02:50.000000000 +0200
@@ -18,6 +18,7 @@
 use Neos\Flow\I18n\Cldr\CldrModel;
 use Neos\Flow\I18n\Cldr\CldrRepository;
 use Neos\Flow\I18n\Locale;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A reader for data placed in "dates" tag in CLDR.
@@ -30,7 +31,7 @@
  * @see http://www.unicode.org/reports/tr35/#Date_Elements
  * @see http://www.unicode.org/reports/tr35/#Date_Format_Patterns
  */
-class DatesReader
+class DatesReader implements ImmutableInstance
 {
     /**
      * Constant for date-only format
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/Cldr/Reader/NumbersReader.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/Cldr/Reader/NumbersReader.php
--- Packages/Framework/Neos.Flow/Classes/I18n/Cldr/Reader/NumbersReader.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/Cldr/Reader/NumbersReader.php	2022-05-04 13:02:57.000000000 +0200
@@ -17,6 +17,7 @@
 use Neos\Cache\Frontend\VariableFrontend;
 use Neos\Flow\I18n\Cldr\CldrRepository;
 use Neos\Flow\I18n\Locale;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A reader for data placed in "numbers" tag in CLDR.
@@ -37,7 +38,7 @@
  * @see http://www.unicode.org/reports/tr35/#Number_Elements
  * @see http://www.unicode.org/reports/tr35/#Number_Format_Patterns
  */
-class NumbersReader
+class NumbersReader implements ImmutableInstance
 {
     /**
      * An expression to catch one subformat. One format string can have
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/Cldr/Reader/PluralsReader.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/Cldr/Reader/PluralsReader.php
--- Packages/Framework/Neos.Flow/Classes/I18n/Cldr/Reader/PluralsReader.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/Cldr/Reader/PluralsReader.php	2022-05-04 13:03:00.000000000 +0200
@@ -17,6 +17,7 @@
 use Neos\Cache\Frontend\VariableFrontend;
 use Neos\Flow\I18n\Cldr\CldrRepository;
 use Neos\Flow\I18n\Locale;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A reader for data placed in "plurals" tag in CLDR.
@@ -32,7 +33,7 @@
  * @Flow\Scope("singleton")
  * @see http://www.unicode.org/reports/tr35/#Language_Plural_Rules
  */
-class PluralsReader
+class PluralsReader implements ImmutableInstance
 {
     /**
      * An expression to catch one plural subrule. One rule consists of one or
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/Detector.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/Detector.php
--- Packages/Framework/Neos.Flow/Classes/I18n/Detector.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/Detector.php	2022-05-04 12:59:53.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\I18n;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * The Detector class provides methods for automatic locale detection
@@ -20,7 +21,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class Detector
+class Detector implements ImmutableInstance
 {
     /**
      * @var I18n\Service
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/FormatResolver.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/FormatResolver.php
--- Packages/Framework/Neos.Flow/Classes/I18n/FormatResolver.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/FormatResolver.php	2022-05-04 13:00:06.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Reflection\ReflectionService;
 use Neos\Flow\I18n\Formatter\FormatterInterface;
@@ -37,7 +38,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class FormatResolver
+class FormatResolver implements ImmutableInstance
 {
     /**
      * @var ObjectManagerInterface
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/Formatter/DatetimeFormatter.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/Formatter/DatetimeFormatter.php
--- Packages/Framework/Neos.Flow/Classes/I18n/Formatter/DatetimeFormatter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/Formatter/DatetimeFormatter.php	2022-05-04 13:03:06.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\Flow\I18n\Cldr\Reader\DatesReader;
 use Neos\Flow\I18n\Exception\InvalidArgumentException;
 use Neos\Flow\I18n\Locale;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Formatter for date and time.
@@ -27,7 +28,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class DatetimeFormatter implements FormatterInterface
+class DatetimeFormatter implements FormatterInterface, ImmutableInstance
 {
     /**
      * @var DatesReader
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/Formatter/NumberFormatter.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/Formatter/NumberFormatter.php
--- Packages/Framework/Neos.Flow/Classes/I18n/Formatter/NumberFormatter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/Formatter/NumberFormatter.php	2022-05-04 13:03:19.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\Flow\I18n\Cldr\Reader\CurrencyReader;
 use Neos\Flow\I18n\Cldr\Reader\NumbersReader;
 use Neos\Flow\I18n\Locale;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Formatter for numbers.
@@ -22,7 +23,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class NumberFormatter implements FormatterInterface
+class NumberFormatter implements FormatterInterface, ImmutableInstance
 {
     /**
      * @var NumbersReader
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/LocaleCollection.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/LocaleCollection.php
--- Packages/Framework/Neos.Flow/Classes/I18n/LocaleCollection.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/LocaleCollection.php	2022-05-04 13:00:14.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * The LocaleCollection class contains all locales available in current
@@ -22,7 +23,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class LocaleCollection
+class LocaleCollection implements ImmutableInstance
 {
     /**
      * This array contains all locales added to this collection.
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/LocaleTypeConverter.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/LocaleTypeConverter.php
--- Packages/Framework/Neos.Flow/Classes/I18n/LocaleTypeConverter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/LocaleTypeConverter.php	2022-05-04 13:00:20.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\Flow\Property\TypeConverter\AbstractTypeConverter;

@@ -21,7 +22,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class LocaleTypeConverter extends AbstractTypeConverter
+class LocaleTypeConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var string
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/Parser/DatetimeParser.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/Parser/DatetimeParser.php
--- Packages/Framework/Neos.Flow/Classes/I18n/Parser/DatetimeParser.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/Parser/DatetimeParser.php	2022-05-04 13:03:24.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\Flow\I18n\Cldr\Reader\DatesReader;
 use Neos\Flow\I18n\Exception\InvalidArgumentException;
 use Neos\Flow\I18n;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Parser for date and time.
@@ -22,7 +23,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class DatetimeParser
+class DatetimeParser implements ImmutableInstance
 {
     /**
      * Regex pattern for matching abbreviated timezones, like GMT, CEST, etc.
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/Parser/NumberParser.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/Parser/NumberParser.php
--- Packages/Framework/Neos.Flow/Classes/I18n/Parser/NumberParser.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/Parser/NumberParser.php	2022-05-04 13:03:28.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\Flow\I18n\Cldr\Reader\NumbersReader;
 use Neos\Flow\I18n\Locale;
 use Neos\Flow\I18n\Utility;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Parser for numbers.
@@ -27,7 +28,7 @@
  * @api
  * @todo Currency support
  */
-class NumberParser
+class NumberParser implements ImmutableInstance
 {
     /**
      * Regex pattern for matching one or more digits.
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/Service.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/Service.php
--- Packages/Framework/Neos.Flow/Classes/I18n/Service.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/Service.php	2022-05-04 13:00:31.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Cache\Frontend\VariableFrontend;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Package\FlowPackageInterface;
 use Neos\Flow\Package\PackageManager;
 use Neos\Utility\Files;
@@ -24,7 +25,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class Service
+class Service implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/TranslationProvider/XliffTranslationProvider.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/TranslationProvider/XliffTranslationProvider.php
--- Packages/Framework/Neos.Flow/Classes/I18n/TranslationProvider/XliffTranslationProvider.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/TranslationProvider/XliffTranslationProvider.php	2022-05-04 13:03:33.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\I18n;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * The concrete implementation of TranslationProviderInterface which uses XLIFF
@@ -20,7 +21,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class XliffTranslationProvider implements TranslationProviderInterface
+class XliffTranslationProvider implements TranslationProviderInterface, ImmutableInstance
 {
     /**
      * @var I18n\Xliff\Service\XliffFileProvider
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/Translator.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/Translator.php
--- Packages/Framework/Neos.Flow/Classes/I18n/Translator.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/Translator.php	2022-05-04 13:00:41.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\I18n;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A class for translating messages
@@ -39,7 +40,7 @@
  * @see TranslationProvider\TranslationProviderInterface
  * @see Cldr\Reader\PluralsReader
  */
-class Translator
+class Translator implements ImmutableInstance
 {
     /**
      * @var I18n\Service
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/Utility.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/Utility.php
--- Packages/Framework/Neos.Flow/Classes/I18n/Utility.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/Utility.php	2022-05-04 13:00:46.000000000 +0200
@@ -12,13 +12,14 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * The Utility class for locale specific actions
  *
  * @Flow\Scope("singleton")
  */
-class Utility
+class Utility implements ImmutableInstance
 {
     /**
      * A pattern which matches HTTP Accept-Language Headers
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/Xliff/Service/XliffFileProvider.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/Xliff/Service/XliffFileProvider.php
--- Packages/Framework/Neos.Flow/Classes/I18n/Xliff/Service/XliffFileProvider.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/Xliff/Service/XliffFileProvider.php	2022-05-04 13:03:56.000000000 +0200
@@ -17,6 +17,7 @@
 use Neos\Flow\I18n\Locale;
 use Neos\Flow\I18n\Xliff\Model\FileAdapter;
 use Neos\Flow\I18n\Xliff\V12\XliffParser as V12XliffParser;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Package\PackageManager;
 use Neos\Utility\Arrays;
 use Neos\Utility\Files;
@@ -26,7 +27,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class XliffFileProvider
+class XliffFileProvider implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/Xliff/Service/XliffReader.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/Xliff/Service/XliffReader.php
--- Packages/Framework/Neos.Flow/Classes/I18n/Xliff/Service/XliffReader.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/Xliff/Service/XliffReader.php	2022-05-04 13:03:59.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Psr\Log\LoggerInterface;

 /**
@@ -20,7 +21,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class XliffReader
+class XliffReader implements ImmutableInstance
 {
     /**
      * @Flow\Inject(name="Neos.Flow:I18nLogger")
diff -u -r Packages/Framework/Neos.Flow/Classes/I18n/Xliff/V12/XliffParser.php Packages-Patched/Framework/Neos.Flow/Classes/I18n/Xliff/V12/XliffParser.php
--- Packages/Framework/Neos.Flow/Classes/I18n/Xliff/V12/XliffParser.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/I18n/Xliff/V12/XliffParser.php	2022-05-04 13:04:03.000000000 +0200
@@ -16,6 +16,7 @@
 use Neos\Flow\I18n\Exception\InvalidXmlFileException;
 use Neos\Flow\I18n\Locale;
 use Neos\Flow\I18n\Xliff\Exception\InvalidXliffDataException;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A class which parses XLIFF file to simple but useful array representation.
@@ -31,7 +32,7 @@
  * @see http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html [1]
  * @see http://docs.oasis-open.org/xliff/v1.2/xliff-profile-po/xliff-profile-po-1.2-cd02.html#s.detailed_mapping.tu [2]
  */
-class XliffParser extends AbstractXmlParser
+class XliffParser extends AbstractXmlParser implements ImmutableInstance
 {
     /**
      * Returns array representation of XLIFF data, starting from a root node.
diff -u -r Packages/Framework/Neos.Flow/Classes/Mvc/Controller/ActionController.php Packages-Patched/Framework/Neos.Flow/Classes/Mvc/Controller/ActionController.php
--- Packages/Framework/Neos.Flow/Classes/Mvc/Controller/ActionController.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Mvc/Controller/ActionController.php	2022-05-04 12:00:48.000000000 +0200
@@ -848,4 +848,15 @@
             $this->response->setContent($result);
         }
     }
+
+    /**
+     * Provide default resetInstance() that can be called in subclasses
+     */
+    public function resetInstance(): void
+    {
+        $this->view = null;
+        $this->request = null;
+        $this->response = null;
+        $this->actionMethodName = null;
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Mvc/Controller/MvcPropertyMappingConfigurationService.php Packages-Patched/Framework/Neos.Flow/Classes/Mvc/Controller/MvcPropertyMappingConfigurationService.php
--- Packages/Framework/Neos.Flow/Classes/Mvc/Controller/MvcPropertyMappingConfigurationService.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Mvc/Controller/MvcPropertyMappingConfigurationService.php	2022-05-04 13:04:22.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Mvc\ActionRequest;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMappingConfiguration;
 use Neos\Flow\Property\TypeConverter\PersistentObjectConverter;
 use Neos\Flow\Security\Cryptography\HashService;
@@ -37,7 +38,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class MvcPropertyMappingConfigurationService
+class MvcPropertyMappingConfigurationService implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/Mvc/Dispatcher.php Packages-Patched/Framework/Neos.Flow/Classes/Mvc/Dispatcher.php
--- Packages/Framework/Neos.Flow/Classes/Mvc/Dispatcher.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Mvc/Dispatcher.php	2022-05-04 13:04:07.000000000 +0200
@@ -21,6 +21,7 @@
 use Neos\Flow\Mvc\Exception\StopActionException;
 use Neos\Flow\Mvc\Exception\ForwardException;
 use Neos\Flow\Mvc\Exception\UnsupportedRequestTypeException;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Security\Authorization\FirewallInterface;
 use Neos\Flow\Security\Context;
@@ -35,7 +36,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class Dispatcher
+class Dispatcher implements ImmutableInstance
 {
     /**
      * @var ObjectManagerInterface
diff -u -r Packages/Framework/Neos.Flow/Classes/Mvc/FlashMessage/FlashMessageService.php Packages-Patched/Framework/Neos.Flow/Classes/Mvc/FlashMessage/FlashMessageService.php
--- Packages/Framework/Neos.Flow/Classes/Mvc/FlashMessage/FlashMessageService.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Mvc/FlashMessage/FlashMessageService.php	2022-05-04 13:05:33.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\Flow\Mvc\ActionRequest;
 use Neos\Flow\Mvc\Exception\InvalidFlashMessageConfigurationException;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Security\Exception\InvalidRequestPatternException;
 use Neos\Flow\Security\Exception\NoRequestPatternFoundException;
 use Neos\Flow\Security\RequestPatternInterface;
@@ -25,7 +26,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class FlashMessageService
+class FlashMessageService implements ResettableInstance
 {

     /**
@@ -117,4 +118,9 @@
         }
         throw new InvalidFlashMessageConfigurationException('No FlashMessage Storage could be resolved for the current request', 1502966545);
     }
+
+    public function resetInstance(): void
+    {
+        $this->instantiatedStorages = [];
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Mvc/Routing/ObjectPathMappingRepository.php Packages-Patched/Framework/Neos.Flow/Classes/Mvc/Routing/ObjectPathMappingRepository.php
--- Packages/Framework/Neos.Flow/Classes/Mvc/Routing/ObjectPathMappingRepository.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Mvc/Routing/ObjectPathMappingRepository.php	2022-05-04 13:05:43.000000000 +0200
@@ -13,6 +13,7 @@

 use Doctrine\ORM\EntityManagerInterface;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\QueryInterface;
 use Neos\Flow\Persistence\Repository;

@@ -22,7 +23,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ObjectPathMappingRepository extends Repository
+class ObjectPathMappingRepository extends Repository implements ImmutableInstance
 {
     /**
      * @var string
diff -u -r Packages/Framework/Neos.Flow/Classes/Mvc/Routing/Router.php Packages-Patched/Framework/Neos.Flow/Classes/Mvc/Routing/Router.php
--- Packages/Framework/Neos.Flow/Classes/Mvc/Routing/Router.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Mvc/Routing/Router.php	2022-05-04 13:06:22.000000000 +0200
@@ -21,6 +21,7 @@
 use Neos\Flow\Mvc\Exception\NoMatchingRouteException;
 use Neos\Flow\Mvc\Routing\Dto\ResolveContext;
 use Neos\Flow\Mvc\Routing\Dto\RouteContext;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Psr\Http\Message\UriInterface;
 use Psr\Log\LoggerInterface;

@@ -30,7 +31,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class Router implements RouterInterface
+class Router implements RouterInterface, ResettableInstance
 {
     /**
      * @Flow\Inject(name="Neos.Flow:SystemLogger")
@@ -281,4 +282,10 @@
             $this->routesConfiguration = $this->configurationManager->getConfiguration(ConfigurationManager::CONFIGURATION_TYPE_ROUTES);
         }
     }
+
+    public function resetInstance(): void
+    {
+        $this->lastMatchedRoute = null;
+        $this->lastResolvedRoute = null;
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Mvc/Routing/RouterCachingService.php Packages-Patched/Framework/Neos.Flow/Classes/Mvc/Routing/RouterCachingService.php
--- Packages/Framework/Neos.Flow/Classes/Mvc/Routing/RouterCachingService.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Mvc/Routing/RouterCachingService.php	2022-05-04 13:06:35.000000000 +0200
@@ -19,6 +19,7 @@
 use Neos\Flow\Mvc\Routing\Dto\RouteContext;
 use Neos\Flow\Mvc\Routing\Dto\RouteTags;
 use Neos\Flow\Mvc\Routing\Dto\UriConstraints;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Utility\Arrays;
@@ -30,7 +31,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class RouterCachingService
+class RouterCachingService implements ImmutableInstance
 {
     /**
      * @var VariableFrontend
diff -u -r Packages/Framework/Neos.Flow/Classes/Mvc/ViewConfigurationManager.php Packages-Patched/Framework/Neos.Flow/Classes/Mvc/ViewConfigurationManager.php
--- Packages/Framework/Neos.Flow/Classes/Mvc/ViewConfigurationManager.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Mvc/ViewConfigurationManager.php	2022-05-04 13:04:19.000000000 +0200
@@ -16,6 +16,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Cache\Frontend\VariableFrontend;
 use Neos\Flow\Configuration\ConfigurationManager;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A View Configuration Manager
@@ -26,7 +27,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ViewConfigurationManager
+class ViewConfigurationManager implements ImmutableInstance
 {
     /**
      * @var VariableFrontend
diff -u -r Packages/Framework/Neos.Flow/Classes/ObjectManagement/CompileTimeObjectManager.php Packages-Patched/Framework/Neos.Flow/Classes/ObjectManagement/CompileTimeObjectManager.php
--- Packages/Framework/Neos.Flow/Classes/ObjectManagement/CompileTimeObjectManager.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/ObjectManagement/CompileTimeObjectManager.php	2022-05-04 13:06:40.000000000 +0200
@@ -32,7 +32,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Proxy(false)
  */
-class CompileTimeObjectManager extends ObjectManager
+class CompileTimeObjectManager extends ObjectManager implements ImmutableInstance
 {
     /**
      * @var VariableFrontend
diff -u -r Packages/Framework/Neos.Flow/Classes/ObjectManagement/Configuration/ConfigurationBuilder.php Packages-Patched/Framework/Neos.Flow/Classes/ObjectManagement/Configuration/ConfigurationBuilder.php
--- Packages/Framework/Neos.Flow/Classes/ObjectManagement/Configuration/ConfigurationBuilder.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/ObjectManagement/Configuration/ConfigurationBuilder.php	2022-05-04 13:06:54.000000000 +0200
@@ -19,6 +19,7 @@
 use Neos\Flow\ObjectManagement\Exception\InvalidObjectConfigurationException;
 use Neos\Flow\ObjectManagement\Exception\UnknownClassException;
 use Neos\Flow\ObjectManagement\Exception\UnresolvedDependenciesException;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManager;
 use Neos\Flow\Reflection\ReflectionService;
 use Psr\Log\LoggerInterface;
@@ -31,7 +32,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Proxy(false)
  */
-class ConfigurationBuilder
+class ConfigurationBuilder implements ImmutableInstance
 {
     /**
      * @var ReflectionService
diff -u -r Packages/Framework/Neos.Flow/Classes/ObjectManagement/DependencyInjection/ProxyClassBuilder.php Packages-Patched/Framework/Neos.Flow/Classes/ObjectManagement/DependencyInjection/ProxyClassBuilder.php
--- Packages/Framework/Neos.Flow/Classes/ObjectManagement/DependencyInjection/ProxyClassBuilder.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/ObjectManagement/DependencyInjection/ProxyClassBuilder.php	2022-05-04 13:07:01.000000000 +0200
@@ -18,6 +18,7 @@
 use Neos\Flow\ObjectManagement\Configuration\ConfigurationArgument;
 use Neos\Flow\ObjectManagement\Configuration\ConfigurationProperty;
 use Neos\Flow\ObjectManagement\Exception as ObjectException;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\ObjectManagement\Proxy\Compiler;
 use Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait;
@@ -33,7 +34,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Proxy(false)
  */
-class ProxyClassBuilder
+class ProxyClassBuilder implements ImmutableInstance
 {
     /**
      * @var ReflectionService
Only in Packages-Patched/Framework/Neos.Flow/Classes/ObjectManagement: ImmutableInstance.php
diff -u -r Packages/Framework/Neos.Flow/Classes/ObjectManagement/ObjectManager.php Packages-Patched/Framework/Neos.Flow/Classes/ObjectManagement/ObjectManager.php
--- Packages/Framework/Neos.Flow/Classes/ObjectManagement/ObjectManager.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/ObjectManagement/ObjectManager.php	2022-05-04 16:13:05.000000000 +0200
@@ -28,7 +28,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Proxy(false)
  */
-class ObjectManager implements ObjectManagerInterface
+class ObjectManager implements ObjectManagerInterface, ImmutableInstance
 {
     /**
      * The configuration context for this Flow run
@@ -554,8 +554,18 @@
     protected function callShutdownMethods(\SplObjectStorage $shutdownObjects): void
     {
         foreach ($shutdownObjects as $object) {
+            $objectClass = get_class($object);
+            file_put_contents('php://stderr', "[Object Manager] Shutting down object $objectClass\n");
             $methodName = $shutdownObjects[$object];
             $object->$methodName();
+
+            // We need to clear the shutdown objects after shutting down, except objects that are kept
+            // (singletons marked as resettable or immutable).
+            // FIXME This doesn't feel completely right
+            if ($object instanceof ResettableInstance || $object instanceof ImmutableInstance) {
+                continue;
+            }
+            $shutdownObjects->offsetUnset($object);
         }
     }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/ObjectManagement/Proxy/Compiler.php Packages-Patched/Framework/Neos.Flow/Classes/ObjectManagement/Proxy/Compiler.php
--- Packages/Framework/Neos.Flow/Classes/ObjectManagement/Proxy/Compiler.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/ObjectManagement/Proxy/Compiler.php	2022-05-04 13:07:07.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Cache\Frontend\PhpFrontend;
 use Neos\Flow\ObjectManagement\CompileTimeObjectManager;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Reflection\ReflectionService;
 use Neos\Flow\Tests\BaseTestCase;

@@ -24,7 +25,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Proxy(false)
  */
-class Compiler
+class Compiler implements ImmutableInstance
 {
     /**
      * @var string
Only in Packages-Patched/Framework/Neos.Flow/Classes/ObjectManagement: ResettableInstance.php
diff -u -r Packages/Framework/Neos.Flow/Classes/Package/PackageManager.php Packages-Patched/Framework/Neos.Flow/Classes/Package/PackageManager.php
--- Packages/Framework/Neos.Flow/Classes/Package/PackageManager.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Package/PackageManager.php	2022-05-04 13:07:17.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\Flow\Composer\Exception\InvalidConfigurationException;
 use Neos\Flow\Composer\ComposerUtility;
 use Neos\Flow\Core\Bootstrap;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Reflection\ReflectionService;
 use Neos\Flow\SignalSlot\Dispatcher;
 use Neos\Flow\SignalSlot\Exception\InvalidSlotException;
@@ -32,7 +33,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class PackageManager
+class PackageManager implements ImmutableInstance
 {
     /**
      * The current format version for PackageStates.php files
diff -u -r Packages/Framework/Neos.Flow/Classes/Persistence/AbstractPersistenceManager.php Packages-Patched/Framework/Neos.Flow/Classes/Persistence/AbstractPersistenceManager.php
--- Packages/Framework/Neos.Flow/Classes/Persistence/AbstractPersistenceManager.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Persistence/AbstractPersistenceManager.php	2022-05-04 13:10:06.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Utility\ObjectAccess;

 /**
@@ -19,7 +20,7 @@
  *
  * @api
  */
-abstract class AbstractPersistenceManager implements PersistenceManagerInterface
+abstract class AbstractPersistenceManager implements PersistenceManagerInterface, ResettableInstance
 {
     /**
      * @var array
@@ -146,4 +147,11 @@
     {
         return $this->hasUnpersistedChanges;
     }
+
+    public function resetInstance(): void
+    {
+        $this->newObjects = [];
+        $this->hasUnpersistedChanges = false;
+    }
+
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Persistence/AllowedObjectsContainer.php Packages-Patched/Framework/Neos.Flow/Classes/Persistence/AllowedObjectsContainer.php
--- Packages/Framework/Neos.Flow/Classes/Persistence/AllowedObjectsContainer.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Persistence/AllowedObjectsContainer.php	2022-05-04 15:27:49.000000000 +0200
@@ -14,13 +14,14 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;

 /**
  * A container for the list of allowed objects to be persisted during this request.
  *
  * @Flow\Scope("singleton")
  */
-final class AllowedObjectsContainer extends \SplObjectStorage
+final class AllowedObjectsContainer extends \SplObjectStorage implements ResettableInstance
 {
     /**
      * @var bool
@@ -49,4 +50,13 @@
         $this->checkNext = false;
         return $shouldCheck;
     }
+
+    public function resetInstance(): void
+    {
+        $this->checkNext = false;
+
+        foreach ($this as $obj) {
+            $this->detach($obj);
+        }
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Persistence/Aspect/EmbeddedValueObjectPointcutFilter.php Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Aspect/EmbeddedValueObjectPointcutFilter.php
--- Packages/Framework/Neos.Flow/Classes/Persistence/Aspect/EmbeddedValueObjectPointcutFilter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Aspect/EmbeddedValueObjectPointcutFilter.php	2022-05-04 13:07:52.000000000 +0200
@@ -12,13 +12,14 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Pointcut filter matching embeddable value objects
  *
  * @Flow\Scope("singleton")
  */
-class EmbeddedValueObjectPointcutFilter implements \Neos\Flow\Aop\Pointcut\PointcutFilterInterface
+class EmbeddedValueObjectPointcutFilter implements \Neos\Flow\Aop\Pointcut\PointcutFilterInterface, ImmutableInstance
 {
     /**
      * @var \Neos\Flow\Reflection\ReflectionService
diff -u -r Packages/Framework/Neos.Flow/Classes/Persistence/Aspect/PersistenceMagicAspect.php Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Aspect/PersistenceMagicAspect.php
--- Packages/Framework/Neos.Flow/Classes/Persistence/Aspect/PersistenceMagicAspect.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Aspect/PersistenceMagicAspect.php	2022-05-04 13:07:59.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\JoinPointInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Utility\ObjectAccess;
 use Neos\Flow\Reflection\ReflectionService;
@@ -25,7 +26,7 @@
  * @Flow\Aspect
  * @Flow\Introduce("Neos\Flow\Persistence\Aspect\PersistenceMagicAspect->isEntityOrValueObject", interfaceName="Neos\Flow\Persistence\Aspect\PersistenceMagicInterface")
  */
-class PersistenceMagicAspect
+class PersistenceMagicAspect implements ImmutableInstance
 {
     /**
      * If the extension "igbinary" is installed, use it for increased performance
diff -u -r Packages/Framework/Neos.Flow/Classes/Persistence/Doctrine/AllowedObjectsListener.php Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Doctrine/AllowedObjectsListener.php
--- Packages/Framework/Neos.Flow/Classes/Persistence/Doctrine/AllowedObjectsListener.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Doctrine/AllowedObjectsListener.php	2022-05-04 13:08:06.000000000 +0200
@@ -18,6 +18,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Log\ThrowableStorageInterface;
 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\AllowedObjectsContainer;
 use Neos\Flow\Persistence\Exception as PersistenceException;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
@@ -33,7 +34,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class AllowedObjectsListener
+class AllowedObjectsListener implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/Persistence/Doctrine/ConnectionFactory.php Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Doctrine/ConnectionFactory.php
--- Packages/Framework/Neos.Flow/Classes/Persistence/Doctrine/ConnectionFactory.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Doctrine/ConnectionFactory.php	2022-05-04 13:08:13.000000000 +0200
@@ -14,13 +14,14 @@
 use Neos\Flow\Annotations as Flow;
 use Doctrine\DBAL\Connection;
 use Doctrine\ORM\EntityManagerInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Connection factory for Doctrine connection class
  *
  * @Flow\Scope("singleton")
  */
-final class ConnectionFactory
+final class ConnectionFactory implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/Persistence/Doctrine/EntityManagerConfiguration.php Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Doctrine/EntityManagerConfiguration.php
--- Packages/Framework/Neos.Flow/Classes/Persistence/Doctrine/EntityManagerConfiguration.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Doctrine/EntityManagerConfiguration.php	2022-05-04 13:08:22.000000000 +0200
@@ -23,6 +23,7 @@
 use Neos\Cache\Exception\NoSuchCacheException;
 use Neos\Flow\Cache\CacheManager;
 use Neos\Flow\Configuration\Exception\InvalidConfigurationException;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Persistence\Doctrine\Logging\SqlLogger;
 use Neos\Flow\Persistence\Exception\IllegalObjectTypeException;
@@ -33,7 +34,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class EntityManagerConfiguration
+class EntityManagerConfiguration implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/Persistence/Doctrine/EntityManagerFactory.php Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Doctrine/EntityManagerFactory.php
--- Packages/Framework/Neos.Flow/Classes/Persistence/Doctrine/EntityManagerFactory.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Doctrine/EntityManagerFactory.php	2022-05-04 13:08:27.000000000 +0200
@@ -19,6 +19,7 @@
 use Doctrine\ORM\EntityManager;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Configuration\Exception\InvalidConfigurationException;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Persistence\Doctrine\Mapping\Driver\FlowAnnotationDriver;
 use Neos\Flow\Reflection\ReflectionService;
@@ -30,7 +31,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class EntityManagerFactory
+class EntityManagerFactory implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/Persistence/Doctrine/Mapping/Driver/FlowAnnotationDriver.php Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Doctrine/Mapping/Driver/FlowAnnotationDriver.php
--- Packages/Framework/Neos.Flow/Classes/Persistence/Doctrine/Mapping/Driver/FlowAnnotationDriver.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Doctrine/Mapping/Driver/FlowAnnotationDriver.php	2022-05-04 13:11:51.000000000 +0200
@@ -23,6 +23,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\Builder\ClassNameIndex;
 use Neos\Flow\Aop\Pointcut\PointcutFilterInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\Proxy\Compiler;
 use Neos\Flow\Persistence\Doctrine\Mapping\Exception\ClassSchemaNotFoundException;
 use Neos\Flow\Reflection\ClassSchema;
@@ -44,7 +45,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class FlowAnnotationDriver implements DoctrineMappingDriverInterface, PointcutFilterInterface
+class FlowAnnotationDriver implements DoctrineMappingDriverInterface, PointcutFilterInterface, ImmutableInstance
 {
     /**
      * @var integer
diff -u -r Packages/Framework/Neos.Flow/Classes/Persistence/Doctrine/ObjectValidationAndDeDuplicationListener.php Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Doctrine/ObjectValidationAndDeDuplicationListener.php
--- Packages/Framework/Neos.Flow/Classes/Persistence/Doctrine/ObjectValidationAndDeDuplicationListener.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Doctrine/ObjectValidationAndDeDuplicationListener.php	2022-05-04 13:08:37.000000000 +0200
@@ -14,6 +14,7 @@
 use Doctrine\ORM\EntityManagerInterface;
 use Doctrine\ORM\Event\OnFlushEventArgs;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\Exception\ObjectValidationFailedException;
 use Neos\Flow\Reflection\ClassSchema;
 use Neos\Flow\Reflection\ReflectionService;
@@ -28,7 +29,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class ObjectValidationAndDeDuplicationListener
+class ObjectValidationAndDeDuplicationListener implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/Persistence/Doctrine/PersistenceManager.php Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Doctrine/PersistenceManager.php
--- Packages/Framework/Neos.Flow/Classes/Persistence/Doctrine/PersistenceManager.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Doctrine/PersistenceManager.php	2022-05-04 16:00:57.000000000 +0200
@@ -19,6 +19,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Log\ThrowableStorageInterface;
 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\AbstractPersistenceManager;
 use Neos\Flow\Persistence\Exception as PersistenceException;
 use Neos\Flow\Persistence\Exception\KnownObjectException;
@@ -37,7 +38,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class PersistenceManager extends AbstractPersistenceManager
+class PersistenceManager extends AbstractPersistenceManager implements ResettableInstance
 {
     /**
      * @Flow\Inject(name="Neos.Flow:SystemLogger")
@@ -179,6 +180,7 @@
         if (isset($this->newObjects[$identifier])) {
             return $this->newObjects[$identifier];
         }
+
         if ($useLazyLoading === true) {
             return $this->entityManager->getReference($objectType, $identifier);
         }
@@ -347,4 +349,11 @@
             || $unitOfWork->getScheduledCollectionDeletions() !== []
             || $unitOfWork->getScheduledCollectionUpdates() !== [];
     }
+
+    public function resetInstance(): void
+    {
+        file_put_contents('php://stderr', "PersistenceManager resetInstance()\n");
+        parent::resetInstance();
+        $this->entityManager->clear();
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Persistence/Doctrine/Service.php Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Doctrine/Service.php
--- Packages/Framework/Neos.Flow/Classes/Persistence/Doctrine/Service.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Persistence/Doctrine/Service.php	2022-05-04 13:11:27.000000000 +0200
@@ -46,6 +46,8 @@
 use Doctrine\ORM\Tools\SchemaValidator;
 use Doctrine\ORM\Tools\ToolsException;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Package\PackageManager;
 use Neos\Flow\Utility\Environment;
 use Neos\Flow\Utility\Exception;
@@ -62,7 +64,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class Service
+class Service implements ResettableInstance
 {
     public const DOCTRINE_MIGRATIONSTABLENAME = 'flow_doctrine_migrationstatus';

@@ -737,4 +739,9 @@
         $this->getDependencyFactory()->getMetadataStorage()->ensureInitialized();
         $this->entityManager->flush();
     }
+
+    public function resetInstance(): void
+    {
+        $this->logMessages = null;
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Property/PropertyMapper.php Packages-Patched/Framework/Neos.Flow/Classes/Property/PropertyMapper.php
--- Packages/Framework/Neos.Flow/Classes/Property/PropertyMapper.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Property/PropertyMapper.php	2022-05-04 13:12:15.000000000 +0200
@@ -15,7 +15,9 @@
 use Neos\Cache\Frontend\VariableFrontend;
 use Neos\Error\Messages\Error;
 use Neos\Error\Messages\Result;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Property\Exception\DuplicateTypeConverterException;
 use Neos\Flow\Reflection\ReflectionService;
 use Neos\Utility\TypeHandling;
@@ -29,7 +31,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class PropertyMapper
+class PropertyMapper implements ResettableInstance
 {
     /**
      * @Flow\Inject
@@ -456,4 +458,9 @@

         return $configuration;
     }
+
+    public function resetInstance(): void
+    {
+        $this->messages = null;
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/ArrayConverter.php Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/ArrayConverter.php
--- Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/ArrayConverter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/ArrayConverter.php	2022-05-04 13:12:32.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\Exception\InvalidPropertyMappingConfigurationException;
 use Neos\Flow\Property\Exception\InvalidSourceException;
 use Neos\Flow\Property\Exception\TypeConverterException;
@@ -33,7 +34,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class ArrayConverter extends AbstractTypeConverter
+class ArrayConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var string
diff -u -r Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/ArrayObjectConverter.php Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/ArrayObjectConverter.php
--- Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/ArrayObjectConverter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/ArrayObjectConverter.php	2022-05-04 13:12:41.000000000 +0200
@@ -14,6 +14,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\Exception\InvalidSourceException;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;

@@ -23,7 +24,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class ArrayObjectConverter extends AbstractTypeConverter
+class ArrayObjectConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var array<string>
diff -u -r Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/BooleanConverter.php Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/BooleanConverter.php
--- Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/BooleanConverter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/BooleanConverter.php	2022-05-04 13:13:02.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;

 /**
@@ -24,7 +25,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class BooleanConverter extends AbstractTypeConverter
+class BooleanConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var array<string>
diff -u -r Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/CollectionConverter.php Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/CollectionConverter.php
--- Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/CollectionConverter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/CollectionConverter.php	2022-05-04 13:13:05.000000000 +0200
@@ -13,6 +13,7 @@

 use Doctrine\Common\Collections\ArrayCollection;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\Exception\InvalidDataTypeException;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\Utility\TypeHandling;
@@ -26,7 +27,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class CollectionConverter extends AbstractTypeConverter
+class CollectionConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var array<string>
diff -u -r Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/DateTimeConverter.php Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/DateTimeConverter.php
--- Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/DateTimeConverter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/DateTimeConverter.php	2022-05-04 13:13:09.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\Exception\InvalidPropertyMappingConfigurationException;
 use Neos\Flow\Property\Exception\TypeConverterException;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
@@ -59,7 +60,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class DateTimeConverter extends AbstractTypeConverter
+class DateTimeConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var string
diff -u -r Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/FloatConverter.php Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/FloatConverter.php
--- Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/FloatConverter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/FloatConverter.php	2022-05-04 13:13:13.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Error\Messages\Error;
 use Neos\Flow\I18n\Locale;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\Exception\InvalidPropertyMappingConfigurationException;
 use Neos\Flow\I18n\Cldr\Reader\NumbersReader;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
@@ -90,7 +91,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class FloatConverter extends AbstractTypeConverter
+class FloatConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/IntegerConverter.php Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/IntegerConverter.php
--- Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/IntegerConverter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/IntegerConverter.php	2022-05-04 13:13:16.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Error\Messages\Error;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;

 /**
@@ -25,7 +26,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class IntegerConverter extends AbstractTypeConverter
+class IntegerConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var array<string>
diff -u -r Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/MediaTypeConverter.php Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/MediaTypeConverter.php
--- Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/MediaTypeConverter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/MediaTypeConverter.php	2022-05-04 13:13:21.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\Utility\Arrays;
 use Neos\Utility\MediaTypes;
@@ -24,7 +25,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class MediaTypeConverter extends AbstractTypeConverter implements MediaTypeConverterInterface
+class MediaTypeConverter extends AbstractTypeConverter implements MediaTypeConverterInterface, ImmutableInstance
 {
     /**
      * @var string
diff -u -r Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/ObjectConverter.php Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/ObjectConverter.php
--- Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/ObjectConverter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/ObjectConverter.php	2022-05-04 13:13:25.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\ObjectManagement\Configuration\Configuration;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Property\Exception\InvalidDataTypeException;
 use Neos\Flow\Property\Exception\InvalidPropertyMappingConfigurationException;
@@ -37,7 +38,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class ObjectConverter extends AbstractTypeConverter
+class ObjectConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var integer
diff -u -r Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/PersistentObjectConverter.php Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/PersistentObjectConverter.php
--- Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/PersistentObjectConverter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/PersistentObjectConverter.php	2022-05-04 13:13:29.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Annotations\ValueObject;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\Property\Exception\DuplicateObjectException;
 use Neos\Flow\Property\Exception\InvalidPropertyMappingConfigurationException;
@@ -40,7 +41,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class PersistentObjectConverter extends ObjectConverter
+class PersistentObjectConverter extends ObjectConverter implements ImmutableInstance
 {
     /**
      * @var string
diff -u -r Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/PersistentObjectSerializer.php Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/PersistentObjectSerializer.php
--- Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/PersistentObjectSerializer.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/PersistentObjectSerializer.php	2022-05-04 13:13:32.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\Aspect\PersistenceMagicInterface;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
@@ -24,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class PersistentObjectSerializer extends AbstractTypeConverter
+class PersistentObjectSerializer extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/ScalarTypeToObjectConverter.php Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/ScalarTypeToObjectConverter.php
--- Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/ScalarTypeToObjectConverter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/ScalarTypeToObjectConverter.php	2022-05-04 13:13:36.000000000 +0200
@@ -13,6 +13,7 @@

 use Doctrine\ORM\Mapping\Entity;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\Flow\Reflection\ReflectionService;
 use Neos\Utility\TypeHandling;
@@ -26,7 +27,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ScalarTypeToObjectConverter extends AbstractTypeConverter
+class ScalarTypeToObjectConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/SessionConverter.php Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/SessionConverter.php
--- Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/SessionConverter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/SessionConverter.php	2022-05-04 13:13:39.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\Flow\Session\Session;
 use Neos\Flow\Session\SessionManagerInterface;
@@ -24,7 +25,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class SessionConverter extends AbstractTypeConverter
+class SessionConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var string
diff -u -r Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/StringConverter.php Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/StringConverter.php
--- Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/StringConverter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/StringConverter.php	2022-05-04 13:13:44.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\Exception\InvalidPropertyMappingConfigurationException;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;

@@ -28,7 +29,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class StringConverter extends AbstractTypeConverter
+class StringConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var string
diff -u -r Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/TypedArrayConverter.php Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/TypedArrayConverter.php
--- Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/TypedArrayConverter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/TypedArrayConverter.php	2022-05-04 13:13:48.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\Utility\TypeHandling;

@@ -24,7 +25,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class TypedArrayConverter extends AbstractTypeConverter
+class TypedArrayConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var array<string>
diff -u -r Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/UriTypeConverter.php Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/UriTypeConverter.php
--- Packages/Framework/Neos.Flow/Classes/Property/TypeConverter/UriTypeConverter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Property/TypeConverter/UriTypeConverter.php	2022-05-04 13:13:51.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Error\Messages\Error;
 use GuzzleHttp\Psr7\Uri;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Psr\Http\Message\UriInterface;

@@ -24,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class UriTypeConverter extends AbstractTypeConverter
+class UriTypeConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var array<string>
diff -u -r Packages/Framework/Neos.Flow/Classes/Reflection/DocCommentParser.php Packages-Patched/Framework/Neos.Flow/Classes/Reflection/DocCommentParser.php
--- Packages/Framework/Neos.Flow/Classes/Reflection/DocCommentParser.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Reflection/DocCommentParser.php	2022-05-04 13:14:22.000000000 +0200
@@ -12,13 +12,15 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;

 /**
  * A little parser which creates tag objects from doc comments
  *
  * @Flow\Scope("singleton")
  */
-class DocCommentParser
+class DocCommentParser implements ResettableInstance
 {
     /**
      * The description as found in the doc comment
@@ -127,4 +129,10 @@
             $this->tags[$tag] = [];
         }
     }
+
+    public function resetInstance(): void
+    {
+        $this->description = '';
+        $this->tags = [];
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Reflection/ReflectionService.php Packages-Patched/Framework/Neos.Flow/Classes/Reflection/ReflectionService.php
--- Packages/Framework/Neos.Flow/Classes/Reflection/ReflectionService.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Reflection/ReflectionService.php	2022-05-04 13:14:26.000000000 +0200
@@ -21,6 +21,7 @@
 use Neos\Cache\Frontend\VariableFrontend;
 use Neos\Flow\Core\ApplicationContext;
 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\Proxy\ProxyInterface;
 use Neos\Flow\Package;
 use Neos\Flow\Package\PackageManager;
@@ -59,7 +60,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Proxy(false)
  */
-class ReflectionService
+class ReflectionService implements ImmutableInstance
 {
     const VISIBILITY_PRIVATE = 1;
     const VISIBILITY_PROTECTED = 2;
diff -u -r Packages/Framework/Neos.Flow/Classes/Reflection/ReflectionServiceFactory.php Packages-Patched/Framework/Neos.Flow/Classes/Reflection/ReflectionServiceFactory.php
--- Packages/Framework/Neos.Flow/Classes/Reflection/ReflectionServiceFactory.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Reflection/ReflectionServiceFactory.php	2022-05-04 13:14:30.000000000 +0200
@@ -16,6 +16,7 @@
 use Neos\Flow\Configuration\ConfigurationManager;
 use Neos\Flow\Core\Bootstrap;
 use Neos\Flow\Log\PsrLoggerFactoryInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Package\PackageManager;
 use Neos\Flow\Utility\Environment;

@@ -26,7 +27,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Proxy(false)
  */
-class ReflectionServiceFactory
+class ReflectionServiceFactory implements ImmutableInstance
 {
     /**
      * @var ReflectionService
diff -u -r Packages/Framework/Neos.Flow/Classes/ResourceManagement/Publishing/MessageCollector.php Packages-Patched/Framework/Neos.Flow/Classes/ResourceManagement/Publishing/MessageCollector.php
--- Packages/Framework/Neos.Flow/Classes/ResourceManagement/Publishing/MessageCollector.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/ResourceManagement/Publishing/MessageCollector.php	2022-05-04 13:16:23.000000000 +0200
@@ -17,6 +17,8 @@
 use Neos\Error\Messages\Notice;
 use Neos\Error\Messages\Warning;
 use Neos\Flow\Exception;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Psr\Log\LoggerInterface;
 use Psr\Log\LogLevel;

@@ -25,7 +27,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class MessageCollector
+class MessageCollector implements ImmutableInstance
 {
     const LOGLEVEL_MAPPING = [
         Error::SEVERITY_ERROR => LogLevel::ERROR,
diff -u -r Packages/Framework/Neos.Flow/Classes/ResourceManagement/ResourceManager.php Packages-Patched/Framework/Neos.Flow/Classes/ResourceManagement/ResourceManager.php
--- Packages/Framework/Neos.Flow/Classes/ResourceManagement/ResourceManager.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/ResourceManagement/ResourceManager.php	2022-05-04 13:14:36.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Utility\ObjectAccess;
@@ -30,7 +31,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class ResourceManager
+class ResourceManager implements ImmutableInstance
 {
     /**
      * Names of the default collections for static and persistent resources.
diff -u -r Packages/Framework/Neos.Flow/Classes/ResourceManagement/ResourceRepository.php Packages-Patched/Framework/Neos.Flow/Classes/ResourceManagement/ResourceRepository.php
--- Packages/Framework/Neos.Flow/Classes/ResourceManagement/ResourceRepository.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/ResourceManagement/ResourceRepository.php	2022-05-04 13:15:10.000000000 +0200
@@ -15,6 +15,8 @@
 use Doctrine\ORM\Internal\Hydration\IterableResult;
 use Doctrine\ORM\QueryBuilder;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\PersistenceManagerInterface;
 use Neos\Flow\Persistence\Exception\IllegalObjectTypeException;
 use Neos\Flow\Persistence\QueryResultInterface;
@@ -29,7 +31,7 @@
  * @Flow\Scope("singleton")
  * @see ResourceManager
  */
-class ResourceRepository extends Repository
+class ResourceRepository extends Repository implements ResettableInstance
 {
     /**
      * @var string
@@ -313,4 +315,9 @@
     {
         return clone $this->addedResources;
     }
+
+    public function resetInstance(): void
+    {
+        $this->resetAfterPersistingChanges();
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/ResourceManagement/ResourceTypeConverter.php Packages-Patched/Framework/Neos.Flow/Classes/ResourceManagement/ResourceTypeConverter.php
--- Packages/Framework/Neos.Flow/Classes/ResourceManagement/ResourceTypeConverter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/ResourceManagement/ResourceTypeConverter.php	2022-05-04 13:15:39.000000000 +0200
@@ -12,6 +12,8 @@
  */

 use Neos\Flow\Log\Utility\LogEnvironment;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Psr\Http\Message\UploadedFileInterface;
 use Neos\Flow\Annotations as Flow;
 use Neos\Error\Messages\Error as FlowError;
@@ -59,7 +61,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ResourceTypeConverter extends AbstractTypeConverter
+class ResourceTypeConverter extends AbstractTypeConverter implements ResettableInstance
 {
     /**
      * @var string
@@ -350,4 +352,9 @@

         return $collectionName;
     }
+
+    public function resetInstance(): void
+    {
+        $this->convertedResources = [];
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/AccountFactory.php Packages-Patched/Framework/Neos.Flow/Classes/Security/AccountFactory.php
--- Packages/Framework/Neos.Flow/Classes/Security/AccountFactory.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/AccountFactory.php	2022-05-04 13:16:27.000000000 +0200
@@ -12,13 +12,14 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A factory for conveniently creating new accounts
  *
  * @Flow\Scope("singleton")
  */
-class AccountFactory
+class AccountFactory implements ImmutableInstance
 {
     /**
      * @var Cryptography\HashService
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/AccountRepository.php Packages-Patched/Framework/Neos.Flow/Classes/Security/AccountRepository.php
--- Packages/Framework/Neos.Flow/Classes/Security/AccountRepository.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/AccountRepository.php	2022-05-04 13:16:32.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Persistence\Exception\IllegalObjectTypeException;
 use Neos\Flow\Persistence\QueryInterface;
 use Neos\Flow\Persistence\Repository;
@@ -22,7 +23,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class AccountRepository extends Repository
+class AccountRepository extends Repository implements ImmutableInstance
 {
     /**
      * @var string
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Aspect/LoggingAspect.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Aspect/LoggingAspect.php
--- Packages/Framework/Neos.Flow/Classes/Security/Aspect/LoggingAspect.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Aspect/LoggingAspect.php	2022-05-04 13:19:46.000000000 +0200
@@ -15,6 +15,8 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\JoinPointInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Security\Authentication\AuthenticationManagerInterface;
 use Neos\Flow\Security\Authentication\TokenInterface;
 use Neos\Flow\Security\Exception\NoTokensAuthenticatedException;
@@ -26,7 +28,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Aspect
  */
-class LoggingAspect
+class LoggingAspect implements ResettableInstance
 {
     /**
      * @Flow\Inject(name="Neos.Flow:SecurityLogger")
@@ -180,4 +182,9 @@
             'methodName' => $joinPoint->getMethodName()
         ]];
     }
+
+    public function resetInstance(): void
+    {
+        $this->alreadyLoggedAuthenticateCall = false;
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Aspect/PolicyEnforcementAspect.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Aspect/PolicyEnforcementAspect.php
--- Packages/Framework/Neos.Flow/Classes/Security/Aspect/PolicyEnforcementAspect.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Aspect/PolicyEnforcementAspect.php	2022-05-04 13:19:59.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\JoinPointInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Security\Authorization\Interceptor\PolicyEnforcement;
 use Neos\Flow\Security\Context;

@@ -22,7 +23,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Aspect
  */
-class PolicyEnforcementAspect
+class PolicyEnforcementAspect implements ImmutableInstance
 {
     /**
      * The policy enforcement interceptor
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Authentication/AuthenticationProviderManager.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Authentication/AuthenticationProviderManager.php
--- Packages/Framework/Neos.Flow/Classes/Security/Authentication/AuthenticationProviderManager.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Authentication/AuthenticationProviderManager.php	2022-05-04 15:56:32.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Security\Authentication\Token\SessionlessTokenInterface;
 use Neos\Flow\Security\Context;
 use Neos\Flow\Security\Exception\NoTokensAuthenticatedException;
@@ -26,7 +27,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class AuthenticationProviderManager implements AuthenticationManagerInterface
+class AuthenticationProviderManager implements AuthenticationManagerInterface, ResettableInstance
 {
     /**
      * @var SessionManagerInterface
@@ -267,4 +268,10 @@
     protected function emitSuccessfullyAuthenticated(): void
     {
     }
+
+    public function resetInstance(): void
+    {
+        $this->isAuthenticated = null;
+        $this->isInitialized = false;
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Authentication/AuthenticationProviderResolver.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Authentication/AuthenticationProviderResolver.php
--- Packages/Framework/Neos.Flow/Classes/Security/Authentication/AuthenticationProviderResolver.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Authentication/AuthenticationProviderResolver.php	2022-05-04 13:21:08.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Security\Exception\NoAuthenticationProviderFoundException;

@@ -20,7 +21,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class AuthenticationProviderResolver
+class AuthenticationProviderResolver implements ImmutableInstance
 {
     /**
      * @var ObjectManagerInterface
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Authentication/AuthenticationTokenResolver.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Authentication/AuthenticationTokenResolver.php
--- Packages/Framework/Neos.Flow/Classes/Security/Authentication/AuthenticationTokenResolver.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Authentication/AuthenticationTokenResolver.php	2022-05-04 13:21:12.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Security\Exception\NoAuthenticationTokenFoundException;

@@ -20,7 +21,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class AuthenticationTokenResolver
+class AuthenticationTokenResolver implements ImmutableInstance
 {
     /**
      * @var ObjectManagerInterface
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Authentication/TokenAndProviderFactory.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Authentication/TokenAndProviderFactory.php
--- Packages/Framework/Neos.Flow/Classes/Security/Authentication/TokenAndProviderFactory.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Authentication/TokenAndProviderFactory.php	2022-05-04 13:22:32.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Security\Exception;
 use Neos\Flow\Security\RequestPatternInterface;
 use Neos\Flow\Security\RequestPatternResolver;
@@ -22,7 +23,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class TokenAndProviderFactory implements TokenAndProviderFactoryInterface
+class TokenAndProviderFactory implements TokenAndProviderFactoryInterface, ResettableInstance
 {
     /**
      * @var bool
@@ -146,12 +147,12 @@
         $this->providers = [];

         foreach ($this->providerConfigurations as $providerName => $providerConfiguration) {
-
+
             // ignore removed provider configurations
             if (!$providerConfiguration) {
                 continue;
             }
-
+
             if (!is_array($providerConfiguration) || !isset($providerConfiguration['provider'])) {
                 throw new Exception\InvalidAuthenticationProviderException('The configured authentication provider "' . $providerName . '" needs a "provider" option!', 1248209521);
             }
@@ -234,4 +235,11 @@

         $this->isInitialized = true;
     }
+
+    public function resetInstance(): void
+    {
+        $this->isInitialized = false;
+        $this->tokens = [];
+        $this->providers = [];
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Authorization/AfterInvocationProcessorManager.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/AfterInvocationProcessorManager.php
--- Packages/Framework/Neos.Flow/Classes/Security/Authorization/AfterInvocationProcessorManager.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/AfterInvocationProcessorManager.php	2022-05-04 13:22:41.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\JoinPointInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Security\Context;
 use Neos\Flow\Security\Exception\AccessDeniedException;

@@ -22,7 +23,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class AfterInvocationProcessorManager implements AfterInvocationManagerInterface
+class AfterInvocationProcessorManager implements AfterInvocationManagerInterface, ImmutableInstance
 {
     /**
      * Processes the given return object. May throw an security exception or filter the result depending on the current user rights.
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Authorization/FilterFirewall.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/FilterFirewall.php
--- Packages/Framework/Neos.Flow/Classes/Security/Authorization/FilterFirewall.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/FilterFirewall.php	2022-05-04 13:22:55.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Mvc\ActionRequest;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Security\Exception\AccessDeniedException;
 use Neos\Flow\Security\RequestPatternInterface;
@@ -23,7 +24,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class FilterFirewall implements FirewallInterface
+class FilterFirewall implements FirewallInterface, ImmutableInstance
 {
     /**
      * @var ObjectManagerInterface
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/AccessDeny.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/AccessDeny.php
--- Packages/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/AccessDeny.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/AccessDeny.php	2022-05-04 13:23:29.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Security\Authorization\InterceptorInterface;
 use Neos\Flow\Security\Exception\AccessDeniedException;

@@ -20,7 +21,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class AccessDeny implements InterceptorInterface
+class AccessDeny implements InterceptorInterface, ImmutableInstance
 {
     /**
      * Invokes nothing, always throws an AccessDenied Exception.
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/AccessGrant.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/AccessGrant.php
--- Packages/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/AccessGrant.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/AccessGrant.php	2022-05-04 13:23:32.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Security\Authorization\InterceptorInterface;

 /**
@@ -19,7 +20,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class AccessGrant implements InterceptorInterface
+class AccessGrant implements InterceptorInterface, ImmutableInstance
 {
     /**
      * Invokes nothing, always returns true.
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/CsrfTokenMissing.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/CsrfTokenMissing.php
--- Packages/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/CsrfTokenMissing.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/CsrfTokenMissing.php	2022-05-04 13:23:37.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Security\Authorization\InterceptorInterface;
 use Neos\Flow\Security\Exception\AccessDeniedException;

@@ -20,7 +21,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class CsrfTokenMissing implements InterceptorInterface
+class CsrfTokenMissing implements InterceptorInterface, ImmutableInstance
 {
     /**
      * Invokes nothing, always throws an AccessDenied Exception.
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/PolicyEnforcement.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/PolicyEnforcement.php
--- Packages/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/PolicyEnforcement.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/PolicyEnforcement.php	2022-05-04 13:23:55.000000000 +0200
@@ -14,6 +14,8 @@
 use Doctrine\ORM\EntityNotFoundException;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\JoinPointInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Security\Authentication\AuthenticationManagerInterface;
 use Neos\Flow\Security\Authorization\Privilege\Method\MethodPrivilegeInterface;
 use Neos\Flow\Security\Authorization\Privilege\Method\MethodPrivilegeSubject;
@@ -33,7 +35,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class PolicyEnforcement implements InterceptorInterface
+class PolicyEnforcement implements InterceptorInterface, ResettableInstance
 {
     /**
      * @var Context
@@ -128,4 +130,9 @@

         return sprintf('Access denied for method' . chr(10) . 'Method: %s::%s()' . chr(10) . chr(10) . '%s' . chr(10) . chr(10) . '%s', $this->joinPoint->getClassName(), $this->joinPoint->getMethodName(), $privilegeReasonMessage, $rolesMessage);
     }
+
+    public function resetInstance(): void
+    {
+        $this->joinPoint = null;
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/RequireAuthentication.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/RequireAuthentication.php
--- Packages/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/RequireAuthentication.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/Interceptor/RequireAuthentication.php	2022-05-04 13:24:20.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Security\Authentication\AuthenticationManagerInterface;
 use Neos\Flow\Security\Authorization\InterceptorInterface;

@@ -21,7 +22,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class RequireAuthentication implements InterceptorInterface
+class RequireAuthentication implements InterceptorInterface, ImmutableInstance
 {
     /**
      * @var AuthenticationManagerInterface
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Authorization/InterceptorResolver.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/InterceptorResolver.php
--- Packages/Framework/Neos.Flow/Classes/Security/Authorization/InterceptorResolver.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/InterceptorResolver.php	2022-05-04 13:22:58.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Security\Exception\NoInterceptorFoundException;

@@ -20,7 +21,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class InterceptorResolver
+class InterceptorResolver implements ImmutableInstance
 {
     /**
      * @var ObjectManagerInterface
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Authorization/Privilege/Entity/Doctrine/EntityPrivilegeExpressionEvaluator.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/Privilege/Entity/Doctrine/EntityPrivilegeExpressionEvaluator.php
--- Packages/Framework/Neos.Flow/Classes/Security/Authorization/Privilege/Entity/Doctrine/EntityPrivilegeExpressionEvaluator.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/Privilege/Entity/Doctrine/EntityPrivilegeExpressionEvaluator.php	2022-05-04 13:24:25.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\Eel\Context;
 use Neos\Eel\ParserException;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * An evaluator that compiles expressions down to PHP code
@@ -24,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class EntityPrivilegeExpressionEvaluator extends CompilingEvaluator
+class EntityPrivilegeExpressionEvaluator extends CompilingEvaluator implements ImmutableInstance
 {
     /**
      * Evaluate an expression under a given context
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Authorization/Privilege/Method/MethodPrivilegePointcutFilter.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/Privilege/Method/MethodPrivilegePointcutFilter.php
--- Packages/Framework/Neos.Flow/Classes/Security/Authorization/Privilege/Method/MethodPrivilegePointcutFilter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/Privilege/Method/MethodPrivilegePointcutFilter.php	2022-05-04 13:24:53.000000000 +0200
@@ -18,6 +18,7 @@
 use Neos\Flow\Aop\Pointcut\RuntimeExpressionEvaluator;
 use Neos\Flow\Cache\CacheManager;
 use Neos\Cache\Frontend\VariableFrontend;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Security\Policy\PolicyService;

@@ -26,7 +27,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class MethodPrivilegePointcutFilter implements PointcutFilterInterface
+class MethodPrivilegePointcutFilter implements PointcutFilterInterface, ImmutableInstance
 {
     /**
      * @var PointcutFilterComposite[]
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Authorization/Privilege/Method/MethodTargetExpressionParser.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/Privilege/Method/MethodTargetExpressionParser.php
--- Packages/Framework/Neos.Flow/Classes/Security/Authorization/Privilege/Method/MethodTargetExpressionParser.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/Privilege/Method/MethodTargetExpressionParser.php	2022-05-04 13:24:56.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\Flow\Aop\Exception\InvalidPointcutExpressionException;
 use Neos\Flow\Aop\Pointcut\PointcutExpressionParser;
 use Neos\Flow\Aop\Pointcut\PointcutFilterComposite;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A specialized pointcut expression parser tailored to policy expressions
@@ -22,7 +23,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Proxy(false)
  */
-class MethodTargetExpressionParser extends PointcutExpressionParser
+class MethodTargetExpressionParser extends PointcutExpressionParser implements ImmutableInstance
 {
     /**
      * Throws an exception, as recursive privilege targets are not allowed.
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Authorization/PrivilegeManager.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/PrivilegeManager.php
--- Packages/Framework/Neos.Flow/Classes/Security/Authorization/PrivilegeManager.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/PrivilegeManager.php	2022-05-04 13:23:03.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Security\Authorization\Privilege\PrivilegeInterface;
 use Neos\Flow\Security\Context;
@@ -22,7 +23,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class PrivilegeManager implements PrivilegeManagerInterface
+class PrivilegeManager implements PrivilegeManagerInterface, ImmutableInstance
 {
     /**
      * @var ObjectManagerInterface
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Authorization/TestingPrivilegeManager.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/TestingPrivilegeManager.php
--- Packages/Framework/Neos.Flow/Classes/Security/Authorization/TestingPrivilegeManager.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Authorization/TestingPrivilegeManager.php	2022-05-04 13:23:24.000000000 +0200
@@ -12,13 +12,14 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ResettableInstance;

 /**
  * An access decision manager that can be overridden for tests
  *
  * @Flow\Scope("singleton")
  */
-class TestingPrivilegeManager extends PrivilegeManager
+class TestingPrivilegeManager extends PrivilegeManager implements ResettableInstance
 {
     /**
      * @var boolean
@@ -84,4 +85,9 @@
     {
         $this->overrideDecision = null;
     }
+
+    public function resetInstance(): void
+    {
+        $this->overrideDecision = null;
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Channel/HttpsInterceptor.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Channel/HttpsInterceptor.php
--- Packages/Framework/Neos.Flow/Classes/Security/Channel/HttpsInterceptor.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Channel/HttpsInterceptor.php	2022-05-04 13:25:02.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Security\Authentication\AuthenticationManagerInterface;
 use Neos\Flow\Security\Authorization\InterceptorInterface;
 use Neos\Flow\Security\Context;
@@ -21,7 +22,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class HttpsInterceptor implements InterceptorInterface
+class HttpsInterceptor implements InterceptorInterface, ImmutableInstance
 {
     /**
      * @var boolean
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Context.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Context.php
--- Packages/Framework/Neos.Flow/Classes/Security/Context.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Context.php	2022-05-04 13:18:51.000000000 +0200
@@ -15,6 +15,7 @@
 use Neos\Cache\CacheAwareInterface;
 use Neos\Flow\Log\Utility\LogEnvironment;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Security\Authentication\Token\SessionlessTokenInterface;
 use Neos\Flow\Security\Authentication\TokenAndProviderFactoryInterface;
 use Neos\Flow\Security\Authentication\TokenInterface;
@@ -32,7 +33,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class Context
+class Context implements ResettableInstance
 {
     /**
      * Authenticate as many tokens as possible but do not require
@@ -893,4 +894,17 @@
     {
         $this->sessionManager->destroySessionsByTag($this->getSessionTagForAccount($account), $reason);
     }
+
+    public function resetInstance(): void
+    {
+        $this->initialized = false;
+        $this->activeTokens = [];
+        $this->inactiveTokens = [];
+        $this->request = null;
+        $this->roles = null;
+        $this->authorizationChecksDisabled = false;
+        $this->contextHash = null;
+        $this->csrfTokensRemovedAfterCurrentRequest = [];
+        $this->requestCsrfToken = '';
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Cryptography/BCryptHashingStrategy.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Cryptography/BCryptHashingStrategy.php
--- Packages/Framework/Neos.Flow/Classes/Security/Cryptography/BCryptHashingStrategy.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Cryptography/BCryptHashingStrategy.php	2022-05-05 10:17:17.000000000 +0200
@@ -11,12 +11,13 @@
  * source code.
  */

+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Utility\Algorithms as UtilityAlgorithms;

 /**
  * Hashing passwords using BCrypt
  */
-class BCryptHashingStrategy implements PasswordHashingStrategyInterface
+class BCryptHashingStrategy implements PasswordHashingStrategyInterface, ImmutableInstance
 {
     /**
      * Number of rounds to use with BCrypt for hashing passwords, must be between 4 and 31
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Cryptography/FileBasedSimpleKeyService.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Cryptography/FileBasedSimpleKeyService.php
--- Packages/Framework/Neos.Flow/Classes/Security/Cryptography/FileBasedSimpleKeyService.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Cryptography/FileBasedSimpleKeyService.php	2022-05-04 13:25:11.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Utility;
 use Neos\Flow\Utility\Algorithms as UtilityAlgorithms;
 use Neos\Flow\Security\Exception as SecurityException;
@@ -21,7 +22,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class FileBasedSimpleKeyService
+class FileBasedSimpleKeyService implements ImmutableInstance
 {
     /**
      * Pattern a key name must match.
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Cryptography/HashService.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Cryptography/HashService.php
--- Packages/Framework/Neos.Flow/Classes/Security/Cryptography/HashService.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Cryptography/HashService.php	2022-05-04 13:25:34.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Cache\Frontend\StringFrontend;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Security\Exception\InvalidArgumentForHashGenerationException;
 use Neos\Flow\Security\Exception\InvalidHashException;
@@ -24,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class HashService
+class HashService implements ImmutableInstance
 {
     /**
      * A private, unique key used for encryption tasks
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Cryptography/RsaWalletServicePhp.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Cryptography/RsaWalletServicePhp.php
--- Packages/Framework/Neos.Flow/Classes/Security/Cryptography/RsaWalletServicePhp.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Cryptography/RsaWalletServicePhp.php	2022-05-04 13:26:40.000000000 +0200
@@ -12,6 +12,8 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Security\Exception as SecurityException;
 use Neos\Flow\Security\Exception\DecryptionNotAllowedException;
 use Neos\Flow\Security\Exception\InvalidKeyPairIdException;
@@ -23,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class RsaWalletServicePhp implements RsaWalletServiceInterface
+class RsaWalletServicePhp implements RsaWalletServiceInterface, ResettableInstance
 {
     /**
      * @var string
@@ -468,4 +470,9 @@
         }
         return $bytes;
     }
+
+    public function resetInstance(): void
+    {
+        $this->keys = [];
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Policy/PolicyService.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Policy/PolicyService.php
--- Packages/Framework/Neos.Flow/Classes/Security/Policy/PolicyService.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Policy/PolicyService.php	2022-05-04 15:32:43.000000000 +0200
@@ -16,7 +16,9 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Configuration\ConfigurationManager;
 use Neos\Flow\Configuration\Exception\InvalidConfigurationTypeException;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Security\Authorization\Privilege\Parameter\PrivilegeParameterDefinition;
 use Neos\Flow\Security\Authorization\Privilege\PrivilegeTarget;
 use Neos\Flow\Security\Exception\NoSuchRoleException;
@@ -32,7 +34,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class PolicyService
+class PolicyService implements ImmutableInstance
 {
     /**
      * @var bool
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/Policy/RoleConverter.php Packages-Patched/Framework/Neos.Flow/Classes/Security/Policy/RoleConverter.php
--- Packages/Framework/Neos.Flow/Classes/Security/Policy/RoleConverter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/Policy/RoleConverter.php	2022-05-04 13:27:15.000000000 +0200
@@ -14,6 +14,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Property\PropertyMappingConfigurationInterface;
 use Neos\Flow\Property\TypeConverter\AbstractTypeConverter;
 use Neos\Flow\Security\Exception\NoSuchRoleException;
@@ -24,7 +25,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class RoleConverter extends AbstractTypeConverter
+class RoleConverter extends AbstractTypeConverter implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Framework/Neos.Flow/Classes/Security/RequestPatternResolver.php Packages-Patched/Framework/Neos.Flow/Classes/Security/RequestPatternResolver.php
--- Packages/Framework/Neos.Flow/Classes/Security/RequestPatternResolver.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Security/RequestPatternResolver.php	2022-05-04 13:19:25.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;

 /**
@@ -19,7 +20,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class RequestPatternResolver
+class RequestPatternResolver implements ImmutableInstance
 {
     /**
      * @var ObjectManagerInterface
diff -u -r Packages/Framework/Neos.Flow/Classes/Session/Aspect/LazyLoadingAspect.php Packages-Patched/Framework/Neos.Flow/Classes/Session/Aspect/LazyLoadingAspect.php
--- Packages/Framework/Neos.Flow/Classes/Session/Aspect/LazyLoadingAspect.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Session/Aspect/LazyLoadingAspect.php	2022-05-04 13:30:13.000000000 +0200
@@ -13,7 +13,9 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\JoinPointInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Session\SessionManagerInterface;
 use Psr\Log\LoggerInterface;

@@ -24,7 +26,7 @@
  * @Flow\Introduce("filter(Neos\Flow\Session\Aspect\SessionObjectMethodsPointcutFilter)", interfaceName = "Neos\Flow\Session\Aspect\LazyLoadingProxyInterface")
  * @Flow\Scope("singleton")
  */
-class LazyLoadingAspect
+class LazyLoadingAspect implements ResettableInstance
 {
     /**
      * @Flow\Inject
@@ -122,4 +124,9 @@
             return $this->sessionOriginalInstances[$objectName]->$methodName(...$arguments);
         }
     }
+
+    public function resetInstance(): void
+    {
+        $this->sessionOriginalInstances = [];
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Session/Aspect/LoggingAspect.php Packages-Patched/Framework/Neos.Flow/Classes/Session/Aspect/LoggingAspect.php
--- Packages/Framework/Neos.Flow/Classes/Session/Aspect/LoggingAspect.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Session/Aspect/LoggingAspect.php	2022-05-04 13:30:19.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\JoinPointInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Session\SessionInterface;
 use Psr\Log\LoggerInterface;

@@ -22,7 +23,7 @@
  * @Flow\Aspect
  * @Flow\Scope("singleton")
  */
-class LoggingAspect
+class LoggingAspect implements ImmutableInstance
 {
     /**
      * @Flow\Inject(name="Neos.Flow:SecurityLogger")
diff -u -r Packages/Framework/Neos.Flow/Classes/Session/Aspect/SessionObjectMethodsPointcutFilter.php Packages-Patched/Framework/Neos.Flow/Classes/Session/Aspect/SessionObjectMethodsPointcutFilter.php
--- Packages/Framework/Neos.Flow/Classes/Session/Aspect/SessionObjectMethodsPointcutFilter.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Session/Aspect/SessionObjectMethodsPointcutFilter.php	2022-05-04 13:30:24.000000000 +0200
@@ -16,6 +16,7 @@
 use Neos\Flow\ObjectManagement\CompileTimeObjectManager;
 use Neos\Flow\ObjectManagement\Configuration\Configuration as ObjectConfiguration;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Reflection\ClassReflection;

 /**
@@ -23,7 +24,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class SessionObjectMethodsPointcutFilter implements PointcutFilterInterface
+class SessionObjectMethodsPointcutFilter implements PointcutFilterInterface, ImmutableInstance
 {
     /**
      * @var CompileTimeObjectManager
diff -u -r Packages/Framework/Neos.Flow/Classes/Session/SessionManager.php Packages-Patched/Framework/Neos.Flow/Classes/Session/SessionManager.php
--- Packages/Framework/Neos.Flow/Classes/Session/SessionManager.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Session/SessionManager.php	2022-05-04 13:28:13.000000000 +0200
@@ -14,6 +14,7 @@
 use Neos\Flow\Annotations as Flow;
 use Neos\Cache\Frontend\VariableFrontend;
 use Neos\Flow\Http\Cookie;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Utility\Algorithms;

 /**
@@ -21,7 +22,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class SessionManager implements SessionManagerInterface
+class SessionManager implements SessionManagerInterface, ResettableInstance
 {
     /**
      * @var SessionInterface
@@ -164,4 +165,10 @@
         }
         return count($sessions);
     }
+
+    public function resetInstance(): void
+    {
+        $this->currentSession = null;
+        $this->remoteSessions = [];
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Session/TransientSession.php Packages-Patched/Framework/Neos.Flow/Classes/Session/TransientSession.php
--- Packages/Framework/Neos.Flow/Classes/Session/TransientSession.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Session/TransientSession.php	2022-05-04 13:29:41.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Core\Bootstrap;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Utility\Algorithms;

 /**
@@ -23,7 +24,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class TransientSession implements SessionInterface
+class TransientSession implements SessionInterface, ResettableInstance
 {
     /**
      * The session Id
@@ -292,4 +293,13 @@
         }
         return array_keys($this->tags);
     }
+
+    public function resetInstance(): void
+    {
+        $this->sessionId = null;
+        $this->started = false;
+        $this->data = [];
+        $this->lastActivityTimestamp = null;
+        $this->tags = null;
+    }
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/SignalSlot/Dispatcher.php Packages-Patched/Framework/Neos.Flow/Classes/SignalSlot/Dispatcher.php
--- Packages/Framework/Neos.Flow/Classes/SignalSlot/Dispatcher.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/SignalSlot/Dispatcher.php	2022-05-04 13:30:28.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;

 /**
@@ -22,7 +23,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class Dispatcher
+class Dispatcher implements ImmutableInstance
 {
     /**
      * @var ObjectManagerInterface
diff -u -r Packages/Framework/Neos.Flow/Classes/SignalSlot/SignalAspect.php Packages-Patched/Framework/Neos.Flow/Classes/SignalSlot/SignalAspect.php
--- Packages/Framework/Neos.Flow/Classes/SignalSlot/SignalAspect.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/SignalSlot/SignalAspect.php	2022-05-04 13:30:33.000000000 +0200
@@ -15,6 +15,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Aop\JoinPointInterface;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Aspect which connects signal methods with the Signal Dispatcher
@@ -22,7 +23,7 @@
  * @Flow\Scope("singleton")
  * @Flow\Aspect
  */
-class SignalAspect
+class SignalAspect implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.Flow/Classes/Utility/Algorithms.php Packages-Patched/Framework/Neos.Flow/Classes/Utility/Algorithms.php
--- Packages/Framework/Neos.Flow/Classes/Utility/Algorithms.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Utility/Algorithms.php	2022-05-04 13:30:37.000000000 +0200
@@ -13,6 +13,7 @@
  * source code.
  */

+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Utility\Unicode\Functions;
 use Ramsey\Uuid\Uuid;
 use Neos\Flow\Annotations as Flow;
@@ -22,7 +23,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class Algorithms
+class Algorithms implements ImmutableInstance
 {
     /**
      * Generates a universally unique identifier (UUID) according to RFC 4122.
diff -u -r Packages/Framework/Neos.Flow/Classes/Utility/Environment.php Packages-Patched/Framework/Neos.Flow/Classes/Utility/Environment.php
--- Packages/Framework/Neos.Flow/Classes/Utility/Environment.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Utility/Environment.php	2022-05-04 13:30:41.000000000 +0200
@@ -17,6 +17,7 @@
 use Neos\Flow\Core\ApplicationContext;
 use Neos\Flow\Core\Bootstrap;
 use Neos\Flow\Error\Exception as ErrorException;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\Utility\Exception as UtilityException;
 use Neos\Flow\Mvc\ActionRequest;
 use Neos\Utility\Exception\FilesException;
@@ -28,7 +29,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class Environment
+class Environment implements ImmutableInstance
 {
     /**
      * @var ApplicationContext
@@ -36,11 +37,6 @@
     protected $context;

     /**
-     * @var ActionRequest
-     */
-    protected $request;
-
-    /**
      * The base path of $temporaryDirectory. This property can (and should) be set from outside.
      * @var string
      */
diff -u -r Packages/Framework/Neos.Flow/Classes/Utility/Ip.php Packages-Patched/Framework/Neos.Flow/Classes/Utility/Ip.php
--- Packages/Framework/Neos.Flow/Classes/Utility/Ip.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Utility/Ip.php	2022-05-04 13:30:45.000000000 +0200
@@ -14,13 +14,14 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A utility class for dealing with IP addresses.
  *
  * @Flow\Scope("singleton")
  */
-class Ip
+class Ip implements ImmutableInstance
 {
     /**
      * Matches a CIDR range pattern against an IP
diff -u -r Packages/Framework/Neos.Flow/Classes/Utility/Now.php Packages-Patched/Framework/Neos.Flow/Classes/Utility/Now.php
--- Packages/Framework/Neos.Flow/Classes/Utility/Now.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Utility/Now.php	2022-05-04 13:31:24.000000000 +0200
@@ -14,6 +14,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A unique DateTime object which serves as a reliable reference for the time "now"
@@ -27,6 +28,6 @@
  * @psalm-immutable
  * @api
  */
-class Now extends \DateTimeImmutable
+class Now extends \DateTimeImmutable implements ImmutableInstance
 {
 }
diff -u -r Packages/Framework/Neos.Flow/Classes/Validation/Validator/AlphanumericValidator.php Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/AlphanumericValidator.php
--- Packages/Framework/Neos.Flow/Classes/Validation/Validator/AlphanumericValidator.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/AlphanumericValidator.php	2022-05-04 13:32:47.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Validator for alphanumeric strings.
@@ -19,7 +20,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class AlphanumericValidator extends AbstractValidator
+class AlphanumericValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * The given $value is valid if it is an alphanumeric string, which is defined as [[:alnum:]].
diff -u -r Packages/Framework/Neos.Flow/Classes/Validation/Validator/EmailAddressValidator.php Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/EmailAddressValidator.php
--- Packages/Framework/Neos.Flow/Classes/Validation/Validator/EmailAddressValidator.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/EmailAddressValidator.php	2022-05-04 13:32:50.000000000 +0200
@@ -17,6 +17,7 @@
 use Egulias\EmailValidator\Validation\NoRFCWarningsValidation;
 use Egulias\EmailValidator\Validation\RFCValidation;
 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Validator for email addresses
@@ -24,7 +25,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class EmailAddressValidator extends AbstractValidator
+class EmailAddressValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * @var array
diff -u -r Packages/Framework/Neos.Flow/Classes/Validation/Validator/FloatValidator.php Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/FloatValidator.php
--- Packages/Framework/Neos.Flow/Classes/Validation/Validator/FloatValidator.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/FloatValidator.php	2022-05-04 13:32:58.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Validator for floats.
@@ -19,7 +20,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class FloatValidator extends AbstractValidator
+class FloatValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * The given value is valid if it is of type float or a string matching the regular expression [0-9.e+-]
diff -u -r Packages/Framework/Neos.Flow/Classes/Validation/Validator/IntegerValidator.php Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/IntegerValidator.php
--- Packages/Framework/Neos.Flow/Classes/Validation/Validator/IntegerValidator.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/IntegerValidator.php	2022-05-04 13:33:02.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Validator for integers.
@@ -19,7 +20,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class IntegerValidator extends AbstractValidator
+class IntegerValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * Checks if the given value is a valid integer.
diff -u -r Packages/Framework/Neos.Flow/Classes/Validation/Validator/LabelValidator.php Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/LabelValidator.php
--- Packages/Framework/Neos.Flow/Classes/Validation/Validator/LabelValidator.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/LabelValidator.php	2022-05-04 13:33:07.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A validator for labels.
@@ -23,7 +24,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class LabelValidator extends AbstractValidator
+class LabelValidator extends AbstractValidator implements ImmutableInstance
 {
     const PATTERN_VALIDCHARACTERS = '/^[\p{L}\p{Sc} ,.:;?!%§&"\'\/+\-_=\(\)#0-9]*$/u';

diff -u -r Packages/Framework/Neos.Flow/Classes/Validation/Validator/LocaleIdentifierValidator.php Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/LocaleIdentifierValidator.php
--- Packages/Framework/Neos.Flow/Classes/Validation/Validator/LocaleIdentifierValidator.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/LocaleIdentifierValidator.php	2022-05-04 13:33:51.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\I18n\Locale;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A validator for locale identifiers.
@@ -22,7 +23,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class LocaleIdentifierValidator extends AbstractValidator
+class LocaleIdentifierValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * Is valid if the given value is a valid "locale identifier".
diff -u -r Packages/Framework/Neos.Flow/Classes/Validation/Validator/NotEmptyValidator.php Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/NotEmptyValidator.php
--- Packages/Framework/Neos.Flow/Classes/Validation/Validator/NotEmptyValidator.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/NotEmptyValidator.php	2022-05-04 13:33:55.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Validator for not empty values.
@@ -19,7 +20,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class NotEmptyValidator extends AbstractValidator
+class NotEmptyValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * This validator always needs to be executed even if the given value is empty.
diff -u -r Packages/Framework/Neos.Flow/Classes/Validation/Validator/RawValidator.php Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/RawValidator.php
--- Packages/Framework/Neos.Flow/Classes/Validation/Validator/RawValidator.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/RawValidator.php	2022-05-04 13:33:58.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * A validator which accepts any input.
@@ -19,7 +20,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class RawValidator extends AbstractValidator
+class RawValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * This validator is always valid.
diff -u -r Packages/Framework/Neos.Flow/Classes/Validation/Validator/StringValidator.php Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/StringValidator.php
--- Packages/Framework/Neos.Flow/Classes/Validation/Validator/StringValidator.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/StringValidator.php	2022-05-04 13:34:01.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Validator for strings.
@@ -19,7 +20,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class StringValidator extends AbstractValidator
+class StringValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * Checks if the given value is a string.
diff -u -r Packages/Framework/Neos.Flow/Classes/Validation/Validator/TextValidator.php Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/TextValidator.php
--- Packages/Framework/Neos.Flow/Classes/Validation/Validator/TextValidator.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/TextValidator.php	2022-05-04 13:34:04.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Validator for "plain" text.
@@ -19,7 +20,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class TextValidator extends AbstractValidator
+class TextValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * Checks if the given value is a valid text (contains no XML tags).
diff -u -r Packages/Framework/Neos.Flow/Classes/Validation/Validator/UuidValidator.php Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/UuidValidator.php
--- Packages/Framework/Neos.Flow/Classes/Validation/Validator/UuidValidator.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Validation/Validator/UuidValidator.php	2022-05-04 13:34:08.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;

 /**
  * Validator for Universally Unique Identifiers.
@@ -19,7 +20,7 @@
  * @api
  * @Flow\Scope("singleton")
  */
-class UuidValidator extends AbstractValidator
+class UuidValidator extends AbstractValidator implements ImmutableInstance
 {
     /**
      * A preg pattern to match against UUIDs
diff -u -r Packages/Framework/Neos.Flow/Classes/Validation/ValidatorResolver.php Packages-Patched/Framework/Neos.Flow/Classes/Validation/ValidatorResolver.php
--- Packages/Framework/Neos.Flow/Classes/Validation/ValidatorResolver.php	2022-04-20 16:38:02.000000000 +0200
+++ Packages-Patched/Framework/Neos.Flow/Classes/Validation/ValidatorResolver.php	2022-05-04 13:32:21.000000000 +0200
@@ -13,7 +13,9 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\ObjectManagement\Configuration\Configuration;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Reflection\ReflectionService;
 use Neos\Flow\Validation\Validator\PolyTypeObjectValidatorInterface;
 use Neos\Utility\Exception\InvalidTypeException;
@@ -29,7 +31,7 @@
  * @Flow\Scope("singleton")
  * @api
  */
-class ValidatorResolver
+class ValidatorResolver implements ResettableInstance
 {
     /**
      * Match validator names and options
@@ -496,4 +498,10 @@
         }
         return $type;
     }
+
+    public function resetInstance(): void
+    {
+        // FIXME Check if these need to be reset
+        $this->baseValidatorConjunctions = [];
+    }
 }
diff -u -r Packages/Framework/Neos.FluidAdaptor/Classes/Command/DocumentationCommandController.php Packages-Patched/Framework/Neos.FluidAdaptor/Classes/Command/DocumentationCommandController.php
--- Packages/Framework/Neos.FluidAdaptor/Classes/Command/DocumentationCommandController.php	2022-04-06 22:54:38.000000000 +0200
+++ Packages-Patched/Framework/Neos.FluidAdaptor/Classes/Command/DocumentationCommandController.php	2022-05-04 13:34:12.000000000 +0200
@@ -15,6 +15,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Cli\CommandController;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\FluidAdaptor\Service;

 /**
@@ -22,7 +23,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class DocumentationCommandController extends CommandController
+class DocumentationCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Framework/Neos.FluidAdaptor/Classes/Core/Cache/CacheAdaptor.php Packages-Patched/Framework/Neos.FluidAdaptor/Classes/Core/Cache/CacheAdaptor.php
--- Packages/Framework/Neos.FluidAdaptor/Classes/Core/Cache/CacheAdaptor.php	2022-04-06 22:54:38.000000000 +0200
+++ Packages-Patched/Framework/Neos.FluidAdaptor/Classes/Core/Cache/CacheAdaptor.php	2022-05-04 13:34:18.000000000 +0200
@@ -13,6 +13,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Cache\Frontend\PhpFrontend;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use TYPO3Fluid\Fluid\Core\Cache\FluidCacheInterface;
 use TYPO3Fluid\Fluid\Core\Cache\FluidCacheWarmerInterface;
 use TYPO3Fluid\Fluid\Core\Cache\StandardCacheWarmer;
@@ -20,7 +21,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class CacheAdaptor implements FluidCacheInterface
+class CacheAdaptor implements FluidCacheInterface, ImmutableInstance
 {
     /**
      * @var PhpFrontend
diff -u -r Packages/Framework/Neos.FluidAdaptor/Classes/Core/ViewHelper/ViewHelperResolver.php Packages-Patched/Framework/Neos.FluidAdaptor/Classes/Core/ViewHelper/ViewHelperResolver.php
--- Packages/Framework/Neos.FluidAdaptor/Classes/Core/ViewHelper/ViewHelperResolver.php	2022-04-06 22:54:38.000000000 +0200
+++ Packages-Patched/Framework/Neos.FluidAdaptor/Classes/Core/ViewHelper/ViewHelperResolver.php	2022-05-04 13:34:32.000000000 +0200
@@ -12,6 +12,7 @@
  */

 use Neos\Flow\Annotations as Flow;
+use Neos\Flow\ObjectManagement\ImmutableInstance;
 use Neos\Flow\ObjectManagement\ObjectManagerInterface;
 use Neos\Flow\Package\Package;
 use Neos\Flow\Package\PackageManager;
@@ -30,7 +31,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class ViewHelperResolver extends \TYPO3Fluid\Fluid\Core\ViewHelper\ViewHelperResolver
+class ViewHelperResolver extends \TYPO3Fluid\Fluid\Core\ViewHelper\ViewHelperResolver implements ImmutableInstance
 {
     /**
      * @Flow\Inject
diff -u -r Packages/Plugins/Flowpack.Neos.FrontendLogin/Classes/Command/UserCommandController.php Packages-Patched/Plugins/Flowpack.Neos.FrontendLogin/Classes/Command/UserCommandController.php
--- Packages/Plugins/Flowpack.Neos.FrontendLogin/Classes/Command/UserCommandController.php	2022-03-29 12:50:05.000000000 +0200
+++ Packages-Patched/Plugins/Flowpack.Neos.FrontendLogin/Classes/Command/UserCommandController.php	2022-05-04 13:34:48.000000000 +0200
@@ -15,6 +15,7 @@

 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Cli\CommandController;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Security\Account;
 use Neos\Neos\Domain\Exception as NeosDomainException;
 use Neos\Neos\Domain\Model\User;
@@ -25,7 +26,7 @@
  *
  * @Flow\Scope("singleton")
  */
-class UserCommandController extends CommandController
+class UserCommandController extends CommandController implements ResettableInstance
 {
     /**
      * @var string
diff -u -r Packages/Plugins/Flowpack.Neos.FrontendLogin/Classes/Controller/ModuleController.php Packages-Patched/Plugins/Flowpack.Neos.FrontendLogin/Classes/Controller/ModuleController.php
--- Packages/Plugins/Flowpack.Neos.FrontendLogin/Classes/Controller/ModuleController.php	2022-03-29 12:50:05.000000000 +0200
+++ Packages-Patched/Plugins/Flowpack.Neos.FrontendLogin/Classes/Controller/ModuleController.php	2022-05-04 13:35:21.000000000 +0200
@@ -16,6 +16,7 @@
 use Neos\Error\Messages\Message;
 use Neos\Flow\Annotations as Flow;
 use Neos\Flow\Mvc\Exception\UnsupportedRequestTypeException;
+use Neos\Flow\ObjectManagement\ResettableInstance;
 use Neos\Flow\Persistence\Exception\IllegalObjectTypeException;
 use Neos\Flow\Security\Account;
 use Neos\Flow\Security\AccountRepository;
@@ -29,7 +30,7 @@
 /**
  * @Flow\Scope("singleton")
  */
-class ModuleController extends AbstractModuleController
+class ModuleController extends AbstractModuleController implements ResettableInstance
 {
     /**
      * @Flow\Inject
@@ -393,4 +394,10 @@
             ))
         ));
     }
+
+    public function resetInstance(): void
+    {
+        parent::resetInstance();
+        $this->currentUser = null;
+    }
 }
